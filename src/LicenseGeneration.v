Require Import Coq.Strings.String.
Require Import Coq.Strings.Ascii.
Require Import Coq.Lists.List.
Require Import Coq.Arith.Arith.
Require Import Crypto.AuthorsLines.
Require Crypto.Util.Strings.String.
Import ListNotations.
Local Open Scope bool_scope.
Local Open Scope string_scope.
Local Open Scope list_scope.

Definition AuthorsLinesWithoutComments : list string
  := List.filter
       (fun line => negb (String.startswith "#" line) && (0 <? String.length line)%nat)
       AuthorsLines.

Definition year := "2015â€“2020".
Definition owner := "the fiat-crypto authors (see the AUTHORS file contents below)".
Definition owner_short := "the fiat-crypto authors".

Definition BSD_1_CLAUSE : list string :=
  ["SPDX-License-Identifier: BSD-1-Clause"
   ; ""
   ; "Copyright (c) " ++ year ++ " " ++ owner ++ " All rights reserved."
   ; ""
   ; "Redistribution and use in source and binary forms, with or without"
   ; "modification, are permitted provided that the following conditions"
   ; "are met:"
   ; "1. Redistributions of source code must retain the above copyright"
   ; "   notice, this list of conditions and the following disclaimer."
   ; ""
   ; "THIS SOFTWARE IS PROVIDED BY " ++ owner_short ++ " """"AS IS"""" AND"
   ; "ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE"
   ; "IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE"
   ; "ARE DISCLAIMED.  IN NO EVENT SHALL " ++ owner_short ++ " BE LIABLE"
   ; "FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL"
   ; "DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS"
   ; "OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)"
   ; "HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT"
   ; "LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY"
   ; "OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
   ; "SUCH DAMAGE."
  ]%string%list.

Definition MIT_0 : list string :=
  ["SPDX-License-Identifier: MIT-0"
   ; ""
   ; "Copyright " ++ year ++ " " ++ owner
   ; ""
   ; "Permission is hereby granted, free of charge, to any person obtaining"
   ; "a copy of this software and associated documentation files (the"
   ; """Software""""), to deal in the Software without restriction, including"
   ; "without limitation the rights to use, copy, modify, merge, publish,"
   ; "distribute, sublicense, and/or sell copies of the Software, and to"
   ; "permit persons to whom the Software is furnished to do so."
   ; ""
   ; "THE SOFTWARE IS PROVIDED """"AS IS"""", WITHOUT WARRANTY OF ANY KIND,"
   ; "EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF"
   ; "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND"
   ; "NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE"
   ; "LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION"
   ; "OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION"
   ; "WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  ]%string%list.

Definition copyright_lines : list string
  := Eval compute in
      let star_length := 70 in
      let make_stars n := String.string_of_list_ascii (List.repeat "*"%char n) in
      let surround_with_stars descr
          := let prestars := make_stars ((star_length - String.length descr) / 2) in
             let poststars := make_stars ((1 + star_length - String.length descr) / 2) in
             (prestars ++ descr ++ poststars)%string in
      let all_stars := make_stars star_length in
      [surround_with_stars " LICENSE of This Autogenerated File "]
        ++ MIT_0
        ++ [all_stars
            ; ""
            ; surround_with_stars " Non-commented Contents of the fiat-crypto AUTHORS file "]
        ++ AuthorsLinesWithoutComments
        ++ [all_stars].
