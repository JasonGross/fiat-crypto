rmulW = 
fun var : base_type -> Type =>
Î»
x x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20
 x21 x22 x23 x24 x25 x26 x27 x28 x29 x30 x31 x32 x33 x34 : 
 var (TWord 5),
long x35 = (M32 & x16) * x34;
long x36 = (M32 & x) * x33;
long x37 = (M32 & x0) * x32;
long x38 = (M32 & x1) * x31;
long x39 = (M32 & x2) * x30;
long x40 = (M32 & x3) * x29;
long x41 = (M32 & x4) * x28;
long x42 = (M32 & x5) * x27;
long x43 = (M32 & x6) * x26;
long x44 = (M32 & x7) * x25;
long x45 = (M32 & x8) * x24;
long x46 = (M32 & x9) * x23;
long x47 = (M32 & x10) * x22;
long x48 = (M32 & x11) * x21;
long x49 = (M32 & x12) * x20;
long x50 = (M32 & x13) * x19;
long x51 = (M32 & x14) * x18;
long x52 = (M32 & x15) * x17;
long x53 = x51 + x52;
long x54 = x50 + x53;
long x55 = x49 + x54;
long x56 = x48 + x55;
long x57 = x47 + x56;
long x58 = x46 + x57;
long x59 = x45 + x58;
long x60 = x44 + x59;
long x61 = x43 + x60;
long x62 = x42 + x61;
long x63 = x41 + x62;
long x64 = x40 + x63;
long x65 = x39 + x64;
long x66 = x38 + x65;
long x67 = x37 + x66;
long x68 = x36 + x67;
long x69 = 0b00010001 * x68;
long x70 = x35 + x69;
int x71 = (int) (x70 >>> 0b00010111);
long x72 = (M32 & x15) * x34;
long x73 = (M32 & x16) * x33;
long x74 = x72 + x73;
long x75 = (M32 & x) * x32;
long x76 = (M32 & x0) * x31;
long x77 = (M32 & x1) * x30;
long x78 = (M32 & x2) * x29;
long x79 = (M32 & x3) * x28;
long x80 = (M32 & x4) * x27;
long x81 = (M32 & x5) * x26;
long x82 = (M32 & x6) * x25;
long x83 = (M32 & x7) * x24;
long x84 = (M32 & x8) * x23;
long x85 = (M32 & x9) * x22;
long x86 = (M32 & x10) * x21;
long x87 = (M32 & x11) * x20;
long x88 = (M32 & x12) * x19;
long x89 = (M32 & x13) * x18;
long x90 = (M32 & x14) * x17;
long x91 = x89 + x90;
long x92 = x88 + x91;
long x93 = x87 + x92;
long x94 = x86 + x93;
long x95 = x85 + x94;
long x96 = x84 + x95;
long x97 = x83 + x96;
long x98 = x82 + x97;
long x99 = x81 + x98;
long x100 = x80 + x99;
long x101 = x79 + x100;
long x102 = x78 + x101;
long x103 = x77 + x102;
long x104 = x76 + x103;
long x105 = x75 + x104;
long x106 = 0b00010001 * x105;
long x107 = x74 + x106;
long x108 = x71 + x107;
int x109 = (int) (x108 >>> 0b00010111);
long x110 = (M32 & x14) * x34;
long x111 = (M32 & x15) * x33;
long x112 = (M32 & x16) * x32;
long x113 = x111 + x112;
long x114 = x110 + x113;
long x115 = (M32 & x) * x31;
long x116 = (M32 & x0) * x30;
long x117 = (M32 & x1) * x29;
long x118 = (M32 & x2) * x28;
long x119 = (M32 & x3) * x27;
long x120 = (M32 & x4) * x26;
long x121 = (M32 & x5) * x25;
long x122 = (M32 & x6) * x24;
long x123 = (M32 & x7) * x23;
long x124 = (M32 & x8) * x22;
long x125 = (M32 & x9) * x21;
long x126 = (M32 & x10) * x20;
long x127 = (M32 & x11) * x19;
long x128 = (M32 & x12) * x18;
long x129 = (M32 & x13) * x17;
long x130 = x128 + x129;
long x131 = x127 + x130;
long x132 = x126 + x131;
long x133 = x125 + x132;
long x134 = x124 + x133;
long x135 = x123 + x134;
long x136 = x122 + x135;
long x137 = x121 + x136;
long x138 = x120 + x137;
long x139 = x119 + x138;
long x140 = x118 + x139;
long x141 = x117 + x140;
long x142 = x116 + x141;
long x143 = x115 + x142;
long x144 = 0b00010001 * x143;
long x145 = x114 + x144;
long x146 = x109 + x145;
int x147 = (int) (x146 >>> 0b00010111);
long x148 = (M32 & x13) * x34;
long x149 = (M32 & x14) * x33;
long x150 = (M32 & x15) * x32;
long x151 = (M32 & x16) * x31;
long x152 = x150 + x151;
long x153 = x149 + x152;
long x154 = x148 + x153;
long x155 = (M32 & x) * x30;
long x156 = (M32 & x0) * x29;
long x157 = (M32 & x1) * x28;
long x158 = (M32 & x2) * x27;
long x159 = (M32 & x3) * x26;
long x160 = (M32 & x4) * x25;
long x161 = (M32 & x5) * x24;
long x162 = (M32 & x6) * x23;
long x163 = (M32 & x7) * x22;
long x164 = (M32 & x8) * x21;
long x165 = (M32 & x9) * x20;
long x166 = (M32 & x10) * x19;
long x167 = (M32 & x11) * x18;
long x168 = (M32 & x12) * x17;
long x169 = x167 + x168;
long x170 = x166 + x169;
long x171 = x165 + x170;
long x172 = x164 + x171;
long x173 = x163 + x172;
long x174 = x162 + x173;
long x175 = x161 + x174;
long x176 = x160 + x175;
long x177 = x159 + x176;
long x178 = x158 + x177;
long x179 = x157 + x178;
long x180 = x156 + x179;
long x181 = x155 + x180;
long x182 = 0b00010001 * x181;
long x183 = x154 + x182;
long x184 = x147 + x183;
int x185 = (int) (x184 >>> 0b00010111);
long x186 = (M32 & x12) * x34;
long x187 = (M32 & x13) * x33;
long x188 = (M32 & x14) * x32;
long x189 = (M32 & x15) * x31;
long x190 = (M32 & x16) * x30;
long x191 = x189 + x190;
long x192 = x188 + x191;
long x193 = x187 + x192;
long x194 = x186 + x193;
long x195 = (M32 & x) * x29;
long x196 = (M32 & x0) * x28;
long x197 = (M32 & x1) * x27;
long x198 = (M32 & x2) * x26;
long x199 = (M32 & x3) * x25;
long x200 = (M32 & x4) * x24;
long x201 = (M32 & x5) * x23;
long x202 = (M32 & x6) * x22;
long x203 = (M32 & x7) * x21;
long x204 = (M32 & x8) * x20;
long x205 = (M32 & x9) * x19;
long x206 = (M32 & x10) * x18;
long x207 = (M32 & x11) * x17;
long x208 = x206 + x207;
long x209 = x205 + x208;
long x210 = x204 + x209;
long x211 = x203 + x210;
long x212 = x202 + x211;
long x213 = x201 + x212;
long x214 = x200 + x213;
long x215 = x199 + x214;
long x216 = x198 + x215;
long x217 = x197 + x216;
long x218 = x196 + x217;
long x219 = x195 + x218;
long x220 = 0b00010001 * x219;
long x221 = x194 + x220;
long x222 = x185 + x221;
int x223 = (int) (x222 >>> 0b00010111);
long x224 = (M32 & x11) * x34;
long x225 = (M32 & x12) * x33;
long x226 = (M32 & x13) * x32;
long x227 = (M32 & x14) * x31;
long x228 = (M32 & x15) * x30;
long x229 = (M32 & x16) * x29;
long x230 = x228 + x229;
long x231 = x227 + x230;
long x232 = x226 + x231;
long x233 = x225 + x232;
long x234 = x224 + x233;
long x235 = (M32 & x) * x28;
long x236 = (M32 & x0) * x27;
long x237 = (M32 & x1) * x26;
long x238 = (M32 & x2) * x25;
long x239 = (M32 & x3) * x24;
long x240 = (M32 & x4) * x23;
long x241 = (M32 & x5) * x22;
long x242 = (M32 & x6) * x21;
long x243 = (M32 & x7) * x20;
long x244 = (M32 & x8) * x19;
long x245 = (M32 & x9) * x18;
long x246 = (M32 & x10) * x17;
long x247 = x245 + x246;
long x248 = x244 + x247;
long x249 = x243 + x248;
long x250 = x242 + x249;
long x251 = x241 + x250;
long x252 = x240 + x251;
long x253 = x239 + x252;
long x254 = x238 + x253;
long x255 = x237 + x254;
long x256 = x236 + x255;
long x257 = x235 + x256;
long x258 = 0b00010001 * x257;
long x259 = x234 + x258;
long x260 = x223 + x259;
int x261 = (int) (x260 >>> 0b00010111);
long x262 = (M32 & x10) * x34;
long x263 = (M32 & x11) * x33;
long x264 = (M32 & x12) * x32;
long x265 = (M32 & x13) * x31;
long x266 = (M32 & x14) * x30;
long x267 = (M32 & x15) * x29;
long x268 = (M32 & x16) * x28;
long x269 = x267 + x268;
long x270 = x266 + x269;
long x271 = x265 + x270;
long x272 = x264 + x271;
long x273 = x263 + x272;
long x274 = x262 + x273;
long x275 = (M32 & x) * x27;
long x276 = (M32 & x0) * x26;
long x277 = (M32 & x1) * x25;
long x278 = (M32 & x2) * x24;
long x279 = (M32 & x3) * x23;
long x280 = (M32 & x4) * x22;
long x281 = (M32 & x5) * x21;
long x282 = (M32 & x6) * x20;
long x283 = (M32 & x7) * x19;
long x284 = (M32 & x8) * x18;
long x285 = (M32 & x9) * x17;
long x286 = x284 + x285;
long x287 = x283 + x286;
long x288 = x282 + x287;
long x289 = x281 + x288;
long x290 = x280 + x289;
long x291 = x279 + x290;
long x292 = x278 + x291;
long x293 = x277 + x292;
long x294 = x276 + x293;
long x295 = x275 + x294;
long x296 = 0b00010001 * x295;
long x297 = x274 + x296;
long x298 = x261 + x297;
int x299 = (int) (x298 >>> 0b00010111);
long x300 = (M32 & x9) * x34;
long x301 = (M32 & x10) * x33;
long x302 = (M32 & x11) * x32;
long x303 = (M32 & x12) * x31;
long x304 = (M32 & x13) * x30;
long x305 = (M32 & x14) * x29;
long x306 = (M32 & x15) * x28;
long x307 = (M32 & x16) * x27;
long x308 = x306 + x307;
long x309 = x305 + x308;
long x310 = x304 + x309;
long x311 = x303 + x310;
long x312 = x302 + x311;
long x313 = x301 + x312;
long x314 = x300 + x313;
long x315 = (M32 & x) * x26;
long x316 = (M32 & x0) * x25;
long x317 = (M32 & x1) * x24;
long x318 = (M32 & x2) * x23;
long x319 = (M32 & x3) * x22;
long x320 = (M32 & x4) * x21;
long x321 = (M32 & x5) * x20;
long x322 = (M32 & x6) * x19;
long x323 = (M32 & x7) * x18;
long x324 = (M32 & x8) * x17;
long x325 = x323 + x324;
long x326 = x322 + x325;
long x327 = x321 + x326;
long x328 = x320 + x327;
long x329 = x319 + x328;
long x330 = x318 + x329;
long x331 = x317 + x330;
long x332 = x316 + x331;
long x333 = x315 + x332;
long x334 = 0b00010001 * x333;
long x335 = x314 + x334;
long x336 = x299 + x335;
int x337 = (int) (x336 >>> 0b00010111);
long x338 = (M32 & x8) * x34;
long x339 = (M32 & x9) * x33;
long x340 = (M32 & x10) * x32;
long x341 = (M32 & x11) * x31;
long x342 = (M32 & x12) * x30;
long x343 = (M32 & x13) * x29;
long x344 = (M32 & x14) * x28;
long x345 = (M32 & x15) * x27;
long x346 = (M32 & x16) * x26;
long x347 = x345 + x346;
long x348 = x344 + x347;
long x349 = x343 + x348;
long x350 = x342 + x349;
long x351 = x341 + x350;
long x352 = x340 + x351;
long x353 = x339 + x352;
long x354 = x338 + x353;
long x355 = (M32 & x) * x25;
long x356 = (M32 & x0) * x24;
long x357 = (M32 & x1) * x23;
long x358 = (M32 & x2) * x22;
long x359 = (M32 & x3) * x21;
long x360 = (M32 & x4) * x20;
long x361 = (M32 & x5) * x19;
long x362 = (M32 & x6) * x18;
long x363 = (M32 & x7) * x17;
long x364 = x362 + x363;
long x365 = x361 + x364;
long x366 = x360 + x365;
long x367 = x359 + x366;
long x368 = x358 + x367;
long x369 = x357 + x368;
long x370 = x356 + x369;
long x371 = x355 + x370;
long x372 = 0b00010001 * x371;
long x373 = x354 + x372;
long x374 = x337 + x373;
int x375 = (int) (x374 >>> 0b00010111);
long x376 = (M32 & x7) * x34;
long x377 = (M32 & x8) * x33;
long x378 = (M32 & x9) * x32;
long x379 = (M32 & x10) * x31;
long x380 = (M32 & x11) * x30;
long x381 = (M32 & x12) * x29;
long x382 = (M32 & x13) * x28;
long x383 = (M32 & x14) * x27;
long x384 = (M32 & x15) * x26;
long x385 = (M32 & x16) * x25;
long x386 = x384 + x385;
long x387 = x383 + x386;
long x388 = x382 + x387;
long x389 = x381 + x388;
long x390 = x380 + x389;
long x391 = x379 + x390;
long x392 = x378 + x391;
long x393 = x377 + x392;
long x394 = x376 + x393;
long x395 = (M32 & x) * x24;
long x396 = (M32 & x0) * x23;
long x397 = (M32 & x1) * x22;
long x398 = (M32 & x2) * x21;
long x399 = (M32 & x3) * x20;
long x400 = (M32 & x4) * x19;
long x401 = (M32 & x5) * x18;
long x402 = (M32 & x6) * x17;
long x403 = x401 + x402;
long x404 = x400 + x403;
long x405 = x399 + x404;
long x406 = x398 + x405;
long x407 = x397 + x406;
long x408 = x396 + x407;
long x409 = x395 + x408;
long x410 = 0b00010001 * x409;
long x411 = x394 + x410;
long x412 = x375 + x411;
int x413 = (int) (x412 >>> 0b00010111);
long x414 = (M32 & x6) * x34;
long x415 = (M32 & x7) * x33;
long x416 = (M32 & x8) * x32;
long x417 = (M32 & x9) * x31;
long x418 = (M32 & x10) * x30;
long x419 = (M32 & x11) * x29;
long x420 = (M32 & x12) * x28;
long x421 = (M32 & x13) * x27;
long x422 = (M32 & x14) * x26;
long x423 = (M32 & x15) * x25;
long x424 = (M32 & x16) * x24;
long x425 = x423 + x424;
long x426 = x422 + x425;
long x427 = x421 + x426;
long x428 = x420 + x427;
long x429 = x419 + x428;
long x430 = x418 + x429;
long x431 = x417 + x430;
long x432 = x416 + x431;
long x433 = x415 + x432;
long x434 = x414 + x433;
long x435 = (M32 & x) * x23;
long x436 = (M32 & x0) * x22;
long x437 = (M32 & x1) * x21;
long x438 = (M32 & x2) * x20;
long x439 = (M32 & x3) * x19;
long x440 = (M32 & x4) * x18;
long x441 = (M32 & x5) * x17;
long x442 = x440 + x441;
long x443 = x439 + x442;
long x444 = x438 + x443;
long x445 = x437 + x444;
long x446 = x436 + x445;
long x447 = x435 + x446;
long x448 = 0b00010001 * x447;
long x449 = x434 + x448;
long x450 = x413 + x449;
int x451 = (int) (x450 >>> 0b00010111);
long x452 = (M32 & x5) * x34;
long x453 = (M32 & x6) * x33;
long x454 = (M32 & x7) * x32;
long x455 = (M32 & x8) * x31;
long x456 = (M32 & x9) * x30;
long x457 = (M32 & x10) * x29;
long x458 = (M32 & x11) * x28;
long x459 = (M32 & x12) * x27;
long x460 = (M32 & x13) * x26;
long x461 = (M32 & x14) * x25;
long x462 = (M32 & x15) * x24;
long x463 = (M32 & x16) * x23;
long x464 = x462 + x463;
long x465 = x461 + x464;
long x466 = x460 + x465;
long x467 = x459 + x466;
long x468 = x458 + x467;
long x469 = x457 + x468;
long x470 = x456 + x469;
long x471 = x455 + x470;
long x472 = x454 + x471;
long x473 = x453 + x472;
long x474 = x452 + x473;
long x475 = (M32 & x) * x22;
long x476 = (M32 & x0) * x21;
long x477 = (M32 & x1) * x20;
long x478 = (M32 & x2) * x19;
long x479 = (M32 & x3) * x18;
long x480 = (M32 & x4) * x17;
long x481 = x479 + x480;
long x482 = x478 + x481;
long x483 = x477 + x482;
long x484 = x476 + x483;
long x485 = x475 + x484;
long x486 = 0b00010001 * x485;
long x487 = x474 + x486;
long x488 = x451 + x487;
int x489 = (int) (x488 >>> 0b00010111);
long x490 = (M32 & x4) * x34;
long x491 = (M32 & x5) * x33;
long x492 = (M32 & x6) * x32;
long x493 = (M32 & x7) * x31;
long x494 = (M32 & x8) * x30;
long x495 = (M32 & x9) * x29;
long x496 = (M32 & x10) * x28;
long x497 = (M32 & x11) * x27;
long x498 = (M32 & x12) * x26;
long x499 = (M32 & x13) * x25;
long x500 = (M32 & x14) * x24;
long x501 = (M32 & x15) * x23;
long x502 = (M32 & x16) * x22;
long x503 = x501 + x502;
long x504 = x500 + x503;
long x505 = x499 + x504;
long x506 = x498 + x505;
long x507 = x497 + x506;
long x508 = x496 + x507;
long x509 = x495 + x508;
long x510 = x494 + x509;
long x511 = x493 + x510;
long x512 = x492 + x511;
long x513 = x491 + x512;
long x514 = x490 + x513;
long x515 = (M32 & x) * x21;
long x516 = (M32 & x0) * x20;
long x517 = (M32 & x1) * x19;
long x518 = (M32 & x2) * x18;
long x519 = (M32 & x3) * x17;
long x520 = x518 + x519;
long x521 = x517 + x520;
long x522 = x516 + x521;
long x523 = x515 + x522;
long x524 = 0b00010001 * x523;
long x525 = x514 + x524;
long x526 = x489 + x525;
int x527 = (int) (x526 >>> 0b00010111);
long x528 = (M32 & x3) * x34;
long x529 = (M32 & x4) * x33;
long x530 = (M32 & x5) * x32;
long x531 = (M32 & x6) * x31;
long x532 = (M32 & x7) * x30;
long x533 = (M32 & x8) * x29;
long x534 = (M32 & x9) * x28;
long x535 = (M32 & x10) * x27;
long x536 = (M32 & x11) * x26;
long x537 = (M32 & x12) * x25;
long x538 = (M32 & x13) * x24;
long x539 = (M32 & x14) * x23;
long x540 = (M32 & x15) * x22;
long x541 = (M32 & x16) * x21;
long x542 = x540 + x541;
long x543 = x539 + x542;
long x544 = x538 + x543;
long x545 = x537 + x544;
long x546 = x536 + x545;
long x547 = x535 + x546;
long x548 = x534 + x547;
long x549 = x533 + x548;
long x550 = x532 + x549;
long x551 = x531 + x550;
long x552 = x530 + x551;
long x553 = x529 + x552;
long x554 = x528 + x553;
long x555 = (M32 & x) * x20;
long x556 = (M32 & x0) * x19;
long x557 = (M32 & x1) * x18;
long x558 = (M32 & x2) * x17;
long x559 = x557 + x558;
long x560 = x556 + x559;
long x561 = x555 + x560;
long x562 = 0b00010001 * x561;
long x563 = x554 + x562;
long x564 = x527 + x563;
int x565 = (int) (x564 >>> 0b00010111);
long x566 = (M32 & x2) * x34;
long x567 = (M32 & x3) * x33;
long x568 = (M32 & x4) * x32;
long x569 = (M32 & x5) * x31;
long x570 = (M32 & x6) * x30;
long x571 = (M32 & x7) * x29;
long x572 = (M32 & x8) * x28;
long x573 = (M32 & x9) * x27;
long x574 = (M32 & x10) * x26;
long x575 = (M32 & x11) * x25;
long x576 = (M32 & x12) * x24;
long x577 = (M32 & x13) * x23;
long x578 = (M32 & x14) * x22;
long x579 = (M32 & x15) * x21;
long x580 = (M32 & x16) * x20;
long x581 = x579 + x580;
long x582 = x578 + x581;
long x583 = x577 + x582;
long x584 = x576 + x583;
long x585 = x575 + x584;
long x586 = x574 + x585;
long x587 = x573 + x586;
long x588 = x572 + x587;
long x589 = x571 + x588;
long x590 = x570 + x589;
long x591 = x569 + x590;
long x592 = x568 + x591;
long x593 = x567 + x592;
long x594 = x566 + x593;
long x595 = (M32 & x) * x19;
long x596 = (M32 & x0) * x18;
long x597 = (M32 & x1) * x17;
long x598 = x596 + x597;
long x599 = x595 + x598;
long x600 = 0b00010001 * x599;
long x601 = x594 + x600;
long x602 = x565 + x601;
int x603 = (int) (x602 >>> 0b00010111);
long x604 = (M32 & x1) * x34;
long x605 = (M32 & x2) * x33;
long x606 = (M32 & x3) * x32;
long x607 = (M32 & x4) * x31;
long x608 = (M32 & x5) * x30;
long x609 = (M32 & x6) * x29;
long x610 = (M32 & x7) * x28;
long x611 = (M32 & x8) * x27;
long x612 = (M32 & x9) * x26;
long x613 = (M32 & x10) * x25;
long x614 = (M32 & x11) * x24;
long x615 = (M32 & x12) * x23;
long x616 = (M32 & x13) * x22;
long x617 = (M32 & x14) * x21;
long x618 = (M32 & x15) * x20;
long x619 = (M32 & x16) * x19;
long x620 = x618 + x619;
long x621 = x617 + x620;
long x622 = x616 + x621;
long x623 = x615 + x622;
long x624 = x614 + x623;
long x625 = x613 + x624;
long x626 = x612 + x625;
long x627 = x611 + x626;
long x628 = x610 + x627;
long x629 = x609 + x628;
long x630 = x608 + x629;
long x631 = x607 + x630;
long x632 = x606 + x631;
long x633 = x605 + x632;
long x634 = x604 + x633;
long x635 = (M32 & x) * x18;
long x636 = (M32 & x0) * x17;
long x637 = x635 + x636;
long x638 = 0b00010001 * x637;
long x639 = x634 + x638;
long x640 = x603 + x639;
int x641 = (int) (x640 >>> 0b00010111);
long x642 = (M32 & x0) * x34;
long x643 = (M32 & x1) * x33;
long x644 = (M32 & x2) * x32;
long x645 = (M32 & x3) * x31;
long x646 = (M32 & x4) * x30;
long x647 = (M32 & x5) * x29;
long x648 = (M32 & x6) * x28;
long x649 = (M32 & x7) * x27;
long x650 = (M32 & x8) * x26;
long x651 = (M32 & x9) * x25;
long x652 = (M32 & x10) * x24;
long x653 = (M32 & x11) * x23;
long x654 = (M32 & x12) * x22;
long x655 = (M32 & x13) * x21;
long x656 = (M32 & x14) * x20;
long x657 = (M32 & x15) * x19;
long x658 = (M32 & x16) * x18;
long x659 = x657 + x658;
long x660 = x656 + x659;
long x661 = x655 + x660;
long x662 = x654 + x661;
long x663 = x653 + x662;
long x664 = x652 + x663;
long x665 = x651 + x664;
long x666 = x650 + x665;
long x667 = x649 + x666;
long x668 = x648 + x667;
long x669 = x647 + x668;
long x670 = x646 + x669;
long x671 = x645 + x670;
long x672 = x644 + x671;
long x673 = x643 + x672;
long x674 = x642 + x673;
long x675 = (M32 & x) * x17;
long x676 = 0b00010001 * x675;
long x677 = x674 + x676;
long x678 = x641 + x677;
int x679 = (int) (x678 >>> 0b00010111);
long x680 = (M32 & x) * x34;
long x681 = (M32 & x0) * x33;
long x682 = (M32 & x1) * x32;
long x683 = (M32 & x2) * x31;
long x684 = (M32 & x3) * x30;
long x685 = (M32 & x4) * x29;
long x686 = (M32 & x5) * x28;
long x687 = (M32 & x6) * x27;
long x688 = (M32 & x7) * x26;
long x689 = (M32 & x8) * x25;
long x690 = (M32 & x9) * x24;
long x691 = (M32 & x10) * x23;
long x692 = (M32 & x11) * x22;
long x693 = (M32 & x12) * x21;
long x694 = (M32 & x13) * x20;
long x695 = (M32 & x14) * x19;
long x696 = (M32 & x15) * x18;
long x697 = (M32 & x16) * x17;
long x698 = x696 + x697;
long x699 = x695 + x698;
long x700 = x694 + x699;
long x701 = x693 + x700;
long x702 = x692 + x701;
long x703 = x691 + x702;
long x704 = x690 + x703;
long x705 = x689 + x704;
long x706 = x688 + x705;
long x707 = x687 + x706;
long x708 = x686 + x707;
long x709 = x685 + x708;
long x710 = x684 + x709;
long x711 = x683 + x710;
long x712 = x682 + x711;
long x713 = x681 + x712;
long x714 = x680 + x713;
long x715 = x679 + x714;
int x716 = (int) (x715 >>> 0b00010111);
int x717 = 0b00010001 * x716;
int x718 = ((int) x70) & 0b00000000011111111111111111111111;
int x719 = x717 + x718;
int x720 = (int) (x719 >>> 0b00010111);
int x721 = ((int) x108) & 0b00000000011111111111111111111111;
int x722 = x720 + x721;
int x723 = ((int) x715) & 0b00000000011111111111111111111111;
int x724 = ((int) x678) & 0b00000000011111111111111111111111;
int x725 = ((int) x640) & 0b00000000011111111111111111111111;
int x726 = ((int) x602) & 0b00000000011111111111111111111111;
int x727 = ((int) x564) & 0b00000000011111111111111111111111;
int x728 = ((int) x526) & 0b00000000011111111111111111111111;
int x729 = ((int) x488) & 0b00000000011111111111111111111111;
int x730 = ((int) x450) & 0b00000000011111111111111111111111;
int x731 = ((int) x412) & 0b00000000011111111111111111111111;
int x732 = ((int) x374) & 0b00000000011111111111111111111111;
int x733 = ((int) x336) & 0b00000000011111111111111111111111;
int x734 = ((int) x298) & 0b00000000011111111111111111111111;
int x735 = ((int) x260) & 0b00000000011111111111111111111111;
int x736 = ((int) x222) & 0b00000000011111111111111111111111;
int x737 = ((int) x184) & 0b00000000011111111111111111111111;
int x738 = (int) (x722 >>> 0b00010111);
int x739 = ((int) x146) & 0b00000000011111111111111111111111;
int x740 = x738 + x739;
int x741 = x722 & 0b00000000011111111111111111111111;
int x742 = x719 & 0b00000000011111111111111111111111;
(Return x723, Return x724, Return x725, Return x726, 
Return x727, Return x728, Return x729, Return x730, 
Return x731, Return x732, Return x733, Return x734, 
Return x735, Return x736, Return x737, Return x740, 
Return x741, Return x742)
     : Java_like
