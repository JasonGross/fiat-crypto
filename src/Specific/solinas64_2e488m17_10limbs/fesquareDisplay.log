square = λ var : Z.Syntax.base_type → Type,
λ '(x16, x17, x15, x13, x11, x9, x7, x5, x3, x1)%core,
uint128_t x18 = (0x2 * ((uint128_t)x16 * x16));
uint128_t x19 = ((0x2 * ((uint128_t)x17 * x16)) + (0x2 * ((uint128_t)x16 * x17)));
uint128_t x20 = ((0x2 * ((uint128_t)x15 * x16)) + ((0x2 * ((uint128_t)x17 * x17)) + (0x2 * ((uint128_t)x16 * x15))));
uint128_t x21 = ((0x2 * ((uint128_t)x13 * x16)) + ((0x2 * ((uint128_t)x15 * x17)) + ((0x2 * ((uint128_t)x17 * x15)) + (0x2 * ((uint128_t)x16 * x13)))));
uint128_t x22 = (((uint128_t)x11 * x16) + (((uint128_t)x13 * x17) + (((uint128_t)x15 * x15) + (((uint128_t)x17 * x13) + ((uint128_t)x16 * x11)))));
uint128_t x23 = ((0x2 * ((uint128_t)x9 * x16)) + (((uint128_t)x11 * x17) + (((uint128_t)x13 * x15) + (((uint128_t)x15 * x13) + (((uint128_t)x17 * x11) + (0x2 * ((uint128_t)x16 * x9)))))));
uint128_t x24 = ((0x2 * ((uint128_t)x7 * x16)) + ((0x2 * ((uint128_t)x9 * x17)) + (((uint128_t)x11 * x15) + (((uint128_t)x13 * x13) + (((uint128_t)x15 * x11) + ((0x2 * ((uint128_t)x17 * x9)) + (0x2 * ((uint128_t)x16 * x7))))))));
uint128_t x25 = ((0x2 * ((uint128_t)x5 * x16)) + ((0x2 * ((uint128_t)x7 * x17)) + ((0x2 * ((uint128_t)x9 * x15)) + (((uint128_t)x11 * x13) + (((uint128_t)x13 * x11) + ((0x2 * ((uint128_t)x15 * x9)) + ((0x2 * ((uint128_t)x17 * x7)) + (0x2 * ((uint128_t)x16 * x5)))))))));
uint128_t x26 = ((0x2 * ((uint128_t)x3 * x16)) + ((0x2 * ((uint128_t)x5 * x17)) + ((0x2 * ((uint128_t)x7 * x15)) + ((0x2 * ((uint128_t)x9 * x13)) + (((uint128_t)x11 * x11) + ((0x2 * ((uint128_t)x13 * x9)) + ((0x2 * ((uint128_t)x15 * x7)) + ((0x2 * ((uint128_t)x17 * x5)) + (0x2 * ((uint128_t)x16 * x3))))))))));
uint128_t x27 = (((uint128_t)x1 * x16) + (((uint128_t)x3 * x17) + (((uint128_t)x5 * x15) + (((uint128_t)x7 * x13) + (((uint128_t)x9 * x11) + (((uint128_t)x11 * x9) + (((uint128_t)x13 * x7) + (((uint128_t)x15 * x5) + (((uint128_t)x17 * x3) + ((uint128_t)x16 * x1))))))))));
uint128_t x28 = (((uint128_t)x1 * x17) + (((uint128_t)x3 * x15) + (((uint128_t)x5 * x13) + (((uint128_t)x7 * x11) + ((0x2 * ((uint128_t)x9 * x9)) + (((uint128_t)x11 * x7) + (((uint128_t)x13 * x5) + (((uint128_t)x15 * x3) + ((uint128_t)x17 * x1)))))))));
uint128_t x29 = (((uint128_t)x1 * x15) + (((uint128_t)x3 * x13) + (((uint128_t)x5 * x11) + ((0x2 * ((uint128_t)x7 * x9)) + ((0x2 * ((uint128_t)x9 * x7)) + (((uint128_t)x11 * x5) + (((uint128_t)x13 * x3) + ((uint128_t)x15 * x1))))))));
uint128_t x30 = (((uint128_t)x1 * x13) + (((uint128_t)x3 * x11) + ((0x2 * ((uint128_t)x5 * x9)) + ((0x2 * ((uint128_t)x7 * x7)) + ((0x2 * ((uint128_t)x9 * x5)) + (((uint128_t)x11 * x3) + ((uint128_t)x13 * x1)))))));
uint128_t x31 = (((uint128_t)x1 * x11) + ((0x2 * ((uint128_t)x3 * x9)) + ((0x2 * ((uint128_t)x5 * x7)) + ((0x2 * ((uint128_t)x7 * x5)) + ((0x2 * ((uint128_t)x9 * x3)) + ((uint128_t)x11 * x1))))));
uint128_t x32 = (((uint128_t)x1 * x9) + (((uint128_t)x3 * x7) + (((uint128_t)x5 * x5) + (((uint128_t)x7 * x3) + ((uint128_t)x9 * x1)))));
uint128_t x33 = (((uint128_t)x1 * x7) + (((uint128_t)x3 * x5) + (((uint128_t)x5 * x3) + ((uint128_t)x7 * x1))));
uint128_t x34 = (((uint128_t)x1 * x5) + (((uint128_t)x3 * x3) + ((uint128_t)x5 * x1)));
uint128_t x35 = (((uint128_t)x1 * x3) + ((uint128_t)x3 * x1));
uint128_t x36 = ((uint128_t)x1 * x1);
uint128_t x37 = (x28 + (0x11 * x18));
uint128_t x38 = (x29 + (0x11 * x19));
uint128_t x39 = (x30 + (0x11 * x20));
uint128_t x40 = (x31 + (0x11 * x21));
uint128_t x41 = (x32 + (0x11 * x22));
uint128_t x42 = (x33 + (0x11 * x23));
uint128_t x43 = (x34 + (0x11 * x24));
uint128_t x44 = (x35 + (0x11 * x25));
uint128_t x45 = (x36 + (0x11 * x26));
uint64_t x46 = (uint64_t) (x45 >> 0x31);
uint64_t x47 = ((uint64_t)x45 & 0x1ffffffffffff);
uint128_t x48 = (x46 + x44);
uint64_t x49 = (uint64_t) (x48 >> 0x31);
uint64_t x50 = ((uint64_t)x48 & 0x1ffffffffffff);
uint128_t x51 = (x49 + x43);
uint64_t x52 = (uint64_t) (x51 >> 0x31);
uint64_t x53 = ((uint64_t)x51 & 0x1ffffffffffff);
uint128_t x54 = (x52 + x42);
uint64_t x55 = (uint64_t) (x54 >> 0x31);
uint64_t x56 = ((uint64_t)x54 & 0x1ffffffffffff);
uint128_t x57 = (x55 + x41);
uint64_t x58 = (uint64_t) (x57 >> 0x30);
uint64_t x59 = ((uint64_t)x57 & 0xffffffffffff);
uint128_t x60 = (x58 + x40);
uint64_t x61 = (uint64_t) (x60 >> 0x31);
uint64_t x62 = ((uint64_t)x60 & 0x1ffffffffffff);
uint128_t x63 = (x61 + x39);
uint64_t x64 = (uint64_t) (x63 >> 0x31);
uint64_t x65 = ((uint64_t)x63 & 0x1ffffffffffff);
uint128_t x66 = (x64 + x38);
uint64_t x67 = (uint64_t) (x66 >> 0x31);
uint64_t x68 = ((uint64_t)x66 & 0x1ffffffffffff);
uint128_t x69 = (x67 + x37);
uint64_t x70 = (uint64_t) (x69 >> 0x31);
uint64_t x71 = ((uint64_t)x69 & 0x1ffffffffffff);
uint128_t x72 = (x70 + x27);
uint64_t x73 = (uint64_t) (x72 >> 0x30);
uint64_t x74 = ((uint64_t)x72 & 0xffffffffffff);
uint64_t x75 = (x47 + (0x11 * x73));
uint64_t x76 = (x75 >> 0x31);
uint64_t x77 = (x75 & 0x1ffffffffffff);
uint64_t x78 = (x76 + x50);
uint64_t x79 = (x78 >> 0x31);
uint64_t x80 = (x78 & 0x1ffffffffffff);
return (Return x74, Return x71, Return x68, Return x65, Return x62, Return x59, Return x56, (x79 + x53), Return x80, Return x77)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t -> uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
