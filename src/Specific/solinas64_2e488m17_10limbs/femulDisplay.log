mul = λ var : Z.Syntax.base_type → Type,
λ '(x18, x19, x17, x15, x13, x11, x9, x7, x5, x3, (x36, x37, x35, x33, x31, x29, x27, x25, x23, x21))%core,
uint128_t x38 = (0x2 * ((uint128_t)x18 * x36));
uint128_t x39 = ((0x2 * ((uint128_t)x19 * x36)) + (0x2 * ((uint128_t)x18 * x37)));
uint128_t x40 = ((0x2 * ((uint128_t)x17 * x36)) + ((0x2 * ((uint128_t)x19 * x37)) + (0x2 * ((uint128_t)x18 * x35))));
uint128_t x41 = ((0x2 * ((uint128_t)x15 * x36)) + ((0x2 * ((uint128_t)x17 * x37)) + ((0x2 * ((uint128_t)x19 * x35)) + (0x2 * ((uint128_t)x18 * x33)))));
uint128_t x42 = (((uint128_t)x13 * x36) + (((uint128_t)x15 * x37) + (((uint128_t)x17 * x35) + (((uint128_t)x19 * x33) + ((uint128_t)x18 * x31)))));
uint128_t x43 = ((0x2 * ((uint128_t)x11 * x36)) + (((uint128_t)x13 * x37) + (((uint128_t)x15 * x35) + (((uint128_t)x17 * x33) + (((uint128_t)x19 * x31) + (0x2 * ((uint128_t)x18 * x29)))))));
uint128_t x44 = ((0x2 * ((uint128_t)x9 * x36)) + ((0x2 * ((uint128_t)x11 * x37)) + (((uint128_t)x13 * x35) + (((uint128_t)x15 * x33) + (((uint128_t)x17 * x31) + ((0x2 * ((uint128_t)x19 * x29)) + (0x2 * ((uint128_t)x18 * x27))))))));
uint128_t x45 = ((0x2 * ((uint128_t)x7 * x36)) + ((0x2 * ((uint128_t)x9 * x37)) + ((0x2 * ((uint128_t)x11 * x35)) + (((uint128_t)x13 * x33) + (((uint128_t)x15 * x31) + ((0x2 * ((uint128_t)x17 * x29)) + ((0x2 * ((uint128_t)x19 * x27)) + (0x2 * ((uint128_t)x18 * x25)))))))));
uint128_t x46 = ((0x2 * ((uint128_t)x5 * x36)) + ((0x2 * ((uint128_t)x7 * x37)) + ((0x2 * ((uint128_t)x9 * x35)) + ((0x2 * ((uint128_t)x11 * x33)) + (((uint128_t)x13 * x31) + ((0x2 * ((uint128_t)x15 * x29)) + ((0x2 * ((uint128_t)x17 * x27)) + ((0x2 * ((uint128_t)x19 * x25)) + (0x2 * ((uint128_t)x18 * x23))))))))));
uint128_t x47 = (((uint128_t)x3 * x36) + (((uint128_t)x5 * x37) + (((uint128_t)x7 * x35) + (((uint128_t)x9 * x33) + (((uint128_t)x11 * x31) + (((uint128_t)x13 * x29) + (((uint128_t)x15 * x27) + (((uint128_t)x17 * x25) + (((uint128_t)x19 * x23) + ((uint128_t)x18 * x21))))))))));
uint128_t x48 = (((uint128_t)x3 * x37) + (((uint128_t)x5 * x35) + (((uint128_t)x7 * x33) + (((uint128_t)x9 * x31) + ((0x2 * ((uint128_t)x11 * x29)) + (((uint128_t)x13 * x27) + (((uint128_t)x15 * x25) + (((uint128_t)x17 * x23) + ((uint128_t)x19 * x21)))))))));
uint128_t x49 = (((uint128_t)x3 * x35) + (((uint128_t)x5 * x33) + (((uint128_t)x7 * x31) + ((0x2 * ((uint128_t)x9 * x29)) + ((0x2 * ((uint128_t)x11 * x27)) + (((uint128_t)x13 * x25) + (((uint128_t)x15 * x23) + ((uint128_t)x17 * x21))))))));
uint128_t x50 = (((uint128_t)x3 * x33) + (((uint128_t)x5 * x31) + ((0x2 * ((uint128_t)x7 * x29)) + ((0x2 * ((uint128_t)x9 * x27)) + ((0x2 * ((uint128_t)x11 * x25)) + (((uint128_t)x13 * x23) + ((uint128_t)x15 * x21)))))));
uint128_t x51 = (((uint128_t)x3 * x31) + ((0x2 * ((uint128_t)x5 * x29)) + ((0x2 * ((uint128_t)x7 * x27)) + ((0x2 * ((uint128_t)x9 * x25)) + ((0x2 * ((uint128_t)x11 * x23)) + ((uint128_t)x13 * x21))))));
uint128_t x52 = (((uint128_t)x3 * x29) + (((uint128_t)x5 * x27) + (((uint128_t)x7 * x25) + (((uint128_t)x9 * x23) + ((uint128_t)x11 * x21)))));
uint128_t x53 = (((uint128_t)x3 * x27) + (((uint128_t)x5 * x25) + (((uint128_t)x7 * x23) + ((uint128_t)x9 * x21))));
uint128_t x54 = (((uint128_t)x3 * x25) + (((uint128_t)x5 * x23) + ((uint128_t)x7 * x21)));
uint128_t x55 = (((uint128_t)x3 * x23) + ((uint128_t)x5 * x21));
uint128_t x56 = ((uint128_t)x3 * x21);
uint128_t x57 = (x48 + (0x11 * x38));
uint128_t x58 = (x49 + (0x11 * x39));
uint128_t x59 = (x50 + (0x11 * x40));
uint128_t x60 = (x51 + (0x11 * x41));
uint128_t x61 = (x52 + (0x11 * x42));
uint128_t x62 = (x53 + (0x11 * x43));
uint128_t x63 = (x54 + (0x11 * x44));
uint128_t x64 = (x55 + (0x11 * x45));
uint128_t x65 = (x56 + (0x11 * x46));
uint64_t x66 = (uint64_t) (x65 >> 0x31);
uint64_t x67 = ((uint64_t)x65 & 0x1ffffffffffff);
uint128_t x68 = (x66 + x64);
uint64_t x69 = (uint64_t) (x68 >> 0x31);
uint64_t x70 = ((uint64_t)x68 & 0x1ffffffffffff);
uint128_t x71 = (x69 + x63);
uint64_t x72 = (uint64_t) (x71 >> 0x31);
uint64_t x73 = ((uint64_t)x71 & 0x1ffffffffffff);
uint128_t x74 = (x72 + x62);
uint64_t x75 = (uint64_t) (x74 >> 0x31);
uint64_t x76 = ((uint64_t)x74 & 0x1ffffffffffff);
uint128_t x77 = (x75 + x61);
uint64_t x78 = (uint64_t) (x77 >> 0x30);
uint64_t x79 = ((uint64_t)x77 & 0xffffffffffff);
uint128_t x80 = (x78 + x60);
uint64_t x81 = (uint64_t) (x80 >> 0x31);
uint64_t x82 = ((uint64_t)x80 & 0x1ffffffffffff);
uint128_t x83 = (x81 + x59);
uint64_t x84 = (uint64_t) (x83 >> 0x31);
uint64_t x85 = ((uint64_t)x83 & 0x1ffffffffffff);
uint128_t x86 = (x84 + x58);
uint64_t x87 = (uint64_t) (x86 >> 0x31);
uint64_t x88 = ((uint64_t)x86 & 0x1ffffffffffff);
uint128_t x89 = (x87 + x57);
uint64_t x90 = (uint64_t) (x89 >> 0x31);
uint64_t x91 = ((uint64_t)x89 & 0x1ffffffffffff);
uint128_t x92 = (x90 + x47);
uint64_t x93 = (uint64_t) (x92 >> 0x30);
uint64_t x94 = ((uint64_t)x92 & 0xffffffffffff);
uint64_t x95 = (x67 + (0x11 * x93));
uint64_t x96 = (x95 >> 0x31);
uint64_t x97 = (x95 & 0x1ffffffffffff);
uint64_t x98 = (x96 + x70);
uint64_t x99 = (x98 >> 0x31);
uint64_t x100 = (x98 & 0x1ffffffffffff);
return (Return x94, Return x91, Return x88, Return x85, Return x82, Return x79, Return x76, (x99 + x73), Return x100, Return x97)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t) -> uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
