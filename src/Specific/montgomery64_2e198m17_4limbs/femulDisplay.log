mul = λ var : Z.Syntax.base_type → Type,
λ '(x6, x7, x5, x3, (x12, x13, x11, x9))%core,
uint64_t x15, uint64_t x16 = mulx_u64(x3, x9);
uint64_t x18, uint64_t x19 = mulx_u64(x3, x11);
uint64_t x21, uint64_t x22 = mulx_u64(x3, x13);
uint64_t x24, uint64_t x25 = mulx_u64(x3, x12);
uint64_t x27, uint8_t x28 = addcarryx_u64(0x0, x16, x18);
uint64_t x30, uint8_t x31 = addcarryx_u64(x28, x19, x21);
uint64_t x33, uint8_t x34 = addcarryx_u64(x31, x22, x24);
uint64_t x36, uint8_t _ = addcarryx_u64(0x0, x34, x25);
uint64_t x39, uint64_t _ = mulx_u64(x15, 0xf0f0f0f0f0f0f0f1L);
uint64_t x42, uint64_t x43 = mulx_u64(x39, 0xffffffffffffffefL);
uint64_t x45, uint64_t x46 = mulx_u64(x39, 0xffffffffffffffffL);
uint64_t x48, uint64_t x49 = mulx_u64(x39, 0xffffffffffffffffL);
uint64_t x51, uint8_t x52 = mulx_u64_out_u8(x39, 0x3f);
uint64_t x54, uint8_t x55 = addcarryx_u64(0x0, x43, x45);
uint64_t x57, uint8_t x58 = addcarryx_u64(x55, x46, x48);
uint64_t x60, uint8_t x61 = addcarryx_u64(x58, x49, x51);
uint8_t x62 = (x61 + x52);
uint64_t _, uint8_t x65 = addcarryx_u64(0x0, x15, x42);
uint64_t x67, uint8_t x68 = addcarryx_u64(x65, x27, x54);
uint64_t x70, uint8_t x71 = addcarryx_u64(x68, x30, x57);
uint64_t x73, uint8_t x74 = addcarryx_u64(x71, x33, x60);
uint64_t x76, uint8_t x77 = addcarryx_u64(x74, x36, x62);
uint64_t x79, uint64_t x80 = mulx_u64(x5, x9);
uint64_t x82, uint64_t x83 = mulx_u64(x5, x11);
uint64_t x85, uint64_t x86 = mulx_u64(x5, x13);
uint64_t x88, uint64_t x89 = mulx_u64(x5, x12);
uint64_t x91, uint8_t x92 = addcarryx_u64(0x0, x80, x82);
uint64_t x94, uint8_t x95 = addcarryx_u64(x92, x83, x85);
uint64_t x97, uint8_t x98 = addcarryx_u64(x95, x86, x88);
uint64_t x100, uint8_t _ = addcarryx_u64(0x0, x98, x89);
uint64_t x103, uint8_t x104 = addcarryx_u64(0x0, x67, x79);
uint64_t x106, uint8_t x107 = addcarryx_u64(x104, x70, x91);
uint64_t x109, uint8_t x110 = addcarryx_u64(x107, x73, x94);
uint64_t x112, uint8_t x113 = addcarryx_u64(x110, x76, x97);
uint64_t x115, uint8_t x116 = addcarryx_u64(x113, x77, x100);
uint64_t x118, uint64_t _ = mulx_u64(x103, 0xf0f0f0f0f0f0f0f1L);
uint64_t x121, uint64_t x122 = mulx_u64(x118, 0xffffffffffffffefL);
uint64_t x124, uint64_t x125 = mulx_u64(x118, 0xffffffffffffffffL);
uint64_t x127, uint64_t x128 = mulx_u64(x118, 0xffffffffffffffffL);
uint64_t x130, uint8_t x131 = mulx_u64_out_u8(x118, 0x3f);
uint64_t x133, uint8_t x134 = addcarryx_u64(0x0, x122, x124);
uint64_t x136, uint8_t x137 = addcarryx_u64(x134, x125, x127);
uint64_t x139, uint8_t x140 = addcarryx_u64(x137, x128, x130);
uint8_t x141 = (x140 + x131);
uint64_t _, uint8_t x144 = addcarryx_u64(0x0, x103, x121);
uint64_t x146, uint8_t x147 = addcarryx_u64(x144, x106, x133);
uint64_t x149, uint8_t x150 = addcarryx_u64(x147, x109, x136);
uint64_t x152, uint8_t x153 = addcarryx_u64(x150, x112, x139);
uint64_t x155, uint8_t x156 = addcarryx_u64(x153, x115, x141);
uint8_t x157 = (x156 + x116);
uint64_t x159, uint64_t x160 = mulx_u64(x7, x9);
uint64_t x162, uint64_t x163 = mulx_u64(x7, x11);
uint64_t x165, uint64_t x166 = mulx_u64(x7, x13);
uint64_t x168, uint64_t x169 = mulx_u64(x7, x12);
uint64_t x171, uint8_t x172 = addcarryx_u64(0x0, x160, x162);
uint64_t x174, uint8_t x175 = addcarryx_u64(x172, x163, x165);
uint64_t x177, uint8_t x178 = addcarryx_u64(x175, x166, x168);
uint64_t x180, uint8_t _ = addcarryx_u64(0x0, x178, x169);
uint64_t x183, uint8_t x184 = addcarryx_u64(0x0, x146, x159);
uint64_t x186, uint8_t x187 = addcarryx_u64(x184, x149, x171);
uint64_t x189, uint8_t x190 = addcarryx_u64(x187, x152, x174);
uint64_t x192, uint8_t x193 = addcarryx_u64(x190, x155, x177);
uint64_t x195, uint8_t x196 = addcarryx_u64(x193, x157, x180);
uint64_t x198, uint64_t _ = mulx_u64(x183, 0xf0f0f0f0f0f0f0f1L);
uint64_t x201, uint64_t x202 = mulx_u64(x198, 0xffffffffffffffefL);
uint64_t x204, uint64_t x205 = mulx_u64(x198, 0xffffffffffffffffL);
uint64_t x207, uint64_t x208 = mulx_u64(x198, 0xffffffffffffffffL);
uint64_t x210, uint8_t x211 = mulx_u64_out_u8(x198, 0x3f);
uint64_t x213, uint8_t x214 = addcarryx_u64(0x0, x202, x204);
uint64_t x216, uint8_t x217 = addcarryx_u64(x214, x205, x207);
uint64_t x219, uint8_t x220 = addcarryx_u64(x217, x208, x210);
uint8_t x221 = (x220 + x211);
uint64_t _, uint8_t x224 = addcarryx_u64(0x0, x183, x201);
uint64_t x226, uint8_t x227 = addcarryx_u64(x224, x186, x213);
uint64_t x229, uint8_t x230 = addcarryx_u64(x227, x189, x216);
uint64_t x232, uint8_t x233 = addcarryx_u64(x230, x192, x219);
uint64_t x235, uint8_t x236 = addcarryx_u64(x233, x195, x221);
uint8_t x237 = (x236 + x196);
uint64_t x239, uint64_t x240 = mulx_u64(x6, x9);
uint64_t x242, uint64_t x243 = mulx_u64(x6, x11);
uint64_t x245, uint64_t x246 = mulx_u64(x6, x13);
uint64_t x248, uint64_t x249 = mulx_u64(x6, x12);
uint64_t x251, uint8_t x252 = addcarryx_u64(0x0, x240, x242);
uint64_t x254, uint8_t x255 = addcarryx_u64(x252, x243, x245);
uint64_t x257, uint8_t x258 = addcarryx_u64(x255, x246, x248);
uint64_t x260, uint8_t _ = addcarryx_u64(0x0, x258, x249);
uint64_t x263, uint8_t x264 = addcarryx_u64(0x0, x226, x239);
uint64_t x266, uint8_t x267 = addcarryx_u64(x264, x229, x251);
uint64_t x269, uint8_t x270 = addcarryx_u64(x267, x232, x254);
uint64_t x272, uint8_t x273 = addcarryx_u64(x270, x235, x257);
uint64_t x275, uint8_t x276 = addcarryx_u64(x273, x237, x260);
uint64_t x278, uint64_t _ = mulx_u64(x263, 0xf0f0f0f0f0f0f0f1L);
uint64_t x281, uint64_t x282 = mulx_u64(x278, 0xffffffffffffffefL);
uint64_t x284, uint64_t x285 = mulx_u64(x278, 0xffffffffffffffffL);
uint64_t x287, uint64_t x288 = mulx_u64(x278, 0xffffffffffffffffL);
uint64_t x290, uint8_t x291 = mulx_u64_out_u8(x278, 0x3f);
uint64_t x293, uint8_t x294 = addcarryx_u64(0x0, x282, x284);
uint64_t x296, uint8_t x297 = addcarryx_u64(x294, x285, x287);
uint64_t x299, uint8_t x300 = addcarryx_u64(x297, x288, x290);
uint8_t x301 = (x300 + x291);
uint64_t _, uint8_t x304 = addcarryx_u64(0x0, x263, x281);
uint64_t x306, uint8_t x307 = addcarryx_u64(x304, x266, x293);
uint64_t x309, uint8_t x310 = addcarryx_u64(x307, x269, x296);
uint64_t x312, uint8_t x313 = addcarryx_u64(x310, x272, x299);
uint64_t x315, uint8_t x316 = addcarryx_u64(x313, x275, x301);
uint8_t x317 = (x316 + x276);
uint64_t x319, uint8_t x320 = subborrow_u64(0x0, x306, 0xffffffffffffffefL);
uint64_t x322, uint8_t x323 = subborrow_u64(x320, x309, 0xffffffffffffffffL);
uint64_t x325, uint8_t x326 = subborrow_u64(x323, x312, 0xffffffffffffffffL);
uint64_t x328, uint8_t x329 = subborrow_u64(x326, x315, 0x3f);
uint64_t _, uint8_t x332 = subborrow_u64(x329, x317, 0x0);
(cmovznz64(x332, x328, x315), cmovznz64(x332, x325, x312), cmovznz64(x332, x322, x309), cmovznz64(x332, x319, x306))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * (uint64_t * uint64_t * uint64_t * uint64_t) -> uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
