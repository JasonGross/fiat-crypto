mul = λ var : Z.Syntax.base_type → Type,
λ '(x10, x11, x9, x7, x5, x3, (x20, x21, x19, x17, x15, x13))%core,
uint64_t x23, uint64_t x24 = mulx_u64(x3, x13);
uint64_t x26, uint64_t x27 = mulx_u64(x3, x15);
uint64_t x29, uint64_t x30 = mulx_u64(x3, x17);
uint64_t x32, uint64_t x33 = mulx_u64(x3, x19);
uint64_t x35, uint64_t x36 = mulx_u64(x3, x21);
uint64_t x38, uint64_t x39 = mulx_u64(x3, x20);
uint64_t x41, uint8_t x42 = addcarryx_u64(0x0, x24, x26);
uint64_t x44, uint8_t x45 = addcarryx_u64(x42, x27, x29);
uint64_t x47, uint8_t x48 = addcarryx_u64(x45, x30, x32);
uint64_t x50, uint8_t x51 = addcarryx_u64(x48, x33, x35);
uint64_t x53, uint8_t x54 = addcarryx_u64(x51, x36, x38);
uint64_t x56, uint8_t _ = addcarryx_u64(0x0, x54, x39);
uint64_t x59, uint64_t _ = mulx_u64(x23, 0x8e38e38e38e38e39L);
uint64_t x62, uint64_t x63 = mulx_u64(x59, 0xfffffffffffffff7L);
uint64_t x65, uint64_t x66 = mulx_u64(x59, 0xffffffffffffffffL);
uint64_t x68, uint64_t x69 = mulx_u64(x59, 0xffffffffffffffffL);
uint64_t x71, uint64_t x72 = mulx_u64(x59, 0xffffffffffffffffL);
uint64_t x74, uint64_t x75 = mulx_u64(x59, 0xffffffffffffffffL);
uint64_t x77, uint8_t x78 = addcarryx_u64(0x0, x63, x65);
uint64_t x80, uint8_t x81 = addcarryx_u64(x78, x66, x68);
uint64_t x83, uint8_t x84 = addcarryx_u64(x81, x69, x71);
uint64_t x86, uint8_t x87 = addcarryx_u64(x84, x72, x74);
uint64_t x89, uint8_t x90 = addcarryx_u64(x87, x75, x59);
uint64_t _, uint8_t x93 = addcarryx_u64(0x0, x23, x62);
uint64_t x95, uint8_t x96 = addcarryx_u64(x93, x41, x77);
uint64_t x98, uint8_t x99 = addcarryx_u64(x96, x44, x80);
uint64_t x101, uint8_t x102 = addcarryx_u64(x99, x47, x83);
uint64_t x104, uint8_t x105 = addcarryx_u64(x102, x50, x86);
uint64_t x107, uint8_t x108 = addcarryx_u64(x105, x53, x89);
uint64_t x110, uint8_t x111 = addcarryx_u64(x108, x56, x90);
uint64_t x113, uint64_t x114 = mulx_u64(x5, x13);
uint64_t x116, uint64_t x117 = mulx_u64(x5, x15);
uint64_t x119, uint64_t x120 = mulx_u64(x5, x17);
uint64_t x122, uint64_t x123 = mulx_u64(x5, x19);
uint64_t x125, uint64_t x126 = mulx_u64(x5, x21);
uint64_t x128, uint64_t x129 = mulx_u64(x5, x20);
uint64_t x131, uint8_t x132 = addcarryx_u64(0x0, x114, x116);
uint64_t x134, uint8_t x135 = addcarryx_u64(x132, x117, x119);
uint64_t x137, uint8_t x138 = addcarryx_u64(x135, x120, x122);
uint64_t x140, uint8_t x141 = addcarryx_u64(x138, x123, x125);
uint64_t x143, uint8_t x144 = addcarryx_u64(x141, x126, x128);
uint64_t x146, uint8_t _ = addcarryx_u64(0x0, x144, x129);
uint64_t x149, uint8_t x150 = addcarryx_u64(0x0, x95, x113);
uint64_t x152, uint8_t x153 = addcarryx_u64(x150, x98, x131);
uint64_t x155, uint8_t x156 = addcarryx_u64(x153, x101, x134);
uint64_t x158, uint8_t x159 = addcarryx_u64(x156, x104, x137);
uint64_t x161, uint8_t x162 = addcarryx_u64(x159, x107, x140);
uint64_t x164, uint8_t x165 = addcarryx_u64(x162, x110, x143);
uint64_t x167, uint8_t x168 = addcarryx_u64(x165, x111, x146);
uint64_t x170, uint64_t _ = mulx_u64(x149, 0x8e38e38e38e38e39L);
uint64_t x173, uint64_t x174 = mulx_u64(x170, 0xfffffffffffffff7L);
uint64_t x176, uint64_t x177 = mulx_u64(x170, 0xffffffffffffffffL);
uint64_t x179, uint64_t x180 = mulx_u64(x170, 0xffffffffffffffffL);
uint64_t x182, uint64_t x183 = mulx_u64(x170, 0xffffffffffffffffL);
uint64_t x185, uint64_t x186 = mulx_u64(x170, 0xffffffffffffffffL);
uint64_t x188, uint8_t x189 = addcarryx_u64(0x0, x174, x176);
uint64_t x191, uint8_t x192 = addcarryx_u64(x189, x177, x179);
uint64_t x194, uint8_t x195 = addcarryx_u64(x192, x180, x182);
uint64_t x197, uint8_t x198 = addcarryx_u64(x195, x183, x185);
uint64_t x200, uint8_t x201 = addcarryx_u64(x198, x186, x170);
uint64_t _, uint8_t x204 = addcarryx_u64(0x0, x149, x173);
uint64_t x206, uint8_t x207 = addcarryx_u64(x204, x152, x188);
uint64_t x209, uint8_t x210 = addcarryx_u64(x207, x155, x191);
uint64_t x212, uint8_t x213 = addcarryx_u64(x210, x158, x194);
uint64_t x215, uint8_t x216 = addcarryx_u64(x213, x161, x197);
uint64_t x218, uint8_t x219 = addcarryx_u64(x216, x164, x200);
uint64_t x221, uint8_t x222 = addcarryx_u64(x219, x167, x201);
uint8_t x223 = (x222 + x168);
uint64_t x225, uint64_t x226 = mulx_u64(x7, x13);
uint64_t x228, uint64_t x229 = mulx_u64(x7, x15);
uint64_t x231, uint64_t x232 = mulx_u64(x7, x17);
uint64_t x234, uint64_t x235 = mulx_u64(x7, x19);
uint64_t x237, uint64_t x238 = mulx_u64(x7, x21);
uint64_t x240, uint64_t x241 = mulx_u64(x7, x20);
uint64_t x243, uint8_t x244 = addcarryx_u64(0x0, x226, x228);
uint64_t x246, uint8_t x247 = addcarryx_u64(x244, x229, x231);
uint64_t x249, uint8_t x250 = addcarryx_u64(x247, x232, x234);
uint64_t x252, uint8_t x253 = addcarryx_u64(x250, x235, x237);
uint64_t x255, uint8_t x256 = addcarryx_u64(x253, x238, x240);
uint64_t x258, uint8_t _ = addcarryx_u64(0x0, x256, x241);
uint64_t x261, uint8_t x262 = addcarryx_u64(0x0, x206, x225);
uint64_t x264, uint8_t x265 = addcarryx_u64(x262, x209, x243);
uint64_t x267, uint8_t x268 = addcarryx_u64(x265, x212, x246);
uint64_t x270, uint8_t x271 = addcarryx_u64(x268, x215, x249);
uint64_t x273, uint8_t x274 = addcarryx_u64(x271, x218, x252);
uint64_t x276, uint8_t x277 = addcarryx_u64(x274, x221, x255);
uint64_t x279, uint8_t x280 = addcarryx_u64(x277, x223, x258);
uint64_t x282, uint64_t _ = mulx_u64(x261, 0x8e38e38e38e38e39L);
uint64_t x285, uint64_t x286 = mulx_u64(x282, 0xfffffffffffffff7L);
uint64_t x288, uint64_t x289 = mulx_u64(x282, 0xffffffffffffffffL);
uint64_t x291, uint64_t x292 = mulx_u64(x282, 0xffffffffffffffffL);
uint64_t x294, uint64_t x295 = mulx_u64(x282, 0xffffffffffffffffL);
uint64_t x297, uint64_t x298 = mulx_u64(x282, 0xffffffffffffffffL);
uint64_t x300, uint8_t x301 = addcarryx_u64(0x0, x286, x288);
uint64_t x303, uint8_t x304 = addcarryx_u64(x301, x289, x291);
uint64_t x306, uint8_t x307 = addcarryx_u64(x304, x292, x294);
uint64_t x309, uint8_t x310 = addcarryx_u64(x307, x295, x297);
uint64_t x312, uint8_t x313 = addcarryx_u64(x310, x298, x282);
uint64_t _, uint8_t x316 = addcarryx_u64(0x0, x261, x285);
uint64_t x318, uint8_t x319 = addcarryx_u64(x316, x264, x300);
uint64_t x321, uint8_t x322 = addcarryx_u64(x319, x267, x303);
uint64_t x324, uint8_t x325 = addcarryx_u64(x322, x270, x306);
uint64_t x327, uint8_t x328 = addcarryx_u64(x325, x273, x309);
uint64_t x330, uint8_t x331 = addcarryx_u64(x328, x276, x312);
uint64_t x333, uint8_t x334 = addcarryx_u64(x331, x279, x313);
uint8_t x335 = (x334 + x280);
uint64_t x337, uint64_t x338 = mulx_u64(x9, x13);
uint64_t x340, uint64_t x341 = mulx_u64(x9, x15);
uint64_t x343, uint64_t x344 = mulx_u64(x9, x17);
uint64_t x346, uint64_t x347 = mulx_u64(x9, x19);
uint64_t x349, uint64_t x350 = mulx_u64(x9, x21);
uint64_t x352, uint64_t x353 = mulx_u64(x9, x20);
uint64_t x355, uint8_t x356 = addcarryx_u64(0x0, x338, x340);
uint64_t x358, uint8_t x359 = addcarryx_u64(x356, x341, x343);
uint64_t x361, uint8_t x362 = addcarryx_u64(x359, x344, x346);
uint64_t x364, uint8_t x365 = addcarryx_u64(x362, x347, x349);
uint64_t x367, uint8_t x368 = addcarryx_u64(x365, x350, x352);
uint64_t x370, uint8_t _ = addcarryx_u64(0x0, x368, x353);
uint64_t x373, uint8_t x374 = addcarryx_u64(0x0, x318, x337);
uint64_t x376, uint8_t x377 = addcarryx_u64(x374, x321, x355);
uint64_t x379, uint8_t x380 = addcarryx_u64(x377, x324, x358);
uint64_t x382, uint8_t x383 = addcarryx_u64(x380, x327, x361);
uint64_t x385, uint8_t x386 = addcarryx_u64(x383, x330, x364);
uint64_t x388, uint8_t x389 = addcarryx_u64(x386, x333, x367);
uint64_t x391, uint8_t x392 = addcarryx_u64(x389, x335, x370);
uint64_t x394, uint64_t _ = mulx_u64(x373, 0x8e38e38e38e38e39L);
uint64_t x397, uint64_t x398 = mulx_u64(x394, 0xfffffffffffffff7L);
uint64_t x400, uint64_t x401 = mulx_u64(x394, 0xffffffffffffffffL);
uint64_t x403, uint64_t x404 = mulx_u64(x394, 0xffffffffffffffffL);
uint64_t x406, uint64_t x407 = mulx_u64(x394, 0xffffffffffffffffL);
uint64_t x409, uint64_t x410 = mulx_u64(x394, 0xffffffffffffffffL);
uint64_t x412, uint8_t x413 = addcarryx_u64(0x0, x398, x400);
uint64_t x415, uint8_t x416 = addcarryx_u64(x413, x401, x403);
uint64_t x418, uint8_t x419 = addcarryx_u64(x416, x404, x406);
uint64_t x421, uint8_t x422 = addcarryx_u64(x419, x407, x409);
uint64_t x424, uint8_t x425 = addcarryx_u64(x422, x410, x394);
uint64_t _, uint8_t x428 = addcarryx_u64(0x0, x373, x397);
uint64_t x430, uint8_t x431 = addcarryx_u64(x428, x376, x412);
uint64_t x433, uint8_t x434 = addcarryx_u64(x431, x379, x415);
uint64_t x436, uint8_t x437 = addcarryx_u64(x434, x382, x418);
uint64_t x439, uint8_t x440 = addcarryx_u64(x437, x385, x421);
uint64_t x442, uint8_t x443 = addcarryx_u64(x440, x388, x424);
uint64_t x445, uint8_t x446 = addcarryx_u64(x443, x391, x425);
uint8_t x447 = (x446 + x392);
uint64_t x449, uint64_t x450 = mulx_u64(x11, x13);
uint64_t x452, uint64_t x453 = mulx_u64(x11, x15);
uint64_t x455, uint64_t x456 = mulx_u64(x11, x17);
uint64_t x458, uint64_t x459 = mulx_u64(x11, x19);
uint64_t x461, uint64_t x462 = mulx_u64(x11, x21);
uint64_t x464, uint64_t x465 = mulx_u64(x11, x20);
uint64_t x467, uint8_t x468 = addcarryx_u64(0x0, x450, x452);
uint64_t x470, uint8_t x471 = addcarryx_u64(x468, x453, x455);
uint64_t x473, uint8_t x474 = addcarryx_u64(x471, x456, x458);
uint64_t x476, uint8_t x477 = addcarryx_u64(x474, x459, x461);
uint64_t x479, uint8_t x480 = addcarryx_u64(x477, x462, x464);
uint64_t x482, uint8_t _ = addcarryx_u64(0x0, x480, x465);
uint64_t x485, uint8_t x486 = addcarryx_u64(0x0, x430, x449);
uint64_t x488, uint8_t x489 = addcarryx_u64(x486, x433, x467);
uint64_t x491, uint8_t x492 = addcarryx_u64(x489, x436, x470);
uint64_t x494, uint8_t x495 = addcarryx_u64(x492, x439, x473);
uint64_t x497, uint8_t x498 = addcarryx_u64(x495, x442, x476);
uint64_t x500, uint8_t x501 = addcarryx_u64(x498, x445, x479);
uint64_t x503, uint8_t x504 = addcarryx_u64(x501, x447, x482);
uint64_t x506, uint64_t _ = mulx_u64(x485, 0x8e38e38e38e38e39L);
uint64_t x509, uint64_t x510 = mulx_u64(x506, 0xfffffffffffffff7L);
uint64_t x512, uint64_t x513 = mulx_u64(x506, 0xffffffffffffffffL);
uint64_t x515, uint64_t x516 = mulx_u64(x506, 0xffffffffffffffffL);
uint64_t x518, uint64_t x519 = mulx_u64(x506, 0xffffffffffffffffL);
uint64_t x521, uint64_t x522 = mulx_u64(x506, 0xffffffffffffffffL);
uint64_t x524, uint8_t x525 = addcarryx_u64(0x0, x510, x512);
uint64_t x527, uint8_t x528 = addcarryx_u64(x525, x513, x515);
uint64_t x530, uint8_t x531 = addcarryx_u64(x528, x516, x518);
uint64_t x533, uint8_t x534 = addcarryx_u64(x531, x519, x521);
uint64_t x536, uint8_t x537 = addcarryx_u64(x534, x522, x506);
uint64_t _, uint8_t x540 = addcarryx_u64(0x0, x485, x509);
uint64_t x542, uint8_t x543 = addcarryx_u64(x540, x488, x524);
uint64_t x545, uint8_t x546 = addcarryx_u64(x543, x491, x527);
uint64_t x548, uint8_t x549 = addcarryx_u64(x546, x494, x530);
uint64_t x551, uint8_t x552 = addcarryx_u64(x549, x497, x533);
uint64_t x554, uint8_t x555 = addcarryx_u64(x552, x500, x536);
uint64_t x557, uint8_t x558 = addcarryx_u64(x555, x503, x537);
uint8_t x559 = (x558 + x504);
uint64_t x561, uint64_t x562 = mulx_u64(x10, x13);
uint64_t x564, uint64_t x565 = mulx_u64(x10, x15);
uint64_t x567, uint64_t x568 = mulx_u64(x10, x17);
uint64_t x570, uint64_t x571 = mulx_u64(x10, x19);
uint64_t x573, uint64_t x574 = mulx_u64(x10, x21);
uint64_t x576, uint64_t x577 = mulx_u64(x10, x20);
uint64_t x579, uint8_t x580 = addcarryx_u64(0x0, x562, x564);
uint64_t x582, uint8_t x583 = addcarryx_u64(x580, x565, x567);
uint64_t x585, uint8_t x586 = addcarryx_u64(x583, x568, x570);
uint64_t x588, uint8_t x589 = addcarryx_u64(x586, x571, x573);
uint64_t x591, uint8_t x592 = addcarryx_u64(x589, x574, x576);
uint64_t x594, uint8_t _ = addcarryx_u64(0x0, x592, x577);
uint64_t x597, uint8_t x598 = addcarryx_u64(0x0, x542, x561);
uint64_t x600, uint8_t x601 = addcarryx_u64(x598, x545, x579);
uint64_t x603, uint8_t x604 = addcarryx_u64(x601, x548, x582);
uint64_t x606, uint8_t x607 = addcarryx_u64(x604, x551, x585);
uint64_t x609, uint8_t x610 = addcarryx_u64(x607, x554, x588);
uint64_t x612, uint8_t x613 = addcarryx_u64(x610, x557, x591);
uint64_t x615, uint8_t x616 = addcarryx_u64(x613, x559, x594);
uint64_t x618, uint64_t _ = mulx_u64(x597, 0x8e38e38e38e38e39L);
uint64_t x621, uint64_t x622 = mulx_u64(x618, 0xfffffffffffffff7L);
uint64_t x624, uint64_t x625 = mulx_u64(x618, 0xffffffffffffffffL);
uint64_t x627, uint64_t x628 = mulx_u64(x618, 0xffffffffffffffffL);
uint64_t x630, uint64_t x631 = mulx_u64(x618, 0xffffffffffffffffL);
uint64_t x633, uint64_t x634 = mulx_u64(x618, 0xffffffffffffffffL);
uint64_t x636, uint8_t x637 = addcarryx_u64(0x0, x622, x624);
uint64_t x639, uint8_t x640 = addcarryx_u64(x637, x625, x627);
uint64_t x642, uint8_t x643 = addcarryx_u64(x640, x628, x630);
uint64_t x645, uint8_t x646 = addcarryx_u64(x643, x631, x633);
uint64_t x648, uint8_t x649 = addcarryx_u64(x646, x634, x618);
uint64_t _, uint8_t x652 = addcarryx_u64(0x0, x597, x621);
uint64_t x654, uint8_t x655 = addcarryx_u64(x652, x600, x636);
uint64_t x657, uint8_t x658 = addcarryx_u64(x655, x603, x639);
uint64_t x660, uint8_t x661 = addcarryx_u64(x658, x606, x642);
uint64_t x663, uint8_t x664 = addcarryx_u64(x661, x609, x645);
uint64_t x666, uint8_t x667 = addcarryx_u64(x664, x612, x648);
uint64_t x669, uint8_t x670 = addcarryx_u64(x667, x615, x649);
uint8_t x671 = (x670 + x616);
uint64_t x673, uint8_t x674 = subborrow_u64(0x0, x654, 0xfffffffffffffff7L);
uint64_t x676, uint8_t x677 = subborrow_u64(x674, x657, 0xffffffffffffffffL);
uint64_t x679, uint8_t x680 = subborrow_u64(x677, x660, 0xffffffffffffffffL);
uint64_t x682, uint8_t x683 = subborrow_u64(x680, x663, 0xffffffffffffffffL);
uint64_t x685, uint8_t x686 = subborrow_u64(x683, x666, 0xffffffffffffffffL);
uint64_t x688, uint8_t x689 = subborrow_u64(x686, x669, 0x1);
uint64_t _, uint8_t x692 = subborrow_u64(x689, x671, 0x0);
(cmovznz64(x692, x688, x669), cmovznz64(x692, x685, x666), cmovznz64(x692, x682, x663), cmovznz64(x692, x679, x660), cmovznz64(x692, x676, x657), cmovznz64(x692, x673, x654))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t) -> uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
