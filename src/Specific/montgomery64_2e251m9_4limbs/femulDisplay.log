mul = λ var : Z.Syntax.base_type → Type,
λ '(x6, x7, x5, x3, (x12, x13, x11, x9))%core,
uint64_t x15, uint64_t x16 = mulx_u64(x3, x9);
uint64_t x18, uint64_t x19 = mulx_u64(x3, x11);
uint64_t x21, uint64_t x22 = mulx_u64(x3, x13);
uint64_t x24, uint64_t x25 = mulx_u64(x3, x12);
uint64_t x27, uint8_t x28 = addcarryx_u64(0x0, x16, x18);
uint64_t x30, uint8_t x31 = addcarryx_u64(x28, x19, x21);
uint64_t x33, uint8_t x34 = addcarryx_u64(x31, x22, x24);
uint64_t x36, uint8_t _ = addcarryx_u64(0x0, x34, x25);
uint64_t x39, uint64_t _ = mulx_u64(x15, 0x8e38e38e38e38e39L);
uint64_t x42, uint64_t x43 = mulx_u64(x39, 0xfffffffffffffff7L);
uint64_t x45, uint64_t x46 = mulx_u64(x39, 0xffffffffffffffffL);
uint64_t x48, uint64_t x49 = mulx_u64(x39, 0xffffffffffffffffL);
uint64_t x51, uint64_t x52 = mulx_u64(x39, 0x7ffffffffffffff);
uint64_t x54, uint8_t x55 = addcarryx_u64(0x0, x43, x45);
uint64_t x57, uint8_t x58 = addcarryx_u64(x55, x46, x48);
uint64_t x60, uint8_t x61 = addcarryx_u64(x58, x49, x51);
uint64_t x63, uint8_t _ = addcarryx_u64(0x0, x61, x52);
uint64_t _, uint8_t x67 = addcarryx_u64(0x0, x15, x42);
uint64_t x69, uint8_t x70 = addcarryx_u64(x67, x27, x54);
uint64_t x72, uint8_t x73 = addcarryx_u64(x70, x30, x57);
uint64_t x75, uint8_t x76 = addcarryx_u64(x73, x33, x60);
uint64_t x78, uint8_t x79 = addcarryx_u64(x76, x36, x63);
uint64_t x81, uint64_t x82 = mulx_u64(x5, x9);
uint64_t x84, uint64_t x85 = mulx_u64(x5, x11);
uint64_t x87, uint64_t x88 = mulx_u64(x5, x13);
uint64_t x90, uint64_t x91 = mulx_u64(x5, x12);
uint64_t x93, uint8_t x94 = addcarryx_u64(0x0, x82, x84);
uint64_t x96, uint8_t x97 = addcarryx_u64(x94, x85, x87);
uint64_t x99, uint8_t x100 = addcarryx_u64(x97, x88, x90);
uint64_t x102, uint8_t _ = addcarryx_u64(0x0, x100, x91);
uint64_t x105, uint8_t x106 = addcarryx_u64(0x0, x69, x81);
uint64_t x108, uint8_t x109 = addcarryx_u64(x106, x72, x93);
uint64_t x111, uint8_t x112 = addcarryx_u64(x109, x75, x96);
uint64_t x114, uint8_t x115 = addcarryx_u64(x112, x78, x99);
uint64_t x117, uint8_t x118 = addcarryx_u64(x115, x79, x102);
uint64_t x120, uint64_t _ = mulx_u64(x105, 0x8e38e38e38e38e39L);
uint64_t x123, uint64_t x124 = mulx_u64(x120, 0xfffffffffffffff7L);
uint64_t x126, uint64_t x127 = mulx_u64(x120, 0xffffffffffffffffL);
uint64_t x129, uint64_t x130 = mulx_u64(x120, 0xffffffffffffffffL);
uint64_t x132, uint64_t x133 = mulx_u64(x120, 0x7ffffffffffffff);
uint64_t x135, uint8_t x136 = addcarryx_u64(0x0, x124, x126);
uint64_t x138, uint8_t x139 = addcarryx_u64(x136, x127, x129);
uint64_t x141, uint8_t x142 = addcarryx_u64(x139, x130, x132);
uint64_t x144, uint8_t _ = addcarryx_u64(0x0, x142, x133);
uint64_t _, uint8_t x148 = addcarryx_u64(0x0, x105, x123);
uint64_t x150, uint8_t x151 = addcarryx_u64(x148, x108, x135);
uint64_t x153, uint8_t x154 = addcarryx_u64(x151, x111, x138);
uint64_t x156, uint8_t x157 = addcarryx_u64(x154, x114, x141);
uint64_t x159, uint8_t x160 = addcarryx_u64(x157, x117, x144);
uint8_t x161 = (x160 + x118);
uint64_t x163, uint64_t x164 = mulx_u64(x7, x9);
uint64_t x166, uint64_t x167 = mulx_u64(x7, x11);
uint64_t x169, uint64_t x170 = mulx_u64(x7, x13);
uint64_t x172, uint64_t x173 = mulx_u64(x7, x12);
uint64_t x175, uint8_t x176 = addcarryx_u64(0x0, x164, x166);
uint64_t x178, uint8_t x179 = addcarryx_u64(x176, x167, x169);
uint64_t x181, uint8_t x182 = addcarryx_u64(x179, x170, x172);
uint64_t x184, uint8_t _ = addcarryx_u64(0x0, x182, x173);
uint64_t x187, uint8_t x188 = addcarryx_u64(0x0, x150, x163);
uint64_t x190, uint8_t x191 = addcarryx_u64(x188, x153, x175);
uint64_t x193, uint8_t x194 = addcarryx_u64(x191, x156, x178);
uint64_t x196, uint8_t x197 = addcarryx_u64(x194, x159, x181);
uint64_t x199, uint8_t x200 = addcarryx_u64(x197, x161, x184);
uint64_t x202, uint64_t _ = mulx_u64(x187, 0x8e38e38e38e38e39L);
uint64_t x205, uint64_t x206 = mulx_u64(x202, 0xfffffffffffffff7L);
uint64_t x208, uint64_t x209 = mulx_u64(x202, 0xffffffffffffffffL);
uint64_t x211, uint64_t x212 = mulx_u64(x202, 0xffffffffffffffffL);
uint64_t x214, uint64_t x215 = mulx_u64(x202, 0x7ffffffffffffff);
uint64_t x217, uint8_t x218 = addcarryx_u64(0x0, x206, x208);
uint64_t x220, uint8_t x221 = addcarryx_u64(x218, x209, x211);
uint64_t x223, uint8_t x224 = addcarryx_u64(x221, x212, x214);
uint64_t x226, uint8_t _ = addcarryx_u64(0x0, x224, x215);
uint64_t _, uint8_t x230 = addcarryx_u64(0x0, x187, x205);
uint64_t x232, uint8_t x233 = addcarryx_u64(x230, x190, x217);
uint64_t x235, uint8_t x236 = addcarryx_u64(x233, x193, x220);
uint64_t x238, uint8_t x239 = addcarryx_u64(x236, x196, x223);
uint64_t x241, uint8_t x242 = addcarryx_u64(x239, x199, x226);
uint8_t x243 = (x242 + x200);
uint64_t x245, uint64_t x246 = mulx_u64(x6, x9);
uint64_t x248, uint64_t x249 = mulx_u64(x6, x11);
uint64_t x251, uint64_t x252 = mulx_u64(x6, x13);
uint64_t x254, uint64_t x255 = mulx_u64(x6, x12);
uint64_t x257, uint8_t x258 = addcarryx_u64(0x0, x246, x248);
uint64_t x260, uint8_t x261 = addcarryx_u64(x258, x249, x251);
uint64_t x263, uint8_t x264 = addcarryx_u64(x261, x252, x254);
uint64_t x266, uint8_t _ = addcarryx_u64(0x0, x264, x255);
uint64_t x269, uint8_t x270 = addcarryx_u64(0x0, x232, x245);
uint64_t x272, uint8_t x273 = addcarryx_u64(x270, x235, x257);
uint64_t x275, uint8_t x276 = addcarryx_u64(x273, x238, x260);
uint64_t x278, uint8_t x279 = addcarryx_u64(x276, x241, x263);
uint64_t x281, uint8_t x282 = addcarryx_u64(x279, x243, x266);
uint64_t x284, uint64_t _ = mulx_u64(x269, 0x8e38e38e38e38e39L);
uint64_t x287, uint64_t x288 = mulx_u64(x284, 0xfffffffffffffff7L);
uint64_t x290, uint64_t x291 = mulx_u64(x284, 0xffffffffffffffffL);
uint64_t x293, uint64_t x294 = mulx_u64(x284, 0xffffffffffffffffL);
uint64_t x296, uint64_t x297 = mulx_u64(x284, 0x7ffffffffffffff);
uint64_t x299, uint8_t x300 = addcarryx_u64(0x0, x288, x290);
uint64_t x302, uint8_t x303 = addcarryx_u64(x300, x291, x293);
uint64_t x305, uint8_t x306 = addcarryx_u64(x303, x294, x296);
uint64_t x308, uint8_t _ = addcarryx_u64(0x0, x306, x297);
uint64_t _, uint8_t x312 = addcarryx_u64(0x0, x269, x287);
uint64_t x314, uint8_t x315 = addcarryx_u64(x312, x272, x299);
uint64_t x317, uint8_t x318 = addcarryx_u64(x315, x275, x302);
uint64_t x320, uint8_t x321 = addcarryx_u64(x318, x278, x305);
uint64_t x323, uint8_t x324 = addcarryx_u64(x321, x281, x308);
uint8_t x325 = (x324 + x282);
uint64_t x327, uint8_t x328 = subborrow_u64(0x0, x314, 0xfffffffffffffff7L);
uint64_t x330, uint8_t x331 = subborrow_u64(x328, x317, 0xffffffffffffffffL);
uint64_t x333, uint8_t x334 = subborrow_u64(x331, x320, 0xffffffffffffffffL);
uint64_t x336, uint8_t x337 = subborrow_u64(x334, x323, 0x7ffffffffffffff);
uint64_t _, uint8_t x340 = subborrow_u64(x337, x325, 0x0);
(cmovznz64(x340, x336, x323), cmovznz64(x340, x333, x320), cmovznz64(x340, x330, x317), cmovznz64(x340, x327, x314))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * (uint64_t * uint64_t * uint64_t * uint64_t) -> uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
