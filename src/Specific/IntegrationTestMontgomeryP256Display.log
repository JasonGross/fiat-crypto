λ x x0 : word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x8, x9, x7, x5, (x14, x15, x13, x11))%core,
 uint128_t x16 = (uint128_t) x5 * x11;
 uint64_t x17 = (uint64_t) x16 & 0xffffffffffffffffL;
 uint64_t x18 = (uint64_t) (x16 >> 0x40);
 uint128_t x19 = (uint128_t) x5 * x13;
 uint64_t x20 = (uint64_t) x19 & 0xffffffffffffffffL;
 uint64_t x21 = (uint64_t) (x19 >> 0x40);
 uint128_t x22 = (uint128_t) x5 * x15;
 uint64_t x23 = (uint64_t) x22 & 0xffffffffffffffffL;
 uint64_t x24 = (uint64_t) (x22 >> 0x40);
 uint128_t x25 = (uint128_t) x5 * x14;
 uint64_t x26 = (uint64_t) x25 & 0xffffffffffffffffL;
 uint64_t x27 = (uint64_t) (x25 >> 0x40);
 uint64_t x29, bool x30 = addcarryx_u64(0x0, x18, x20);
 uint64_t x32, bool x33 = addcarryx_u64(x30, x21, x23);
 uint64_t x35, bool x36 = addcarryx_u64(x33, x24, x26);
 uint64_t x38, bool _ = addcarryx_u64(0x0, x36, x27);
 uint64_t x41, bool x42 = addcarryx_u64(0x0, 0x0, x29);
 uint64_t x44, bool x45 = addcarryx_u64(x42, 0x0, x32);
 uint64_t x47, bool x48 = addcarryx_u64(x45, 0x0, x35);
 uint64_t x50, bool x51 = addcarryx_u64(x48, 0x0, x38);
 uint64_t x52 = x17 & 0xffffffffffffffffL;
 uint128_t x53 = (uint128_t) x52 * 0xffffffffffffffffL;
 uint64_t x54 = (uint64_t) x53 & 0xffffffffffffffffL;
 uint64_t x55 = (uint64_t) (x53 >> 0x40);
 uint128_t x56 = (uint128_t) x52 * 0xffffffff;
 uint64_t x57 = (uint64_t) x56 & 0xffffffffffffffffL;
 uint64_t x58 = (uint64_t) (x56 >> 0x40);
 uint128_t x59 = (uint128_t) x52 * 0xffffffff00000001L;
 uint64_t x60 = (uint64_t) x59 & 0xffffffffffffffffL;
 uint64_t x61 = (uint64_t) (x59 >> 0x40);
 uint64_t x63, bool x64 = addcarryx_u64(0x0, x55, x57);
 uint64_t x66, bool x67 = Op (Syntax.AddWithGetCarry 64 (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0)) (Return x64, Return x58, 0x0);
 uint64_t x69, bool x70 = addcarryx_u64(x67, 0x0, x60);
 uint64_t x72, bool _ = addcarryx_u64(0x0, x70, x61);
 uint64_t _, bool x76 = addcarryx_u64(0x0, x17, x54);
 uint64_t x78, bool x79 = addcarryx_u64(x76, x41, x63);
 uint64_t x81, bool x82 = addcarryx_u64(x79, x44, x66);
 uint64_t x84, bool x85 = addcarryx_u64(x82, x47, x69);
 uint64_t x87, bool x88 = addcarryx_u64(x85, x50, x72);
 bool x90, bool _ = Op (Syntax.AddWithGetCarry 64 (Syntax.TWord 0) (Syntax.TWord 0) (Syntax.TWord 0) (Syntax.TWord 0) (Syntax.TWord 0)) (0x0, Return x88, Return x51);
 uint128_t x92 = (uint128_t) x7 * x11;
 uint64_t x93 = (uint64_t) x92 & 0xffffffffffffffffL;
 uint64_t x94 = (uint64_t) (x92 >> 0x40);
 uint128_t x95 = (uint128_t) x7 * x13;
 uint64_t x96 = (uint64_t) x95 & 0xffffffffffffffffL;
 uint64_t x97 = (uint64_t) (x95 >> 0x40);
 uint128_t x98 = (uint128_t) x7 * x15;
 uint64_t x99 = (uint64_t) x98 & 0xffffffffffffffffL;
 uint64_t x100 = (uint64_t) (x98 >> 0x40);
 uint128_t x101 = (uint128_t) x7 * x14;
 uint64_t x102 = (uint64_t) x101 & 0xffffffffffffffffL;
 uint64_t x103 = (uint64_t) (x101 >> 0x40);
 uint64_t x105, bool x106 = addcarryx_u64(0x0, x94, x96);
 uint64_t x108, bool x109 = addcarryx_u64(x106, x97, x99);
 uint64_t x111, bool x112 = addcarryx_u64(x109, x100, x102);
 uint64_t x114, bool _ = addcarryx_u64(0x0, x112, x103);
 uint64_t x117, bool x118 = addcarryx_u64(0x0, x78, x93);
 uint64_t x120, bool x121 = addcarryx_u64(x118, x81, x105);
 uint64_t x123, bool x124 = addcarryx_u64(x121, x84, x108);
 uint64_t x126, bool x127 = addcarryx_u64(x124, x87, x111);
 uint64_t x129, bool x130 = addcarryx_u64(x127, x90, x114);
 uint64_t x131 = x117 & 0xffffffffffffffffL;
 uint128_t x132 = (uint128_t) x131 * 0xffffffffffffffffL;
 uint64_t x133 = (uint64_t) x132 & 0xffffffffffffffffL;
 uint64_t x134 = (uint64_t) (x132 >> 0x40);
 uint128_t x135 = (uint128_t) x131 * 0xffffffff;
 uint64_t x136 = (uint64_t) x135 & 0xffffffffffffffffL;
 uint64_t x137 = (uint64_t) (x135 >> 0x40);
 uint128_t x138 = (uint128_t) x131 * 0xffffffff00000001L;
 uint64_t x139 = (uint64_t) x138 & 0xffffffffffffffffL;
 uint64_t x140 = (uint64_t) (x138 >> 0x40);
 uint64_t x142, bool x143 = addcarryx_u64(0x0, x134, x136);
 uint64_t x145, bool x146 = Op (Syntax.AddWithGetCarry 64 (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0)) (Return x143, Return x137, 0x0);
 uint64_t x148, bool x149 = addcarryx_u64(x146, 0x0, x139);
 uint64_t x151, bool _ = addcarryx_u64(0x0, x149, x140);
 uint64_t _, bool x155 = addcarryx_u64(0x0, x117, x133);
 uint64_t x157, bool x158 = addcarryx_u64(x155, x120, x142);
 uint64_t x160, bool x161 = addcarryx_u64(x158, x123, x145);
 uint64_t x163, bool x164 = addcarryx_u64(x161, x126, x148);
 uint64_t x166, bool x167 = addcarryx_u64(x164, x129, x151);
 uint64_t x168 = (uint64_t) 0x0 + x167 + x130;
 uint128_t x169 = (uint128_t) x9 * x11;
 uint64_t x170 = (uint64_t) x169 & 0xffffffffffffffffL;
 uint64_t x171 = (uint64_t) (x169 >> 0x40);
 uint128_t x172 = (uint128_t) x9 * x13;
 uint64_t x173 = (uint64_t) x172 & 0xffffffffffffffffL;
 uint64_t x174 = (uint64_t) (x172 >> 0x40);
 uint128_t x175 = (uint128_t) x9 * x15;
 uint64_t x176 = (uint64_t) x175 & 0xffffffffffffffffL;
 uint64_t x177 = (uint64_t) (x175 >> 0x40);
 uint128_t x178 = (uint128_t) x9 * x14;
 uint64_t x179 = (uint64_t) x178 & 0xffffffffffffffffL;
 uint64_t x180 = (uint64_t) (x178 >> 0x40);
 uint64_t x182, bool x183 = addcarryx_u64(0x0, x171, x173);
 uint64_t x185, bool x186 = addcarryx_u64(x183, x174, x176);
 uint64_t x188, bool x189 = addcarryx_u64(x186, x177, x179);
 uint64_t x191, bool _ = addcarryx_u64(0x0, x189, x180);
 uint64_t x194, bool x195 = addcarryx_u64(0x0, x157, x170);
 uint64_t x197, bool x198 = addcarryx_u64(x195, x160, x182);
 uint64_t x200, bool x201 = addcarryx_u64(x198, x163, x185);
 uint64_t x203, bool x204 = addcarryx_u64(x201, x166, x188);
 uint64_t x206, bool x207 = addcarryx_u64(x204, x168, x191);
 uint64_t x208 = x194 & 0xffffffffffffffffL;
 uint128_t x209 = (uint128_t) x208 * 0xffffffffffffffffL;
 uint64_t x210 = (uint64_t) x209 & 0xffffffffffffffffL;
 uint64_t x211 = (uint64_t) (x209 >> 0x40);
 uint128_t x212 = (uint128_t) x208 * 0xffffffff;
 uint64_t x213 = (uint64_t) x212 & 0xffffffffffffffffL;
 uint64_t x214 = (uint64_t) (x212 >> 0x40);
 uint128_t x215 = (uint128_t) x208 * 0xffffffff00000001L;
 uint64_t x216 = (uint64_t) x215 & 0xffffffffffffffffL;
 uint64_t x217 = (uint64_t) (x215 >> 0x40);
 uint64_t x219, bool x220 = addcarryx_u64(0x0, x211, x213);
 uint64_t x222, bool x223 = Op (Syntax.AddWithGetCarry 64 (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0)) (Return x220, Return x214, 0x0);
 uint64_t x225, bool x226 = addcarryx_u64(x223, 0x0, x216);
 uint64_t x228, bool _ = addcarryx_u64(0x0, x226, x217);
 uint64_t _, bool x232 = addcarryx_u64(0x0, x194, x210);
 uint64_t x234, bool x235 = addcarryx_u64(x232, x197, x219);
 uint64_t x237, bool x238 = addcarryx_u64(x235, x200, x222);
 uint64_t x240, bool x241 = addcarryx_u64(x238, x203, x225);
 uint64_t x243, bool x244 = addcarryx_u64(x241, x206, x228);
 uint64_t x245 = (uint64_t) 0x0 + x244 + x207;
 uint128_t x246 = (uint128_t) x8 * x11;
 uint64_t x247 = (uint64_t) x246 & 0xffffffffffffffffL;
 uint64_t x248 = (uint64_t) (x246 >> 0x40);
 uint128_t x249 = (uint128_t) x8 * x13;
 uint64_t x250 = (uint64_t) x249 & 0xffffffffffffffffL;
 uint64_t x251 = (uint64_t) (x249 >> 0x40);
 uint128_t x252 = (uint128_t) x8 * x15;
 uint64_t x253 = (uint64_t) x252 & 0xffffffffffffffffL;
 uint64_t x254 = (uint64_t) (x252 >> 0x40);
 uint128_t x255 = (uint128_t) x8 * x14;
 uint64_t x256 = (uint64_t) x255 & 0xffffffffffffffffL;
 uint64_t x257 = (uint64_t) (x255 >> 0x40);
 uint64_t x259, bool x260 = addcarryx_u64(0x0, x248, x250);
 uint64_t x262, bool x263 = addcarryx_u64(x260, x251, x253);
 uint64_t x265, bool x266 = addcarryx_u64(x263, x254, x256);
 uint64_t x268, bool _ = addcarryx_u64(0x0, x266, x257);
 uint64_t x271, bool x272 = addcarryx_u64(0x0, x234, x247);
 uint64_t x274, bool x275 = addcarryx_u64(x272, x237, x259);
 uint64_t x277, bool x278 = addcarryx_u64(x275, x240, x262);
 uint64_t x280, bool x281 = addcarryx_u64(x278, x243, x265);
 uint64_t x283, bool _ = addcarryx_u64(x281, x245, x268);
 uint64_t x285 = x271 & 0xffffffffffffffffL;
 uint128_t x286 = (uint128_t) x285 * 0xffffffffffffffffL;
 uint64_t x287 = (uint64_t) x286 & 0xffffffffffffffffL;
 uint64_t x288 = (uint64_t) (x286 >> 0x40);
 uint128_t x289 = (uint128_t) x285 * 0xffffffff;
 uint64_t x290 = (uint64_t) x289 & 0xffffffffffffffffL;
 uint64_t x291 = (uint64_t) (x289 >> 0x40);
 uint128_t x292 = (uint128_t) x285 * 0xffffffff00000001L;
 uint64_t x293 = (uint64_t) x292 & 0xffffffffffffffffL;
 uint64_t x294 = (uint64_t) (x292 >> 0x40);
 uint64_t x296, bool x297 = addcarryx_u64(0x0, x288, x290);
 uint64_t x299, bool x300 = Op (Syntax.AddWithGetCarry 64 (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0)) (Return x297, Return x291, 0x0);
 uint64_t x302, bool x303 = addcarryx_u64(x300, 0x0, x293);
 uint64_t x305, bool _ = addcarryx_u64(0x0, x303, x294);
 uint64_t _, bool x309 = addcarryx_u64(0x0, x271, x287);
 uint64_t x311, bool x312 = addcarryx_u64(x309, x274, x296);
 uint64_t x314, bool x315 = addcarryx_u64(x312, x277, x299);
 uint64_t x317, bool x318 = addcarryx_u64(x315, x280, x302);
 uint64_t x320, bool _ = addcarryx_u64(x318, x283, x305);
 (Return x320, Return x317, Return x314, Return x311))
(x, x0)%core
     : word64 * word64 * word64 * word64 → word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t)
