(* This file is autogenerated from Ladderstep.v by remake_packages.py *)
Require Export Crypto.Specific.Framework.ArithmeticSynthesis.Ladderstep.


Local Ltac combine_pkgs CurveParameters_pkg ArithmeticSynthesisBase_pkg :=
  let CurveParameters_pkg := (eval hnf in CurveParameters_pkg) in
  let ArithmeticSynthesisBase_pkg := (eval hnf in ArithmeticSynthesisBase_pkg) in
  constr:((CurveParameters_pkg, ArithmeticSynthesisBase_pkg)).

Ltac pose_Mxzladderstep_sig CurveParameters_pkg ArithmeticSynthesisBase_pkg add_sig sub_sig mul_sig square_sig carry_sig Mxzladderstep_sig :=
  let pkg := combine_pkgs CurveParameters_pkg ArithmeticSynthesisBase_pkg in
  lazymatch pkg with
  | ((?sz, ?bitwidth, ?s, ?c, ?carry_chains, ?a24, ?coef_div_modulus, ?goldilocks, ?montgomery, ?modinv_fuel), (?r, ?m, ?m', ?r', ?m'_correct, ?r'_correct, ?wt, ?sz2, ?half_sz, ?half_sz_nonzero, ?m_enc, ?coef, ?coef_mod, ?sz_nonzero, ?wt_nonzero, ?wt_nonneg, ?wt_divides, ?wt_divides', ?wt_divides_chains, ?wt_pos, ?wt_multiples))
    => pose_Mxzladderstep_sig' sz wt m add_sig sub_sig mul_sig square_sig carry_sig Mxzladderstep_sig
  end.
