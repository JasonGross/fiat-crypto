sub = λ var : Z.Syntax.base_type → Type,
λ '(x14, x15, x13, x11, x9, x7, x5, x3, (x28, x29, x27, x25, x23, x21, x19, x17))%core,
(((0xfffffffffffe + x14) - x28), ((0xfffffffffffe + x15) - x29), ((0x1fffffffffffe + x13) - x27), ((0xfffffffffffe + x11) - x25), ((0xfffffffffffe + x9) - x23), ((0x1fffffffffffe + x7) - x21), ((0xfffffffffffe + x5) - x19), ((0x1ffffffffffda + x3) - x17))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t) -> uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
