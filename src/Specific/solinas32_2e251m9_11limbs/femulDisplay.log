mul = λ var : Z.Syntax.base_type → Type,
λ '(x20, x21, x19, x17, x15, x13, x11, x9, x7, x5, x3, (x40, x41, x39, x37, x35, x33, x31, x29, x27, x25, x23))%core,
uint64_t x42 = (0x2 * ((uint64_t)x20 * x40));
uint64_t x43 = ((0x2 * ((uint64_t)x21 * x40)) + (0x2 * ((uint64_t)x20 * x41)));
uint64_t x44 = ((0x2 * ((uint64_t)x19 * x40)) + ((0x2 * ((uint64_t)x21 * x41)) + (0x2 * ((uint64_t)x20 * x39))));
uint64_t x45 = ((0x2 * ((uint64_t)x17 * x40)) + ((0x2 * ((uint64_t)x19 * x41)) + ((0x2 * ((uint64_t)x21 * x39)) + (0x2 * ((uint64_t)x20 * x37)))));
uint64_t x46 = (((uint64_t)x15 * x40) + (((uint64_t)x17 * x41) + (((uint64_t)x19 * x39) + (((uint64_t)x21 * x37) + ((uint64_t)x20 * x35)))));
uint64_t x47 = ((0x2 * ((uint64_t)x13 * x40)) + (((uint64_t)x15 * x41) + (((uint64_t)x17 * x39) + (((uint64_t)x19 * x37) + (((uint64_t)x21 * x35) + (0x2 * ((uint64_t)x20 * x33)))))));
uint64_t x48 = ((0x2 * ((uint64_t)x11 * x40)) + ((0x2 * ((uint64_t)x13 * x41)) + (((uint64_t)x15 * x39) + (((uint64_t)x17 * x37) + (((uint64_t)x19 * x35) + ((0x2 * ((uint64_t)x21 * x33)) + (0x2 * ((uint64_t)x20 * x31))))))));
uint64_t x49 = ((0x2 * ((uint64_t)x9 * x40)) + ((0x2 * ((uint64_t)x11 * x41)) + ((0x2 * ((uint64_t)x13 * x39)) + (((uint64_t)x15 * x37) + (((uint64_t)x17 * x35) + ((0x2 * ((uint64_t)x19 * x33)) + ((0x2 * ((uint64_t)x21 * x31)) + (0x2 * ((uint64_t)x20 * x29)))))))));
uint64_t x50 = ((0x2 * ((uint64_t)x7 * x40)) + ((0x2 * ((uint64_t)x9 * x41)) + ((0x2 * ((uint64_t)x11 * x39)) + ((0x2 * ((uint64_t)x13 * x37)) + (((uint64_t)x15 * x35) + ((0x2 * ((uint64_t)x17 * x33)) + ((0x2 * ((uint64_t)x19 * x31)) + ((0x2 * ((uint64_t)x21 * x29)) + (0x2 * ((uint64_t)x20 * x27))))))))));
uint64_t x51 = ((0x2 * ((uint64_t)x5 * x40)) + ((0x2 * ((uint64_t)x7 * x41)) + ((0x2 * ((uint64_t)x9 * x39)) + ((0x2 * ((uint64_t)x11 * x37)) + ((0x2 * ((uint64_t)x13 * x35)) + ((0x2 * ((uint64_t)x15 * x33)) + ((0x2 * ((uint64_t)x17 * x31)) + ((0x2 * ((uint64_t)x19 * x29)) + ((0x2 * ((uint64_t)x21 * x27)) + (0x2 * ((uint64_t)x20 * x25)))))))))));
uint64_t x52 = (((uint64_t)x3 * x40) + (((uint64_t)x5 * x41) + (((uint64_t)x7 * x39) + (((uint64_t)x9 * x37) + (((uint64_t)x11 * x35) + ((0x2 * ((uint64_t)x13 * x33)) + (((uint64_t)x15 * x31) + (((uint64_t)x17 * x29) + (((uint64_t)x19 * x27) + (((uint64_t)x21 * x25) + ((uint64_t)x20 * x23)))))))))));
uint64_t x53 = (((uint64_t)x3 * x41) + (((uint64_t)x5 * x39) + (((uint64_t)x7 * x37) + (((uint64_t)x9 * x35) + ((0x2 * ((uint64_t)x11 * x33)) + ((0x2 * ((uint64_t)x13 * x31)) + (((uint64_t)x15 * x29) + (((uint64_t)x17 * x27) + (((uint64_t)x19 * x25) + ((uint64_t)x21 * x23))))))))));
uint64_t x54 = (((uint64_t)x3 * x39) + (((uint64_t)x5 * x37) + (((uint64_t)x7 * x35) + ((0x2 * ((uint64_t)x9 * x33)) + ((0x2 * ((uint64_t)x11 * x31)) + ((0x2 * ((uint64_t)x13 * x29)) + (((uint64_t)x15 * x27) + (((uint64_t)x17 * x25) + ((uint64_t)x19 * x23)))))))));
uint64_t x55 = (((uint64_t)x3 * x37) + (((uint64_t)x5 * x35) + ((0x2 * ((uint64_t)x7 * x33)) + ((0x2 * ((uint64_t)x9 * x31)) + ((0x2 * ((uint64_t)x11 * x29)) + ((0x2 * ((uint64_t)x13 * x27)) + (((uint64_t)x15 * x25) + ((uint64_t)x17 * x23))))))));
uint64_t x56 = (((uint64_t)x3 * x35) + ((0x2 * ((uint64_t)x5 * x33)) + ((0x2 * ((uint64_t)x7 * x31)) + ((0x2 * ((uint64_t)x9 * x29)) + ((0x2 * ((uint64_t)x11 * x27)) + ((0x2 * ((uint64_t)x13 * x25)) + ((uint64_t)x15 * x23)))))));
uint64_t x57 = (((uint64_t)x3 * x33) + (((uint64_t)x5 * x31) + (((uint64_t)x7 * x29) + (((uint64_t)x9 * x27) + (((uint64_t)x11 * x25) + ((uint64_t)x13 * x23))))));
uint64_t x58 = (((uint64_t)x3 * x31) + (((uint64_t)x5 * x29) + (((uint64_t)x7 * x27) + (((uint64_t)x9 * x25) + ((uint64_t)x11 * x23)))));
uint64_t x59 = (((uint64_t)x3 * x29) + (((uint64_t)x5 * x27) + (((uint64_t)x7 * x25) + ((uint64_t)x9 * x23))));
uint64_t x60 = (((uint64_t)x3 * x27) + (((uint64_t)x5 * x25) + ((uint64_t)x7 * x23)));
uint64_t x61 = (((uint64_t)x3 * x25) + ((uint64_t)x5 * x23));
uint64_t x62 = ((uint64_t)x3 * x23);
uint64_t x63 = (x53 + (0x9 * x42));
uint64_t x64 = (x54 + (0x9 * x43));
uint64_t x65 = (x55 + (0x9 * x44));
uint64_t x66 = (x56 + (0x9 * x45));
uint64_t x67 = (x57 + (0x9 * x46));
uint64_t x68 = (x58 + (0x9 * x47));
uint64_t x69 = (x59 + (0x9 * x48));
uint64_t x70 = (x60 + (0x9 * x49));
uint64_t x71 = (x61 + (0x9 * x50));
uint64_t x72 = (x62 + (0x9 * x51));
uint64_t x73 = (x72 >> 0x17);
uint32_t x74 = ((uint32_t)x72 & 0x7fffff);
uint64_t x75 = (x73 + x71);
uint64_t x76 = (x75 >> 0x17);
uint32_t x77 = ((uint32_t)x75 & 0x7fffff);
uint64_t x78 = (x76 + x70);
uint64_t x79 = (x78 >> 0x17);
uint32_t x80 = ((uint32_t)x78 & 0x7fffff);
uint64_t x81 = (x79 + x69);
uint64_t x82 = (x81 >> 0x17);
uint32_t x83 = ((uint32_t)x81 & 0x7fffff);
uint64_t x84 = (x82 + x68);
uint64_t x85 = (x84 >> 0x17);
uint32_t x86 = ((uint32_t)x84 & 0x7fffff);
uint64_t x87 = (x85 + x67);
uint64_t x88 = (x87 >> 0x16);
uint32_t x89 = ((uint32_t)x87 & 0x3fffff);
uint64_t x90 = (x88 + x66);
uint64_t x91 = (x90 >> 0x17);
uint32_t x92 = ((uint32_t)x90 & 0x7fffff);
uint64_t x93 = (x91 + x65);
uint64_t x94 = (x93 >> 0x17);
uint32_t x95 = ((uint32_t)x93 & 0x7fffff);
uint64_t x96 = (x94 + x64);
uint32_t x97 = (uint32_t) (x96 >> 0x17);
uint32_t x98 = ((uint32_t)x96 & 0x7fffff);
uint64_t x99 = (x97 + x63);
uint32_t x100 = (uint32_t) (x99 >> 0x17);
uint32_t x101 = ((uint32_t)x99 & 0x7fffff);
uint64_t x102 = (x100 + x52);
uint32_t x103 = (uint32_t) (x102 >> 0x16);
uint32_t x104 = ((uint32_t)x102 & 0x3fffff);
uint64_t x105 = (x74 + ((uint64_t)0x9 * x103));
uint32_t x106 = (uint32_t) (x105 >> 0x17);
uint32_t x107 = ((uint32_t)x105 & 0x7fffff);
uint32_t x108 = (x106 + x77);
uint32_t x109 = (x108 >> 0x17);
uint32_t x110 = (x108 & 0x7fffff);
return (Return x104, Return x101, Return x98, Return x95, Return x92, Return x89, Return x86, Return x83, (x109 + x80), Return x110, Return x107)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t) -> uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

Argument scope is [function_scope]
