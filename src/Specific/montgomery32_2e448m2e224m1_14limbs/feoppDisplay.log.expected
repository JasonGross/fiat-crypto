λ x : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x25, x26, x24, x22, x20, x18, x16, x14, x12, x10, x8, x6, x4, x2)%core,
 uint32_t x28, uint8_t/*bool*/ x29 = subborrow_u32(0x0, 0x0, x2);
 uint32_t x31, uint8_t/*bool*/ x32 = subborrow_u32(x29, 0x0, x4);
 uint32_t x34, uint8_t/*bool*/ x35 = subborrow_u32(x32, 0x0, x6);
 uint32_t x37, uint8_t/*bool*/ x38 = subborrow_u32(x35, 0x0, x8);
 uint32_t x40, uint8_t/*bool*/ x41 = subborrow_u32(x38, 0x0, x10);
 uint32_t x43, uint8_t/*bool*/ x44 = subborrow_u32(x41, 0x0, x12);
 uint32_t x46, uint8_t/*bool*/ x47 = subborrow_u32(x44, 0x0, x14);
 uint32_t x49, uint8_t/*bool*/ x50 = subborrow_u32(x47, 0x0, x16);
 uint32_t x52, uint8_t/*bool*/ x53 = subborrow_u32(x50, 0x0, x18);
 uint32_t x55, uint8_t/*bool*/ x56 = subborrow_u32(x53, 0x0, x20);
 uint32_t x58, uint8_t/*bool*/ x59 = subborrow_u32(x56, 0x0, x22);
 uint32_t x61, uint8_t/*bool*/ x62 = subborrow_u32(x59, 0x0, x24);
 uint32_t x64, uint8_t/*bool*/ x65 = subborrow_u32(x62, 0x0, x26);
 uint32_t x67, uint8_t/*bool*/ x68 = subborrow_u32(x65, 0x0, x25);
 uint32_t x69 = cmovznz32(x68, 0x0, 0xffffffff);
 uint32_t x70 = (x69 & 0xffffffff);
 uint32_t x72, uint8_t/*bool*/ x73 = addcarryx_u32(0x0, x28, x70);
 uint32_t x74 = (x69 & 0xffffffff);
 uint32_t x76, uint8_t/*bool*/ x77 = addcarryx_u32(x73, x31, x74);
 uint32_t x78 = (x69 & 0xffffffff);
 uint32_t x80, uint8_t/*bool*/ x81 = addcarryx_u32(x77, x34, x78);
 uint32_t x82 = (x69 & 0xffffffff);
 uint32_t x84, uint8_t/*bool*/ x85 = addcarryx_u32(x81, x37, x82);
 uint32_t x86 = (x69 & 0xffffffff);
 uint32_t x88, uint8_t/*bool*/ x89 = addcarryx_u32(x85, x40, x86);
 uint32_t x90 = (x69 & 0xffffffff);
 uint32_t x92, uint8_t/*bool*/ x93 = addcarryx_u32(x89, x43, x90);
 uint32_t x94 = (x69 & 0xffffffff);
 uint32_t x96, uint8_t/*bool*/ x97 = addcarryx_u32(x93, x46, x94);
 uint32_t x98 = (x69 & 0xfffffffe);
 uint32_t x100, uint8_t/*bool*/ x101 = addcarryx_u32(x97, x49, x98);
 uint32_t x102 = (x69 & 0xffffffff);
 uint32_t x104, uint8_t/*bool*/ x105 = addcarryx_u32(x101, x52, x102);
 uint32_t x106 = (x69 & 0xffffffff);
 uint32_t x108, uint8_t/*bool*/ x109 = addcarryx_u32(x105, x55, x106);
 uint32_t x110 = (x69 & 0xffffffff);
 uint32_t x112, uint8_t/*bool*/ x113 = addcarryx_u32(x109, x58, x110);
 uint32_t x114 = (x69 & 0xffffffff);
 uint32_t x116, uint8_t/*bool*/ x117 = addcarryx_u32(x113, x61, x114);
 uint32_t x118 = (x69 & 0xffffffff);
 uint32_t x120, uint8_t/*bool*/ x121 = addcarryx_u32(x117, x64, x118);
 uint32_t x122 = (x69 & 0xffffffff);
 uint32_t x124, uint8_t/*bool*/ _ = addcarryx_u32(x121, x67, x122);
 (Return x124, Return x120, Return x116, Return x112, Return x108, Return x104, Return x100, Return x96, Return x92, Return x88, Return x84, Return x80, Return x76, Return x72))
x
     : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)
