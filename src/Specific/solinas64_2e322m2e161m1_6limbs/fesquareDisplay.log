square = λ var : Z.Syntax.base_type → Type,
λ '(x8, x9, x7, x5, x3, x1)%core,
uint128_t x10 = ((0x2 * ((uint128_t)(x5 + x8) * (x5 + x8))) - (0x2 * ((uint128_t)x5 * x5)));
uint128_t x11 = (((0x2 * ((uint128_t)(x3 + x9) * (x5 + x8))) + (0x2 * ((uint128_t)(x5 + x8) * (x3 + x9)))) - ((0x2 * ((uint128_t)x3 * x5)) + (0x2 * ((uint128_t)x5 * x3))));
uint128_t x12 = ((((uint128_t)(x1 + x7) * (x5 + x8)) + (((uint128_t)(x3 + x9) * (x3 + x9)) + ((uint128_t)(x5 + x8) * (x1 + x7)))) - (((uint128_t)x1 * x5) + (((uint128_t)x3 * x3) + ((uint128_t)x5 * x1))));
uint128_t x13 = (((0x2 * ((uint128_t)x5 * x5)) + (0x2 * ((uint128_t)x8 * x8))) + ((((uint128_t)(x1 + x7) * (x3 + x9)) + ((uint128_t)(x3 + x9) * (x1 + x7))) - (((uint128_t)x1 * x3) + ((uint128_t)x3 * x1))));
uint128_t x14 = ((((0x2 * ((uint128_t)x3 * x5)) + (0x2 * ((uint128_t)x5 * x3))) + ((0x2 * ((uint128_t)x9 * x8)) + (0x2 * ((uint128_t)x8 * x9)))) + (((uint128_t)(x1 + x7) * (x1 + x7)) - ((uint128_t)x1 * x1)));
uint128_t x15 = ((((uint128_t)x1 * x5) + (((uint128_t)x3 * x3) + ((uint128_t)x5 * x1))) + (((uint128_t)x7 * x8) + (((uint128_t)x9 * x9) + ((uint128_t)x8 * x7))));
uint128_t x16 = ((((uint128_t)x1 * x3) + ((uint128_t)x3 * x1)) + (((uint128_t)x7 * x9) + ((uint128_t)x9 * x7)));
uint128_t x17 = (((uint128_t)x1 * x1) + ((uint128_t)x7 * x7));
uint128_t x18 = (x13 + x10);
uint128_t x19 = (x14 + x11);
uint128_t x20 = (x16 + x10);
uint128_t x21 = (x17 + x11);
uint64_t x22 = (uint64_t) (x15 >> 0x35);
uint64_t x23 = ((uint64_t)x15 & 0x1fffffffffffff);
uint64_t x24 = (uint64_t) (x12 >> 0x35);
uint64_t x25 = ((uint64_t)x12 & 0x1fffffffffffff);
uint128_t x26 = (((uint128_t)0x20000000000000 * x24) + x25);
uint64_t x27 = (uint64_t) (x26 >> 0x35);
uint64_t x28 = ((uint64_t)x26 & 0x1fffffffffffff);
uint128_t x29 = ((x22 + x19) + x27);
uint64_t x30 = (uint64_t) (x29 >> 0x36);
uint64_t x31 = ((uint64_t)x29 & 0x3fffffffffffff);
uint128_t x32 = (x21 + x27);
uint64_t x33 = (uint64_t) (x32 >> 0x36);
uint64_t x34 = ((uint64_t)x32 & 0x3fffffffffffff);
uint128_t x35 = (x30 + x18);
uint64_t x36 = (uint64_t) (x35 >> 0x36);
uint64_t x37 = ((uint64_t)x35 & 0x3fffffffffffff);
uint128_t x38 = (x33 + x20);
uint64_t x39 = (uint64_t) (x38 >> 0x36);
uint64_t x40 = ((uint64_t)x38 & 0x3fffffffffffff);
uint64_t x41 = (x36 + x28);
uint64_t x42 = (x41 >> 0x35);
uint64_t x43 = (x41 & 0x1fffffffffffff);
uint64_t x44 = (x39 + x23);
uint64_t x45 = (x44 >> 0x35);
uint64_t x46 = (x44 & 0x1fffffffffffff);
uint64_t x47 = ((0x20000000000000 * x42) + x43);
uint64_t x48 = (x47 >> 0x35);
uint64_t x49 = (x47 & 0x1fffffffffffff);
uint64_t x50 = ((x45 + x31) + x48);
uint64_t x51 = (x50 >> 0x36);
uint64_t x52 = (x50 & 0x3fffffffffffff);
uint64_t x53 = (x34 + x48);
uint64_t x54 = (x53 >> 0x36);
uint64_t x55 = (x53 & 0x3fffffffffffff);
return (Return x49, (x51 + x37), Return x52, Return x46, (x54 + x40), Return x55)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t -> uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
