mul = λ var : Z.Syntax.base_type → Type,
λ '(x6, x7, x5, x3, (x12, x13, x11, x9))%core,
uint64_t x15, uint64_t x16 = mulx_u64(x3, x9);
uint64_t x18, uint64_t x19 = mulx_u64(x3, x11);
uint64_t x21, uint64_t x22 = mulx_u64(x3, x13);
uint64_t x24, uint64_t x25 = mulx_u64(x3, x12);
uint64_t x27, uint8_t x28 = addcarryx_u64(0x0, x16, x18);
uint64_t x30, uint8_t x31 = addcarryx_u64(x28, x19, x21);
uint64_t x33, uint8_t x34 = addcarryx_u64(x31, x22, x24);
uint64_t x36, uint8_t _ = addcarryx_u64(0x0, x34, x25);
uint64_t x39, uint64_t _ = mulx_u64(x15, 0xffffffffffffffffL);
uint64_t x42, uint64_t x43 = mulx_u64(x39, 0xffffffff00000000L);
uint64_t x45, uint64_t x46 = mulx_u64(x39, 0xffffffffffffffffL);
uint64_t x48, uint64_t x49 = mulx_u64(x39, 0xffffffff);
uint64_t x51, uint8_t x52 = addcarryx_u64(0x0, x43, x45);
uint64_t x54, uint8_t x55 = addcarryx_u64(x52, x46, x48);
uint64_t x57, uint8_t _ = addcarryx_u64(0x0, x55, x49);
uint64_t _, uint8_t x61 = addcarryx_u64(0x0, x15, x39);
uint64_t x63, uint8_t x64 = addcarryx_u64(x61, x27, x42);
uint64_t x66, uint8_t x67 = addcarryx_u64(x64, x30, x51);
uint64_t x69, uint8_t x70 = addcarryx_u64(x67, x33, x54);
uint64_t x72, uint8_t x73 = addcarryx_u64(x70, x36, x57);
uint64_t x75, uint64_t x76 = mulx_u64(x5, x9);
uint64_t x78, uint64_t x79 = mulx_u64(x5, x11);
uint64_t x81, uint64_t x82 = mulx_u64(x5, x13);
uint64_t x84, uint64_t x85 = mulx_u64(x5, x12);
uint64_t x87, uint8_t x88 = addcarryx_u64(0x0, x76, x78);
uint64_t x90, uint8_t x91 = addcarryx_u64(x88, x79, x81);
uint64_t x93, uint8_t x94 = addcarryx_u64(x91, x82, x84);
uint64_t x96, uint8_t _ = addcarryx_u64(0x0, x94, x85);
uint64_t x99, uint8_t x100 = addcarryx_u64(0x0, x63, x75);
uint64_t x102, uint8_t x103 = addcarryx_u64(x100, x66, x87);
uint64_t x105, uint8_t x106 = addcarryx_u64(x103, x69, x90);
uint64_t x108, uint8_t x109 = addcarryx_u64(x106, x72, x93);
uint64_t x111, uint8_t x112 = addcarryx_u64(x109, x73, x96);
uint64_t x114, uint64_t _ = mulx_u64(x99, 0xffffffffffffffffL);
uint64_t x117, uint64_t x118 = mulx_u64(x114, 0xffffffff00000000L);
uint64_t x120, uint64_t x121 = mulx_u64(x114, 0xffffffffffffffffL);
uint64_t x123, uint64_t x124 = mulx_u64(x114, 0xffffffff);
uint64_t x126, uint8_t x127 = addcarryx_u64(0x0, x118, x120);
uint64_t x129, uint8_t x130 = addcarryx_u64(x127, x121, x123);
uint64_t x132, uint8_t _ = addcarryx_u64(0x0, x130, x124);
uint64_t _, uint8_t x136 = addcarryx_u64(0x0, x99, x114);
uint64_t x138, uint8_t x139 = addcarryx_u64(x136, x102, x117);
uint64_t x141, uint8_t x142 = addcarryx_u64(x139, x105, x126);
uint64_t x144, uint8_t x145 = addcarryx_u64(x142, x108, x129);
uint64_t x147, uint8_t x148 = addcarryx_u64(x145, x111, x132);
uint8_t x149 = (x148 + x112);
uint64_t x151, uint64_t x152 = mulx_u64(x7, x9);
uint64_t x154, uint64_t x155 = mulx_u64(x7, x11);
uint64_t x157, uint64_t x158 = mulx_u64(x7, x13);
uint64_t x160, uint64_t x161 = mulx_u64(x7, x12);
uint64_t x163, uint8_t x164 = addcarryx_u64(0x0, x152, x154);
uint64_t x166, uint8_t x167 = addcarryx_u64(x164, x155, x157);
uint64_t x169, uint8_t x170 = addcarryx_u64(x167, x158, x160);
uint64_t x172, uint8_t _ = addcarryx_u64(0x0, x170, x161);
uint64_t x175, uint8_t x176 = addcarryx_u64(0x0, x138, x151);
uint64_t x178, uint8_t x179 = addcarryx_u64(x176, x141, x163);
uint64_t x181, uint8_t x182 = addcarryx_u64(x179, x144, x166);
uint64_t x184, uint8_t x185 = addcarryx_u64(x182, x147, x169);
uint64_t x187, uint8_t x188 = addcarryx_u64(x185, x149, x172);
uint64_t x190, uint64_t _ = mulx_u64(x175, 0xffffffffffffffffL);
uint64_t x193, uint64_t x194 = mulx_u64(x190, 0xffffffff00000000L);
uint64_t x196, uint64_t x197 = mulx_u64(x190, 0xffffffffffffffffL);
uint64_t x199, uint64_t x200 = mulx_u64(x190, 0xffffffff);
uint64_t x202, uint8_t x203 = addcarryx_u64(0x0, x194, x196);
uint64_t x205, uint8_t x206 = addcarryx_u64(x203, x197, x199);
uint64_t x208, uint8_t _ = addcarryx_u64(0x0, x206, x200);
uint64_t _, uint8_t x212 = addcarryx_u64(0x0, x175, x190);
uint64_t x214, uint8_t x215 = addcarryx_u64(x212, x178, x193);
uint64_t x217, uint8_t x218 = addcarryx_u64(x215, x181, x202);
uint64_t x220, uint8_t x221 = addcarryx_u64(x218, x184, x205);
uint64_t x223, uint8_t x224 = addcarryx_u64(x221, x187, x208);
uint8_t x225 = (x224 + x188);
uint64_t x227, uint64_t x228 = mulx_u64(x6, x9);
uint64_t x230, uint64_t x231 = mulx_u64(x6, x11);
uint64_t x233, uint64_t x234 = mulx_u64(x6, x13);
uint64_t x236, uint64_t x237 = mulx_u64(x6, x12);
uint64_t x239, uint8_t x240 = addcarryx_u64(0x0, x228, x230);
uint64_t x242, uint8_t x243 = addcarryx_u64(x240, x231, x233);
uint64_t x245, uint8_t x246 = addcarryx_u64(x243, x234, x236);
uint64_t x248, uint8_t _ = addcarryx_u64(0x0, x246, x237);
uint64_t x251, uint8_t x252 = addcarryx_u64(0x0, x214, x227);
uint64_t x254, uint8_t x255 = addcarryx_u64(x252, x217, x239);
uint64_t x257, uint8_t x258 = addcarryx_u64(x255, x220, x242);
uint64_t x260, uint8_t x261 = addcarryx_u64(x258, x223, x245);
uint64_t x263, uint8_t x264 = addcarryx_u64(x261, x225, x248);
uint64_t x266, uint64_t _ = mulx_u64(x251, 0xffffffffffffffffL);
uint64_t x269, uint64_t x270 = mulx_u64(x266, 0xffffffff00000000L);
uint64_t x272, uint64_t x273 = mulx_u64(x266, 0xffffffffffffffffL);
uint64_t x275, uint64_t x276 = mulx_u64(x266, 0xffffffff);
uint64_t x278, uint8_t x279 = addcarryx_u64(0x0, x270, x272);
uint64_t x281, uint8_t x282 = addcarryx_u64(x279, x273, x275);
uint64_t x284, uint8_t _ = addcarryx_u64(0x0, x282, x276);
uint64_t _, uint8_t x288 = addcarryx_u64(0x0, x251, x266);
uint64_t x290, uint8_t x291 = addcarryx_u64(x288, x254, x269);
uint64_t x293, uint8_t x294 = addcarryx_u64(x291, x257, x278);
uint64_t x296, uint8_t x297 = addcarryx_u64(x294, x260, x281);
uint64_t x299, uint8_t x300 = addcarryx_u64(x297, x263, x284);
uint8_t x301 = (x300 + x264);
uint64_t x303, uint8_t x304 = subborrow_u64(0x0, x290, 0x1);
uint64_t x306, uint8_t x307 = subborrow_u64(x304, x293, 0xffffffff00000000L);
uint64_t x309, uint8_t x310 = subborrow_u64(x307, x296, 0xffffffffffffffffL);
uint64_t x312, uint8_t x313 = subborrow_u64(x310, x299, 0xffffffff);
uint64_t _, uint8_t x316 = subborrow_u64(x313, x301, 0x0);
(cmovznz64(x316, x312, x299), cmovznz64(x316, x309, x296), cmovznz64(x316, x306, x293), cmovznz64(x316, x303, x290))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * (uint64_t * uint64_t * uint64_t * uint64_t) -> uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
