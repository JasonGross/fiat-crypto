λ x x0 : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x26, x27, x25, x23, x21, x19, x17, x15, x13, x11, x9, x7, x5, (x50, x51, x49, x47, x45, x43, x41, x39, x37, x35, x33, x31, x29))%core,
 uint32_t x53, uint8_t/*bool*/ x54 = subborrow_u32(0x0, x5, x29);
 uint32_t x56, uint8_t/*bool*/ x57 = subborrow_u32(x54, x7, x31);
 uint32_t x59, uint8_t/*bool*/ x60 = subborrow_u32(x57, x9, x33);
 uint32_t x62, uint8_t/*bool*/ x63 = subborrow_u32(x60, x11, x35);
 uint32_t x65, uint8_t/*bool*/ x66 = subborrow_u32(x63, x13, x37);
 uint32_t x68, uint8_t/*bool*/ x69 = subborrow_u32(x66, x15, x39);
 uint32_t x71, uint8_t/*bool*/ x72 = subborrow_u32(x69, x17, x41);
 uint32_t x74, uint8_t/*bool*/ x75 = subborrow_u32(x72, x19, x43);
 uint32_t x77, uint8_t/*bool*/ x78 = subborrow_u32(x75, x21, x45);
 uint32_t x80, uint8_t/*bool*/ x81 = subborrow_u32(x78, x23, x47);
 uint32_t x83, uint8_t/*bool*/ x84 = subborrow_u32(x81, x25, x49);
 uint32_t x86, uint8_t/*bool*/ x87 = subborrow_u32(x84, x27, x51);
 uint32_t x89, uint8_t/*bool*/ x90 = subborrow_u32(x87, x26, x50);
 uint32_t x91 = cmovznz32(x90, 0x0, 0xffffffff);
 uint32_t x92 = (x91 & 0xffffffef);
 uint32_t x94, uint8_t/*bool*/ x95 = addcarryx_u32(0x0, x53, x92);
 uint32_t x96 = (x91 & 0xffffffff);
 uint32_t x98, uint8_t/*bool*/ x99 = addcarryx_u32(x95, x56, x96);
 uint32_t x100 = (x91 & 0xffffffff);
 uint32_t x102, uint8_t/*bool*/ x103 = addcarryx_u32(x99, x59, x100);
 uint32_t x104 = (x91 & 0xffffffff);
 uint32_t x106, uint8_t/*bool*/ x107 = addcarryx_u32(x103, x62, x104);
 uint32_t x108 = (x91 & 0xffffffff);
 uint32_t x110, uint8_t/*bool*/ x111 = addcarryx_u32(x107, x65, x108);
 uint32_t x112 = (x91 & 0xffffffff);
 uint32_t x114, uint8_t/*bool*/ x115 = addcarryx_u32(x111, x68, x112);
 uint32_t x116 = (x91 & 0xffffffff);
 uint32_t x118, uint8_t/*bool*/ x119 = addcarryx_u32(x115, x71, x116);
 uint32_t x120 = (x91 & 0xffffffff);
 uint32_t x122, uint8_t/*bool*/ x123 = addcarryx_u32(x119, x74, x120);
 uint32_t x124 = (x91 & 0xffffffff);
 uint32_t x126, uint8_t/*bool*/ x127 = addcarryx_u32(x123, x77, x124);
 uint32_t x128 = (x91 & 0xffffffff);
 uint32_t x130, uint8_t/*bool*/ x131 = addcarryx_u32(x127, x80, x128);
 uint32_t x132 = (x91 & 0xffffffff);
 uint32_t x134, uint8_t/*bool*/ x135 = addcarryx_u32(x131, x83, x132);
 uint32_t x136 = (x91 & 0xffffffff);
 uint32_t x138, uint8_t/*bool*/ x139 = addcarryx_u32(x135, x86, x136);
 uint32_t x140 = (x91 & 0x3fffffff);
 uint32_t x142, uint8_t/*bool*/ _ = addcarryx_u32(x139, x89, x140);
 (Return x142, Return x138, Return x134, Return x130, Return x126, Return x122, Return x118, Return x114, Return x110, Return x106, Return x102, Return x98, Return x94))
(x, x0)%core
     : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 → word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)
