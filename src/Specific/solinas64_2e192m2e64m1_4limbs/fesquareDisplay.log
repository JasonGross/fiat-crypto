square = λ var : Z.Syntax.base_type → Type,
λ '(x4, x5, x3, x1)%core,
uint128_t x6 = ((uint128_t)x4 * x4);
uint128_t x7 = (((uint128_t)x5 * x4) + ((uint128_t)x4 * x5));
uint128_t x8 = (((uint128_t)x3 * x4) + (((uint128_t)x5 * x5) + ((uint128_t)x4 * x3)));
uint128_t x9 = (((uint128_t)x1 * x4) + (((uint128_t)x3 * x5) + (((uint128_t)x5 * x3) + ((uint128_t)x4 * x1))));
uint128_t x10 = (((uint128_t)x1 * x5) + (((uint128_t)x3 * x3) + ((uint128_t)x5 * x1)));
uint128_t x11 = (((uint128_t)x1 * x3) + ((uint128_t)x3 * x1));
uint128_t x12 = ((uint128_t)x1 * x1);
uint128_t x13 = (x9 + (0x10000 * x6));
uint128_t x14 = (x10 + (x6 + (0x10000 * x7)));
uint128_t x15 = (x11 + (x7 + (0x10000 * x8)));
uint128_t x16 = (x12 + x8);
uint64_t x17 = (uint64_t) (x16 >> 0x30);
uint64_t x18 = ((uint64_t)x16 & 0xffffffffffff);
uint128_t x19 = (x13 >> 0x30);
uint64_t x20 = ((uint64_t)x13 & 0xffffffffffff);
uint128_t x21 = ((0x1000000000000 * x19) + x20);
uint128_t x22 = (x21 >> 0x30);
uint64_t x23 = ((uint64_t)x21 & 0xffffffffffff);
uint128_t x24 = ((x17 + x15) + (0x10000 * x22));
uint128_t x25 = (x24 >> 0x30);
uint64_t x26 = ((uint64_t)x24 & 0xffffffffffff);
uint128_t x27 = (x18 + x22);
uint64_t x28 = (uint64_t) (x27 >> 0x30);
uint64_t x29 = ((uint64_t)x27 & 0xffffffffffff);
uint128_t x30 = (x25 + x14);
uint128_t x31 = (x30 >> 0x30);
uint64_t x32 = ((uint64_t)x30 & 0xffffffffffff);
uint128_t x33 = (x31 + x23);
uint64_t x34 = (uint64_t) (x33 >> 0x30);
uint64_t x35 = ((uint64_t)x33 & 0xffffffffffff);
uint128_t x36 = (((uint128_t)0x1000000000000 * x34) + x35);
uint64_t x37 = (uint64_t) (x36 >> 0x30);
uint64_t x38 = ((uint64_t)x36 & 0xffffffffffff);
uint64_t x39 = ((x28 + x26) + (0x10000 * x37));
uint64_t x40 = (x39 >> 0x30);
uint64_t x41 = (x39 & 0xffffffffffff);
uint64_t x42 = (x29 + x37);
uint64_t x43 = (x42 >> 0x30);
uint64_t x44 = (x42 & 0xffffffffffff);
return (Return x38, (x40 + x32), (x43 + x41), Return x44)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t -> uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
