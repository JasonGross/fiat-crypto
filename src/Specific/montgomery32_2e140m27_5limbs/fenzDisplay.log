nonzero = λ var : Z.Syntax.base_type → Type,
λ '(x6, x7, x5, x3, x1)%core,
uint32_t x8 = (x7 | x6);
uint32_t x9 = (x5 | x8);
uint32_t x10 = (x3 | x9);
uint32_t x11 = (x1 | x10);
return x11
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t -> uint32_t)

Argument scope is [function_scope]
