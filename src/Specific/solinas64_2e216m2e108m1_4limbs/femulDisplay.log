mul = λ var : Z.Syntax.base_type → Type,
λ '(x6, x7, x5, x3, (x12, x13, x11, x9))%core,
uint128_t x14 = (((uint128_t)(x5 + x6) * (x11 + x12)) - ((uint128_t)x5 * x11));
uint128_t x15 = ((((uint128_t)(x3 + x7) * (x11 + x12)) + ((uint128_t)(x5 + x6) * (x9 + x13))) - (((uint128_t)x3 * x11) + ((uint128_t)x5 * x9)));
uint128_t x16 = ((((uint128_t)x5 * x11) + ((uint128_t)x6 * x12)) + (((uint128_t)(x3 + x7) * (x9 + x13)) - ((uint128_t)x3 * x9)));
uint128_t x17 = ((((uint128_t)x3 * x11) + ((uint128_t)x5 * x9)) + (((uint128_t)x7 * x12) + ((uint128_t)x6 * x13)));
uint128_t x18 = (((uint128_t)x3 * x9) + ((uint128_t)x7 * x13));
uint128_t x19 = (x16 + x14);
uint128_t x20 = (x18 + x14);
uint64_t x21 = (uint64_t) (x17 >> 0x36);
uint64_t x22 = ((uint64_t)x17 & 0x3fffffffffffff);
uint64_t x23 = (uint64_t) (x15 >> 0x36);
uint64_t x24 = ((uint64_t)x15 & 0x3fffffffffffff);
uint128_t x25 = (((uint128_t)0x40000000000000 * x23) + x24);
uint64_t x26 = (uint64_t) (x25 >> 0x36);
uint64_t x27 = ((uint64_t)x25 & 0x3fffffffffffff);
uint128_t x28 = ((x21 + x19) + x26);
uint64_t x29 = (uint64_t) (x28 >> 0x36);
uint64_t x30 = ((uint64_t)x28 & 0x3fffffffffffff);
uint128_t x31 = (x20 + x26);
uint64_t x32 = (uint64_t) (x31 >> 0x36);
uint64_t x33 = ((uint64_t)x31 & 0x3fffffffffffff);
uint64_t x34 = (x29 + x27);
uint64_t x35 = (x34 >> 0x36);
uint64_t x36 = (x34 & 0x3fffffffffffff);
uint64_t x37 = (x32 + x22);
uint64_t x38 = (x37 >> 0x36);
uint64_t x39 = (x37 & 0x3fffffffffffff);
uint64_t x40 = ((0x40000000000000 * x35) + x36);
uint64_t x41 = (x40 >> 0x36);
uint64_t x42 = (x40 & 0x3fffffffffffff);
uint64_t x43 = ((x38 + x30) + x41);
uint64_t x44 = (x43 >> 0x36);
uint64_t x45 = (x43 & 0x3fffffffffffff);
uint64_t x46 = (x33 + x41);
uint64_t x47 = (x46 >> 0x36);
uint64_t x48 = (x46 & 0x3fffffffffffff);
return ((x44 + x42), Return x45, (x47 + x39), Return x48)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * (uint64_t * uint64_t * uint64_t * uint64_t) -> uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
