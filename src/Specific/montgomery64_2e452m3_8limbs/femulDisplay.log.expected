λ x x0 : word64 * word64 * word64 * word64 * word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x16, x17, x15, x13, x11, x9, x7, x5, (x30, x31, x29, x27, x25, x23, x21, x19))%core,
 uint64_t x33, uint64_t x34 = mulx_u64(x5, x19);
 uint64_t x36, uint64_t x37 = mulx_u64(x5, x21);
 uint64_t x39, uint64_t x40 = mulx_u64(x5, x23);
 uint64_t x42, uint64_t x43 = mulx_u64(x5, x25);
 uint64_t x45, uint64_t x46 = mulx_u64(x5, x27);
 uint64_t x48, uint64_t x49 = mulx_u64(x5, x29);
 uint64_t x51, uint64_t x52 = mulx_u64(x5, x31);
 uint64_t x54, uint64_t x55 = mulx_u64(x5, x30);
 uint64_t x57, uint8_t/*bool*/ x58 = addcarryx_u64(0x0, x34, x36);
 uint64_t x60, uint8_t/*bool*/ x61 = addcarryx_u64(x58, x37, x39);
 uint64_t x63, uint8_t/*bool*/ x64 = addcarryx_u64(x61, x40, x42);
 uint64_t x66, uint8_t/*bool*/ x67 = addcarryx_u64(x64, x43, x45);
 uint64_t x69, uint8_t/*bool*/ x70 = addcarryx_u64(x67, x46, x48);
 uint64_t x72, uint8_t/*bool*/ x73 = addcarryx_u64(x70, x49, x51);
 uint64_t x75, uint8_t/*bool*/ x76 = addcarryx_u64(x73, x52, x54);
 uint64_t x78, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x76, x55);
 uint64_t x81, uint64_t _ = mulx_u64(x33, 0xaaaaaaaaaaaaaaabL);
 uint64_t x84, uint64_t x85 = mulx_u64(x81, 0xfffffffffffffffdL);
 uint64_t x87, uint64_t x88 = mulx_u64(x81, 0xffffffffffffffffL);
 uint64_t x90, uint64_t x91 = mulx_u64(x81, 0xffffffffffffffffL);
 uint64_t x93, uint64_t x94 = mulx_u64(x81, 0xffffffffffffffffL);
 uint64_t x96, uint64_t x97 = mulx_u64(x81, 0xffffffffffffffffL);
 uint64_t x99, uint64_t x100 = mulx_u64(x81, 0xffffffffffffffffL);
 uint64_t x102, uint64_t x103 = mulx_u64(x81, 0xffffffffffffffffL);
 uint64_t x105, uint8_t x106 = mulx_u64_out_u8(x81, 0xf);
 uint64_t x108, uint8_t/*bool*/ x109 = addcarryx_u64(0x0, x85, x87);
 uint64_t x111, uint8_t/*bool*/ x112 = addcarryx_u64(x109, x88, x90);
 uint64_t x114, uint8_t/*bool*/ x115 = addcarryx_u64(x112, x91, x93);
 uint64_t x117, uint8_t/*bool*/ x118 = addcarryx_u64(x115, x94, x96);
 uint64_t x120, uint8_t/*bool*/ x121 = addcarryx_u64(x118, x97, x99);
 uint64_t x123, uint8_t/*bool*/ x124 = addcarryx_u64(x121, x100, x102);
 uint64_t x126, uint8_t/*bool*/ x127 = addcarryx_u64(x124, x103, x105);
 uint8_t x128 = ((uint8_t)0x0 + x127);
 uint8_t x129 = (x128 + x106);
 uint64_t _, uint8_t/*bool*/ x132 = addcarryx_u64(0x0, x33, x84);
 uint64_t x134, uint8_t/*bool*/ x135 = addcarryx_u64(x132, x57, x108);
 uint64_t x137, uint8_t/*bool*/ x138 = addcarryx_u64(x135, x60, x111);
 uint64_t x140, uint8_t/*bool*/ x141 = addcarryx_u64(x138, x63, x114);
 uint64_t x143, uint8_t/*bool*/ x144 = addcarryx_u64(x141, x66, x117);
 uint64_t x146, uint8_t/*bool*/ x147 = addcarryx_u64(x144, x69, x120);
 uint64_t x149, uint8_t/*bool*/ x150 = addcarryx_u64(x147, x72, x123);
 uint64_t x152, uint8_t/*bool*/ x153 = addcarryx_u64(x150, x75, x126);
 uint64_t x155, uint8_t/*bool*/ x156 = addcarryx_u64(x153, x78, x129);
 uint8_t/*bool*/ x157 = (1&(x156 + 0x0));
 uint64_t x159, uint64_t x160 = mulx_u64(x7, x19);
 uint64_t x162, uint64_t x163 = mulx_u64(x7, x21);
 uint64_t x165, uint64_t x166 = mulx_u64(x7, x23);
 uint64_t x168, uint64_t x169 = mulx_u64(x7, x25);
 uint64_t x171, uint64_t x172 = mulx_u64(x7, x27);
 uint64_t x174, uint64_t x175 = mulx_u64(x7, x29);
 uint64_t x177, uint64_t x178 = mulx_u64(x7, x31);
 uint64_t x180, uint64_t x181 = mulx_u64(x7, x30);
 uint64_t x183, uint8_t/*bool*/ x184 = addcarryx_u64(0x0, x160, x162);
 uint64_t x186, uint8_t/*bool*/ x187 = addcarryx_u64(x184, x163, x165);
 uint64_t x189, uint8_t/*bool*/ x190 = addcarryx_u64(x187, x166, x168);
 uint64_t x192, uint8_t/*bool*/ x193 = addcarryx_u64(x190, x169, x171);
 uint64_t x195, uint8_t/*bool*/ x196 = addcarryx_u64(x193, x172, x174);
 uint64_t x198, uint8_t/*bool*/ x199 = addcarryx_u64(x196, x175, x177);
 uint64_t x201, uint8_t/*bool*/ x202 = addcarryx_u64(x199, x178, x180);
 uint64_t x204, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x202, x181);
 uint64_t x207, uint8_t/*bool*/ x208 = addcarryx_u64(0x0, x134, x159);
 uint64_t x210, uint8_t/*bool*/ x211 = addcarryx_u64(x208, x137, x183);
 uint64_t x213, uint8_t/*bool*/ x214 = addcarryx_u64(x211, x140, x186);
 uint64_t x216, uint8_t/*bool*/ x217 = addcarryx_u64(x214, x143, x189);
 uint64_t x219, uint8_t/*bool*/ x220 = addcarryx_u64(x217, x146, x192);
 uint64_t x222, uint8_t/*bool*/ x223 = addcarryx_u64(x220, x149, x195);
 uint64_t x225, uint8_t/*bool*/ x226 = addcarryx_u64(x223, x152, x198);
 uint64_t x228, uint8_t/*bool*/ x229 = addcarryx_u64(x226, x155, x201);
 uint64_t x231, uint8_t/*bool*/ x232 = addcarryx_u64(x229, x157, x204);
 uint64_t x234, uint64_t _ = mulx_u64(x207, 0xaaaaaaaaaaaaaaabL);
 uint64_t x237, uint64_t x238 = mulx_u64(x234, 0xfffffffffffffffdL);
 uint64_t x240, uint64_t x241 = mulx_u64(x234, 0xffffffffffffffffL);
 uint64_t x243, uint64_t x244 = mulx_u64(x234, 0xffffffffffffffffL);
 uint64_t x246, uint64_t x247 = mulx_u64(x234, 0xffffffffffffffffL);
 uint64_t x249, uint64_t x250 = mulx_u64(x234, 0xffffffffffffffffL);
 uint64_t x252, uint64_t x253 = mulx_u64(x234, 0xffffffffffffffffL);
 uint64_t x255, uint64_t x256 = mulx_u64(x234, 0xffffffffffffffffL);
 uint64_t x258, uint8_t x259 = mulx_u64_out_u8(x234, 0xf);
 uint64_t x261, uint8_t/*bool*/ x262 = addcarryx_u64(0x0, x238, x240);
 uint64_t x264, uint8_t/*bool*/ x265 = addcarryx_u64(x262, x241, x243);
 uint64_t x267, uint8_t/*bool*/ x268 = addcarryx_u64(x265, x244, x246);
 uint64_t x270, uint8_t/*bool*/ x271 = addcarryx_u64(x268, x247, x249);
 uint64_t x273, uint8_t/*bool*/ x274 = addcarryx_u64(x271, x250, x252);
 uint64_t x276, uint8_t/*bool*/ x277 = addcarryx_u64(x274, x253, x255);
 uint64_t x279, uint8_t/*bool*/ x280 = addcarryx_u64(x277, x256, x258);
 uint8_t x281 = ((uint8_t)0x0 + x280);
 uint8_t x282 = (x281 + x259);
 uint64_t _, uint8_t/*bool*/ x285 = addcarryx_u64(0x0, x207, x237);
 uint64_t x287, uint8_t/*bool*/ x288 = addcarryx_u64(x285, x210, x261);
 uint64_t x290, uint8_t/*bool*/ x291 = addcarryx_u64(x288, x213, x264);
 uint64_t x293, uint8_t/*bool*/ x294 = addcarryx_u64(x291, x216, x267);
 uint64_t x296, uint8_t/*bool*/ x297 = addcarryx_u64(x294, x219, x270);
 uint64_t x299, uint8_t/*bool*/ x300 = addcarryx_u64(x297, x222, x273);
 uint64_t x302, uint8_t/*bool*/ x303 = addcarryx_u64(x300, x225, x276);
 uint64_t x305, uint8_t/*bool*/ x306 = addcarryx_u64(x303, x228, x279);
 uint64_t x308, uint8_t/*bool*/ x309 = addcarryx_u64(x306, x231, x282);
 uint8_t x310 = ((uint8_t)x309 + x232);
 uint64_t x312, uint64_t x313 = mulx_u64(x9, x19);
 uint64_t x315, uint64_t x316 = mulx_u64(x9, x21);
 uint64_t x318, uint64_t x319 = mulx_u64(x9, x23);
 uint64_t x321, uint64_t x322 = mulx_u64(x9, x25);
 uint64_t x324, uint64_t x325 = mulx_u64(x9, x27);
 uint64_t x327, uint64_t x328 = mulx_u64(x9, x29);
 uint64_t x330, uint64_t x331 = mulx_u64(x9, x31);
 uint64_t x333, uint64_t x334 = mulx_u64(x9, x30);
 uint64_t x336, uint8_t/*bool*/ x337 = addcarryx_u64(0x0, x313, x315);
 uint64_t x339, uint8_t/*bool*/ x340 = addcarryx_u64(x337, x316, x318);
 uint64_t x342, uint8_t/*bool*/ x343 = addcarryx_u64(x340, x319, x321);
 uint64_t x345, uint8_t/*bool*/ x346 = addcarryx_u64(x343, x322, x324);
 uint64_t x348, uint8_t/*bool*/ x349 = addcarryx_u64(x346, x325, x327);
 uint64_t x351, uint8_t/*bool*/ x352 = addcarryx_u64(x349, x328, x330);
 uint64_t x354, uint8_t/*bool*/ x355 = addcarryx_u64(x352, x331, x333);
 uint64_t x357, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x355, x334);
 uint64_t x360, uint8_t/*bool*/ x361 = addcarryx_u64(0x0, x287, x312);
 uint64_t x363, uint8_t/*bool*/ x364 = addcarryx_u64(x361, x290, x336);
 uint64_t x366, uint8_t/*bool*/ x367 = addcarryx_u64(x364, x293, x339);
 uint64_t x369, uint8_t/*bool*/ x370 = addcarryx_u64(x367, x296, x342);
 uint64_t x372, uint8_t/*bool*/ x373 = addcarryx_u64(x370, x299, x345);
 uint64_t x375, uint8_t/*bool*/ x376 = addcarryx_u64(x373, x302, x348);
 uint64_t x378, uint8_t/*bool*/ x379 = addcarryx_u64(x376, x305, x351);
 uint64_t x381, uint8_t/*bool*/ x382 = addcarryx_u64(x379, x308, x354);
 uint64_t x384, uint8_t/*bool*/ x385 = addcarryx_u64(x382, x310, x357);
 uint64_t x387, uint64_t _ = mulx_u64(x360, 0xaaaaaaaaaaaaaaabL);
 uint64_t x390, uint64_t x391 = mulx_u64(x387, 0xfffffffffffffffdL);
 uint64_t x393, uint64_t x394 = mulx_u64(x387, 0xffffffffffffffffL);
 uint64_t x396, uint64_t x397 = mulx_u64(x387, 0xffffffffffffffffL);
 uint64_t x399, uint64_t x400 = mulx_u64(x387, 0xffffffffffffffffL);
 uint64_t x402, uint64_t x403 = mulx_u64(x387, 0xffffffffffffffffL);
 uint64_t x405, uint64_t x406 = mulx_u64(x387, 0xffffffffffffffffL);
 uint64_t x408, uint64_t x409 = mulx_u64(x387, 0xffffffffffffffffL);
 uint64_t x411, uint8_t x412 = mulx_u64_out_u8(x387, 0xf);
 uint64_t x414, uint8_t/*bool*/ x415 = addcarryx_u64(0x0, x391, x393);
 uint64_t x417, uint8_t/*bool*/ x418 = addcarryx_u64(x415, x394, x396);
 uint64_t x420, uint8_t/*bool*/ x421 = addcarryx_u64(x418, x397, x399);
 uint64_t x423, uint8_t/*bool*/ x424 = addcarryx_u64(x421, x400, x402);
 uint64_t x426, uint8_t/*bool*/ x427 = addcarryx_u64(x424, x403, x405);
 uint64_t x429, uint8_t/*bool*/ x430 = addcarryx_u64(x427, x406, x408);
 uint64_t x432, uint8_t/*bool*/ x433 = addcarryx_u64(x430, x409, x411);
 uint8_t x434 = ((uint8_t)0x0 + x433);
 uint8_t x435 = (x434 + x412);
 uint64_t _, uint8_t/*bool*/ x438 = addcarryx_u64(0x0, x360, x390);
 uint64_t x440, uint8_t/*bool*/ x441 = addcarryx_u64(x438, x363, x414);
 uint64_t x443, uint8_t/*bool*/ x444 = addcarryx_u64(x441, x366, x417);
 uint64_t x446, uint8_t/*bool*/ x447 = addcarryx_u64(x444, x369, x420);
 uint64_t x449, uint8_t/*bool*/ x450 = addcarryx_u64(x447, x372, x423);
 uint64_t x452, uint8_t/*bool*/ x453 = addcarryx_u64(x450, x375, x426);
 uint64_t x455, uint8_t/*bool*/ x456 = addcarryx_u64(x453, x378, x429);
 uint64_t x458, uint8_t/*bool*/ x459 = addcarryx_u64(x456, x381, x432);
 uint64_t x461, uint8_t/*bool*/ x462 = addcarryx_u64(x459, x384, x435);
 uint8_t x463 = ((uint8_t)x462 + x385);
 uint64_t x465, uint64_t x466 = mulx_u64(x11, x19);
 uint64_t x468, uint64_t x469 = mulx_u64(x11, x21);
 uint64_t x471, uint64_t x472 = mulx_u64(x11, x23);
 uint64_t x474, uint64_t x475 = mulx_u64(x11, x25);
 uint64_t x477, uint64_t x478 = mulx_u64(x11, x27);
 uint64_t x480, uint64_t x481 = mulx_u64(x11, x29);
 uint64_t x483, uint64_t x484 = mulx_u64(x11, x31);
 uint64_t x486, uint64_t x487 = mulx_u64(x11, x30);
 uint64_t x489, uint8_t/*bool*/ x490 = addcarryx_u64(0x0, x466, x468);
 uint64_t x492, uint8_t/*bool*/ x493 = addcarryx_u64(x490, x469, x471);
 uint64_t x495, uint8_t/*bool*/ x496 = addcarryx_u64(x493, x472, x474);
 uint64_t x498, uint8_t/*bool*/ x499 = addcarryx_u64(x496, x475, x477);
 uint64_t x501, uint8_t/*bool*/ x502 = addcarryx_u64(x499, x478, x480);
 uint64_t x504, uint8_t/*bool*/ x505 = addcarryx_u64(x502, x481, x483);
 uint64_t x507, uint8_t/*bool*/ x508 = addcarryx_u64(x505, x484, x486);
 uint64_t x510, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x508, x487);
 uint64_t x513, uint8_t/*bool*/ x514 = addcarryx_u64(0x0, x440, x465);
 uint64_t x516, uint8_t/*bool*/ x517 = addcarryx_u64(x514, x443, x489);
 uint64_t x519, uint8_t/*bool*/ x520 = addcarryx_u64(x517, x446, x492);
 uint64_t x522, uint8_t/*bool*/ x523 = addcarryx_u64(x520, x449, x495);
 uint64_t x525, uint8_t/*bool*/ x526 = addcarryx_u64(x523, x452, x498);
 uint64_t x528, uint8_t/*bool*/ x529 = addcarryx_u64(x526, x455, x501);
 uint64_t x531, uint8_t/*bool*/ x532 = addcarryx_u64(x529, x458, x504);
 uint64_t x534, uint8_t/*bool*/ x535 = addcarryx_u64(x532, x461, x507);
 uint64_t x537, uint8_t/*bool*/ x538 = addcarryx_u64(x535, x463, x510);
 uint64_t x540, uint64_t _ = mulx_u64(x513, 0xaaaaaaaaaaaaaaabL);
 uint64_t x543, uint64_t x544 = mulx_u64(x540, 0xfffffffffffffffdL);
 uint64_t x546, uint64_t x547 = mulx_u64(x540, 0xffffffffffffffffL);
 uint64_t x549, uint64_t x550 = mulx_u64(x540, 0xffffffffffffffffL);
 uint64_t x552, uint64_t x553 = mulx_u64(x540, 0xffffffffffffffffL);
 uint64_t x555, uint64_t x556 = mulx_u64(x540, 0xffffffffffffffffL);
 uint64_t x558, uint64_t x559 = mulx_u64(x540, 0xffffffffffffffffL);
 uint64_t x561, uint64_t x562 = mulx_u64(x540, 0xffffffffffffffffL);
 uint64_t x564, uint8_t x565 = mulx_u64_out_u8(x540, 0xf);
 uint64_t x567, uint8_t/*bool*/ x568 = addcarryx_u64(0x0, x544, x546);
 uint64_t x570, uint8_t/*bool*/ x571 = addcarryx_u64(x568, x547, x549);
 uint64_t x573, uint8_t/*bool*/ x574 = addcarryx_u64(x571, x550, x552);
 uint64_t x576, uint8_t/*bool*/ x577 = addcarryx_u64(x574, x553, x555);
 uint64_t x579, uint8_t/*bool*/ x580 = addcarryx_u64(x577, x556, x558);
 uint64_t x582, uint8_t/*bool*/ x583 = addcarryx_u64(x580, x559, x561);
 uint64_t x585, uint8_t/*bool*/ x586 = addcarryx_u64(x583, x562, x564);
 uint8_t x587 = ((uint8_t)0x0 + x586);
 uint8_t x588 = (x587 + x565);
 uint64_t _, uint8_t/*bool*/ x591 = addcarryx_u64(0x0, x513, x543);
 uint64_t x593, uint8_t/*bool*/ x594 = addcarryx_u64(x591, x516, x567);
 uint64_t x596, uint8_t/*bool*/ x597 = addcarryx_u64(x594, x519, x570);
 uint64_t x599, uint8_t/*bool*/ x600 = addcarryx_u64(x597, x522, x573);
 uint64_t x602, uint8_t/*bool*/ x603 = addcarryx_u64(x600, x525, x576);
 uint64_t x605, uint8_t/*bool*/ x606 = addcarryx_u64(x603, x528, x579);
 uint64_t x608, uint8_t/*bool*/ x609 = addcarryx_u64(x606, x531, x582);
 uint64_t x611, uint8_t/*bool*/ x612 = addcarryx_u64(x609, x534, x585);
 uint64_t x614, uint8_t/*bool*/ x615 = addcarryx_u64(x612, x537, x588);
 uint8_t x616 = ((uint8_t)x615 + x538);
 uint64_t x618, uint64_t x619 = mulx_u64(x13, x19);
 uint64_t x621, uint64_t x622 = mulx_u64(x13, x21);
 uint64_t x624, uint64_t x625 = mulx_u64(x13, x23);
 uint64_t x627, uint64_t x628 = mulx_u64(x13, x25);
 uint64_t x630, uint64_t x631 = mulx_u64(x13, x27);
 uint64_t x633, uint64_t x634 = mulx_u64(x13, x29);
 uint64_t x636, uint64_t x637 = mulx_u64(x13, x31);
 uint64_t x639, uint64_t x640 = mulx_u64(x13, x30);
 uint64_t x642, uint8_t/*bool*/ x643 = addcarryx_u64(0x0, x619, x621);
 uint64_t x645, uint8_t/*bool*/ x646 = addcarryx_u64(x643, x622, x624);
 uint64_t x648, uint8_t/*bool*/ x649 = addcarryx_u64(x646, x625, x627);
 uint64_t x651, uint8_t/*bool*/ x652 = addcarryx_u64(x649, x628, x630);
 uint64_t x654, uint8_t/*bool*/ x655 = addcarryx_u64(x652, x631, x633);
 uint64_t x657, uint8_t/*bool*/ x658 = addcarryx_u64(x655, x634, x636);
 uint64_t x660, uint8_t/*bool*/ x661 = addcarryx_u64(x658, x637, x639);
 uint64_t x663, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x661, x640);
 uint64_t x666, uint8_t/*bool*/ x667 = addcarryx_u64(0x0, x593, x618);
 uint64_t x669, uint8_t/*bool*/ x670 = addcarryx_u64(x667, x596, x642);
 uint64_t x672, uint8_t/*bool*/ x673 = addcarryx_u64(x670, x599, x645);
 uint64_t x675, uint8_t/*bool*/ x676 = addcarryx_u64(x673, x602, x648);
 uint64_t x678, uint8_t/*bool*/ x679 = addcarryx_u64(x676, x605, x651);
 uint64_t x681, uint8_t/*bool*/ x682 = addcarryx_u64(x679, x608, x654);
 uint64_t x684, uint8_t/*bool*/ x685 = addcarryx_u64(x682, x611, x657);
 uint64_t x687, uint8_t/*bool*/ x688 = addcarryx_u64(x685, x614, x660);
 uint64_t x690, uint8_t/*bool*/ x691 = addcarryx_u64(x688, x616, x663);
 uint64_t x693, uint64_t _ = mulx_u64(x666, 0xaaaaaaaaaaaaaaabL);
 uint64_t x696, uint64_t x697 = mulx_u64(x693, 0xfffffffffffffffdL);
 uint64_t x699, uint64_t x700 = mulx_u64(x693, 0xffffffffffffffffL);
 uint64_t x702, uint64_t x703 = mulx_u64(x693, 0xffffffffffffffffL);
 uint64_t x705, uint64_t x706 = mulx_u64(x693, 0xffffffffffffffffL);
 uint64_t x708, uint64_t x709 = mulx_u64(x693, 0xffffffffffffffffL);
 uint64_t x711, uint64_t x712 = mulx_u64(x693, 0xffffffffffffffffL);
 uint64_t x714, uint64_t x715 = mulx_u64(x693, 0xffffffffffffffffL);
 uint64_t x717, uint8_t x718 = mulx_u64_out_u8(x693, 0xf);
 uint64_t x720, uint8_t/*bool*/ x721 = addcarryx_u64(0x0, x697, x699);
 uint64_t x723, uint8_t/*bool*/ x724 = addcarryx_u64(x721, x700, x702);
 uint64_t x726, uint8_t/*bool*/ x727 = addcarryx_u64(x724, x703, x705);
 uint64_t x729, uint8_t/*bool*/ x730 = addcarryx_u64(x727, x706, x708);
 uint64_t x732, uint8_t/*bool*/ x733 = addcarryx_u64(x730, x709, x711);
 uint64_t x735, uint8_t/*bool*/ x736 = addcarryx_u64(x733, x712, x714);
 uint64_t x738, uint8_t/*bool*/ x739 = addcarryx_u64(x736, x715, x717);
 uint8_t x740 = ((uint8_t)0x0 + x739);
 uint8_t x741 = (x740 + x718);
 uint64_t _, uint8_t/*bool*/ x744 = addcarryx_u64(0x0, x666, x696);
 uint64_t x746, uint8_t/*bool*/ x747 = addcarryx_u64(x744, x669, x720);
 uint64_t x749, uint8_t/*bool*/ x750 = addcarryx_u64(x747, x672, x723);
 uint64_t x752, uint8_t/*bool*/ x753 = addcarryx_u64(x750, x675, x726);
 uint64_t x755, uint8_t/*bool*/ x756 = addcarryx_u64(x753, x678, x729);
 uint64_t x758, uint8_t/*bool*/ x759 = addcarryx_u64(x756, x681, x732);
 uint64_t x761, uint8_t/*bool*/ x762 = addcarryx_u64(x759, x684, x735);
 uint64_t x764, uint8_t/*bool*/ x765 = addcarryx_u64(x762, x687, x738);
 uint64_t x767, uint8_t/*bool*/ x768 = addcarryx_u64(x765, x690, x741);
 uint8_t x769 = ((uint8_t)x768 + x691);
 uint64_t x771, uint64_t x772 = mulx_u64(x15, x19);
 uint64_t x774, uint64_t x775 = mulx_u64(x15, x21);
 uint64_t x777, uint64_t x778 = mulx_u64(x15, x23);
 uint64_t x780, uint64_t x781 = mulx_u64(x15, x25);
 uint64_t x783, uint64_t x784 = mulx_u64(x15, x27);
 uint64_t x786, uint64_t x787 = mulx_u64(x15, x29);
 uint64_t x789, uint64_t x790 = mulx_u64(x15, x31);
 uint64_t x792, uint64_t x793 = mulx_u64(x15, x30);
 uint64_t x795, uint8_t/*bool*/ x796 = addcarryx_u64(0x0, x772, x774);
 uint64_t x798, uint8_t/*bool*/ x799 = addcarryx_u64(x796, x775, x777);
 uint64_t x801, uint8_t/*bool*/ x802 = addcarryx_u64(x799, x778, x780);
 uint64_t x804, uint8_t/*bool*/ x805 = addcarryx_u64(x802, x781, x783);
 uint64_t x807, uint8_t/*bool*/ x808 = addcarryx_u64(x805, x784, x786);
 uint64_t x810, uint8_t/*bool*/ x811 = addcarryx_u64(x808, x787, x789);
 uint64_t x813, uint8_t/*bool*/ x814 = addcarryx_u64(x811, x790, x792);
 uint64_t x816, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x814, x793);
 uint64_t x819, uint8_t/*bool*/ x820 = addcarryx_u64(0x0, x746, x771);
 uint64_t x822, uint8_t/*bool*/ x823 = addcarryx_u64(x820, x749, x795);
 uint64_t x825, uint8_t/*bool*/ x826 = addcarryx_u64(x823, x752, x798);
 uint64_t x828, uint8_t/*bool*/ x829 = addcarryx_u64(x826, x755, x801);
 uint64_t x831, uint8_t/*bool*/ x832 = addcarryx_u64(x829, x758, x804);
 uint64_t x834, uint8_t/*bool*/ x835 = addcarryx_u64(x832, x761, x807);
 uint64_t x837, uint8_t/*bool*/ x838 = addcarryx_u64(x835, x764, x810);
 uint64_t x840, uint8_t/*bool*/ x841 = addcarryx_u64(x838, x767, x813);
 uint64_t x843, uint8_t/*bool*/ x844 = addcarryx_u64(x841, x769, x816);
 uint64_t x846, uint64_t _ = mulx_u64(x819, 0xaaaaaaaaaaaaaaabL);
 uint64_t x849, uint64_t x850 = mulx_u64(x846, 0xfffffffffffffffdL);
 uint64_t x852, uint64_t x853 = mulx_u64(x846, 0xffffffffffffffffL);
 uint64_t x855, uint64_t x856 = mulx_u64(x846, 0xffffffffffffffffL);
 uint64_t x858, uint64_t x859 = mulx_u64(x846, 0xffffffffffffffffL);
 uint64_t x861, uint64_t x862 = mulx_u64(x846, 0xffffffffffffffffL);
 uint64_t x864, uint64_t x865 = mulx_u64(x846, 0xffffffffffffffffL);
 uint64_t x867, uint64_t x868 = mulx_u64(x846, 0xffffffffffffffffL);
 uint64_t x870, uint8_t x871 = mulx_u64_out_u8(x846, 0xf);
 uint64_t x873, uint8_t/*bool*/ x874 = addcarryx_u64(0x0, x850, x852);
 uint64_t x876, uint8_t/*bool*/ x877 = addcarryx_u64(x874, x853, x855);
 uint64_t x879, uint8_t/*bool*/ x880 = addcarryx_u64(x877, x856, x858);
 uint64_t x882, uint8_t/*bool*/ x883 = addcarryx_u64(x880, x859, x861);
 uint64_t x885, uint8_t/*bool*/ x886 = addcarryx_u64(x883, x862, x864);
 uint64_t x888, uint8_t/*bool*/ x889 = addcarryx_u64(x886, x865, x867);
 uint64_t x891, uint8_t/*bool*/ x892 = addcarryx_u64(x889, x868, x870);
 uint8_t x893 = ((uint8_t)0x0 + x892);
 uint8_t x894 = (x893 + x871);
 uint64_t _, uint8_t/*bool*/ x897 = addcarryx_u64(0x0, x819, x849);
 uint64_t x899, uint8_t/*bool*/ x900 = addcarryx_u64(x897, x822, x873);
 uint64_t x902, uint8_t/*bool*/ x903 = addcarryx_u64(x900, x825, x876);
 uint64_t x905, uint8_t/*bool*/ x906 = addcarryx_u64(x903, x828, x879);
 uint64_t x908, uint8_t/*bool*/ x909 = addcarryx_u64(x906, x831, x882);
 uint64_t x911, uint8_t/*bool*/ x912 = addcarryx_u64(x909, x834, x885);
 uint64_t x914, uint8_t/*bool*/ x915 = addcarryx_u64(x912, x837, x888);
 uint64_t x917, uint8_t/*bool*/ x918 = addcarryx_u64(x915, x840, x891);
 uint64_t x920, uint8_t/*bool*/ x921 = addcarryx_u64(x918, x843, x894);
 uint8_t x922 = ((uint8_t)x921 + x844);
 uint64_t x924, uint64_t x925 = mulx_u64(x17, x19);
 uint64_t x927, uint64_t x928 = mulx_u64(x17, x21);
 uint64_t x930, uint64_t x931 = mulx_u64(x17, x23);
 uint64_t x933, uint64_t x934 = mulx_u64(x17, x25);
 uint64_t x936, uint64_t x937 = mulx_u64(x17, x27);
 uint64_t x939, uint64_t x940 = mulx_u64(x17, x29);
 uint64_t x942, uint64_t x943 = mulx_u64(x17, x31);
 uint64_t x945, uint64_t x946 = mulx_u64(x17, x30);
 uint64_t x948, uint8_t/*bool*/ x949 = addcarryx_u64(0x0, x925, x927);
 uint64_t x951, uint8_t/*bool*/ x952 = addcarryx_u64(x949, x928, x930);
 uint64_t x954, uint8_t/*bool*/ x955 = addcarryx_u64(x952, x931, x933);
 uint64_t x957, uint8_t/*bool*/ x958 = addcarryx_u64(x955, x934, x936);
 uint64_t x960, uint8_t/*bool*/ x961 = addcarryx_u64(x958, x937, x939);
 uint64_t x963, uint8_t/*bool*/ x964 = addcarryx_u64(x961, x940, x942);
 uint64_t x966, uint8_t/*bool*/ x967 = addcarryx_u64(x964, x943, x945);
 uint64_t x969, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x967, x946);
 uint64_t x972, uint8_t/*bool*/ x973 = addcarryx_u64(0x0, x899, x924);
 uint64_t x975, uint8_t/*bool*/ x976 = addcarryx_u64(x973, x902, x948);
 uint64_t x978, uint8_t/*bool*/ x979 = addcarryx_u64(x976, x905, x951);
 uint64_t x981, uint8_t/*bool*/ x982 = addcarryx_u64(x979, x908, x954);
 uint64_t x984, uint8_t/*bool*/ x985 = addcarryx_u64(x982, x911, x957);
 uint64_t x987, uint8_t/*bool*/ x988 = addcarryx_u64(x985, x914, x960);
 uint64_t x990, uint8_t/*bool*/ x991 = addcarryx_u64(x988, x917, x963);
 uint64_t x993, uint8_t/*bool*/ x994 = addcarryx_u64(x991, x920, x966);
 uint64_t x996, uint8_t/*bool*/ x997 = addcarryx_u64(x994, x922, x969);
 uint64_t x999, uint64_t _ = mulx_u64(x972, 0xaaaaaaaaaaaaaaabL);
 uint64_t x1002, uint64_t x1003 = mulx_u64(x999, 0xfffffffffffffffdL);
 uint64_t x1005, uint64_t x1006 = mulx_u64(x999, 0xffffffffffffffffL);
 uint64_t x1008, uint64_t x1009 = mulx_u64(x999, 0xffffffffffffffffL);
 uint64_t x1011, uint64_t x1012 = mulx_u64(x999, 0xffffffffffffffffL);
 uint64_t x1014, uint64_t x1015 = mulx_u64(x999, 0xffffffffffffffffL);
 uint64_t x1017, uint64_t x1018 = mulx_u64(x999, 0xffffffffffffffffL);
 uint64_t x1020, uint64_t x1021 = mulx_u64(x999, 0xffffffffffffffffL);
 uint64_t x1023, uint8_t x1024 = mulx_u64_out_u8(x999, 0xf);
 uint64_t x1026, uint8_t/*bool*/ x1027 = addcarryx_u64(0x0, x1003, x1005);
 uint64_t x1029, uint8_t/*bool*/ x1030 = addcarryx_u64(x1027, x1006, x1008);
 uint64_t x1032, uint8_t/*bool*/ x1033 = addcarryx_u64(x1030, x1009, x1011);
 uint64_t x1035, uint8_t/*bool*/ x1036 = addcarryx_u64(x1033, x1012, x1014);
 uint64_t x1038, uint8_t/*bool*/ x1039 = addcarryx_u64(x1036, x1015, x1017);
 uint64_t x1041, uint8_t/*bool*/ x1042 = addcarryx_u64(x1039, x1018, x1020);
 uint64_t x1044, uint8_t/*bool*/ x1045 = addcarryx_u64(x1042, x1021, x1023);
 uint8_t x1046 = ((uint8_t)0x0 + x1045);
 uint8_t x1047 = (x1046 + x1024);
 uint64_t _, uint8_t/*bool*/ x1050 = addcarryx_u64(0x0, x972, x1002);
 uint64_t x1052, uint8_t/*bool*/ x1053 = addcarryx_u64(x1050, x975, x1026);
 uint64_t x1055, uint8_t/*bool*/ x1056 = addcarryx_u64(x1053, x978, x1029);
 uint64_t x1058, uint8_t/*bool*/ x1059 = addcarryx_u64(x1056, x981, x1032);
 uint64_t x1061, uint8_t/*bool*/ x1062 = addcarryx_u64(x1059, x984, x1035);
 uint64_t x1064, uint8_t/*bool*/ x1065 = addcarryx_u64(x1062, x987, x1038);
 uint64_t x1067, uint8_t/*bool*/ x1068 = addcarryx_u64(x1065, x990, x1041);
 uint64_t x1070, uint8_t/*bool*/ x1071 = addcarryx_u64(x1068, x993, x1044);
 uint64_t x1073, uint8_t/*bool*/ x1074 = addcarryx_u64(x1071, x996, x1047);
 uint8_t x1075 = ((uint8_t)x1074 + x997);
 uint64_t x1077, uint64_t x1078 = mulx_u64(x16, x19);
 uint64_t x1080, uint64_t x1081 = mulx_u64(x16, x21);
 uint64_t x1083, uint64_t x1084 = mulx_u64(x16, x23);
 uint64_t x1086, uint64_t x1087 = mulx_u64(x16, x25);
 uint64_t x1089, uint64_t x1090 = mulx_u64(x16, x27);
 uint64_t x1092, uint64_t x1093 = mulx_u64(x16, x29);
 uint64_t x1095, uint64_t x1096 = mulx_u64(x16, x31);
 uint64_t x1098, uint64_t x1099 = mulx_u64(x16, x30);
 uint64_t x1101, uint8_t/*bool*/ x1102 = addcarryx_u64(0x0, x1078, x1080);
 uint64_t x1104, uint8_t/*bool*/ x1105 = addcarryx_u64(x1102, x1081, x1083);
 uint64_t x1107, uint8_t/*bool*/ x1108 = addcarryx_u64(x1105, x1084, x1086);
 uint64_t x1110, uint8_t/*bool*/ x1111 = addcarryx_u64(x1108, x1087, x1089);
 uint64_t x1113, uint8_t/*bool*/ x1114 = addcarryx_u64(x1111, x1090, x1092);
 uint64_t x1116, uint8_t/*bool*/ x1117 = addcarryx_u64(x1114, x1093, x1095);
 uint64_t x1119, uint8_t/*bool*/ x1120 = addcarryx_u64(x1117, x1096, x1098);
 uint64_t x1122, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x1120, x1099);
 uint64_t x1125, uint8_t/*bool*/ x1126 = addcarryx_u64(0x0, x1052, x1077);
 uint64_t x1128, uint8_t/*bool*/ x1129 = addcarryx_u64(x1126, x1055, x1101);
 uint64_t x1131, uint8_t/*bool*/ x1132 = addcarryx_u64(x1129, x1058, x1104);
 uint64_t x1134, uint8_t/*bool*/ x1135 = addcarryx_u64(x1132, x1061, x1107);
 uint64_t x1137, uint8_t/*bool*/ x1138 = addcarryx_u64(x1135, x1064, x1110);
 uint64_t x1140, uint8_t/*bool*/ x1141 = addcarryx_u64(x1138, x1067, x1113);
 uint64_t x1143, uint8_t/*bool*/ x1144 = addcarryx_u64(x1141, x1070, x1116);
 uint64_t x1146, uint8_t/*bool*/ x1147 = addcarryx_u64(x1144, x1073, x1119);
 uint64_t x1149, uint8_t/*bool*/ x1150 = addcarryx_u64(x1147, x1075, x1122);
 uint64_t x1152, uint64_t _ = mulx_u64(x1125, 0xaaaaaaaaaaaaaaabL);
 uint64_t x1155, uint64_t x1156 = mulx_u64(x1152, 0xfffffffffffffffdL);
 uint64_t x1158, uint64_t x1159 = mulx_u64(x1152, 0xffffffffffffffffL);
 uint64_t x1161, uint64_t x1162 = mulx_u64(x1152, 0xffffffffffffffffL);
 uint64_t x1164, uint64_t x1165 = mulx_u64(x1152, 0xffffffffffffffffL);
 uint64_t x1167, uint64_t x1168 = mulx_u64(x1152, 0xffffffffffffffffL);
 uint64_t x1170, uint64_t x1171 = mulx_u64(x1152, 0xffffffffffffffffL);
 uint64_t x1173, uint64_t x1174 = mulx_u64(x1152, 0xffffffffffffffffL);
 uint64_t x1176, uint8_t x1177 = mulx_u64_out_u8(x1152, 0xf);
 uint64_t x1179, uint8_t/*bool*/ x1180 = addcarryx_u64(0x0, x1156, x1158);
 uint64_t x1182, uint8_t/*bool*/ x1183 = addcarryx_u64(x1180, x1159, x1161);
 uint64_t x1185, uint8_t/*bool*/ x1186 = addcarryx_u64(x1183, x1162, x1164);
 uint64_t x1188, uint8_t/*bool*/ x1189 = addcarryx_u64(x1186, x1165, x1167);
 uint64_t x1191, uint8_t/*bool*/ x1192 = addcarryx_u64(x1189, x1168, x1170);
 uint64_t x1194, uint8_t/*bool*/ x1195 = addcarryx_u64(x1192, x1171, x1173);
 uint64_t x1197, uint8_t/*bool*/ x1198 = addcarryx_u64(x1195, x1174, x1176);
 uint8_t x1199 = ((uint8_t)0x0 + x1198);
 uint8_t x1200 = (x1199 + x1177);
 uint64_t _, uint8_t/*bool*/ x1203 = addcarryx_u64(0x0, x1125, x1155);
 uint64_t x1205, uint8_t/*bool*/ x1206 = addcarryx_u64(x1203, x1128, x1179);
 uint64_t x1208, uint8_t/*bool*/ x1209 = addcarryx_u64(x1206, x1131, x1182);
 uint64_t x1211, uint8_t/*bool*/ x1212 = addcarryx_u64(x1209, x1134, x1185);
 uint64_t x1214, uint8_t/*bool*/ x1215 = addcarryx_u64(x1212, x1137, x1188);
 uint64_t x1217, uint8_t/*bool*/ x1218 = addcarryx_u64(x1215, x1140, x1191);
 uint64_t x1220, uint8_t/*bool*/ x1221 = addcarryx_u64(x1218, x1143, x1194);
 uint64_t x1223, uint8_t/*bool*/ x1224 = addcarryx_u64(x1221, x1146, x1197);
 uint64_t x1226, uint8_t/*bool*/ x1227 = addcarryx_u64(x1224, x1149, x1200);
 uint8_t x1228 = ((uint8_t)x1227 + x1150);
 uint64_t x1230, uint8_t/*bool*/ x1231 = subborrow_u64(0x0, x1205, 0xfffffffffffffffdL);
 uint64_t x1233, uint8_t/*bool*/ x1234 = subborrow_u64(x1231, x1208, 0xffffffffffffffffL);
 uint64_t x1236, uint8_t/*bool*/ x1237 = subborrow_u64(x1234, x1211, 0xffffffffffffffffL);
 uint64_t x1239, uint8_t/*bool*/ x1240 = subborrow_u64(x1237, x1214, 0xffffffffffffffffL);
 uint64_t x1242, uint8_t/*bool*/ x1243 = subborrow_u64(x1240, x1217, 0xffffffffffffffffL);
 uint64_t x1245, uint8_t/*bool*/ x1246 = subborrow_u64(x1243, x1220, 0xffffffffffffffffL);
 uint64_t x1248, uint8_t/*bool*/ x1249 = subborrow_u64(x1246, x1223, 0xffffffffffffffffL);
 uint64_t x1251, uint8_t/*bool*/ x1252 = subborrow_u64(x1249, x1226, 0xf);
 uint64_t _, uint8_t/*bool*/ x1255 = subborrow_u64(x1252, x1228, 0x0);
 uint64_t x1256 = cmovznz64(x1255, x1251, x1226);
 uint64_t x1257 = cmovznz64(x1255, x1248, x1223);
 uint64_t x1258 = cmovznz64(x1255, x1245, x1220);
 uint64_t x1259 = cmovznz64(x1255, x1242, x1217);
 uint64_t x1260 = cmovznz64(x1255, x1239, x1214);
 uint64_t x1261 = cmovznz64(x1255, x1236, x1211);
 uint64_t x1262 = cmovznz64(x1255, x1233, x1208);
 uint64_t x1263 = cmovznz64(x1255, x1230, x1205);
 return (x1256, x1257, x1258, x1259, x1260, x1261, x1262, x1263))
(x, x0)%core
     : word64 * word64 * word64 * word64 * word64 * word64 * word64 * word64 → word64 * word64 * word64 * word64 * word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)
