λ x x0 : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x28, x29, x27, x25, x23, x21, x19, x17, x15, x13, x11, x9, x7, x5, (x54, x55, x53, x51, x49, x47, x45, x43, x41, x39, x37, x35, x33, x31))%core,
 uint32_t x57, uint8_t/*bool*/ x58 = subborrow_u32(0x0, x5, x31);
 uint32_t x60, uint8_t/*bool*/ x61 = subborrow_u32(x58, x7, x33);
 uint32_t x63, uint8_t/*bool*/ x64 = subborrow_u32(x61, x9, x35);
 uint32_t x66, uint8_t/*bool*/ x67 = subborrow_u32(x64, x11, x37);
 uint32_t x69, uint8_t/*bool*/ x70 = subborrow_u32(x67, x13, x39);
 uint32_t x72, uint8_t/*bool*/ x73 = subborrow_u32(x70, x15, x41);
 uint32_t x75, uint8_t/*bool*/ x76 = subborrow_u32(x73, x17, x43);
 uint32_t x78, uint8_t/*bool*/ x79 = subborrow_u32(x76, x19, x45);
 uint32_t x81, uint8_t/*bool*/ x82 = subborrow_u32(x79, x21, x47);
 uint32_t x84, uint8_t/*bool*/ x85 = subborrow_u32(x82, x23, x49);
 uint32_t x87, uint8_t/*bool*/ x88 = subborrow_u32(x85, x25, x51);
 uint32_t x90, uint8_t/*bool*/ x91 = subborrow_u32(x88, x27, x53);
 uint32_t x93, uint8_t/*bool*/ x94 = subborrow_u32(x91, x29, x55);
 uint32_t x96, uint8_t/*bool*/ x97 = subborrow_u32(x94, x28, x54);
 uint32_t x98 = cmovznz32(x97, 0x0, 0xffffffff);
 uint32_t x99 = (x98 & 0xffffffef);
 uint32_t x101, uint8_t/*bool*/ x102 = addcarryx_u32(0x0, x57, x99);
 uint32_t x103 = (x98 & 0xffffffff);
 uint32_t x105, uint8_t/*bool*/ x106 = addcarryx_u32(x102, x60, x103);
 uint32_t x107 = (x98 & 0xffffffff);
 uint32_t x109, uint8_t/*bool*/ x110 = addcarryx_u32(x106, x63, x107);
 uint32_t x111 = (x98 & 0xffffffff);
 uint32_t x113, uint8_t/*bool*/ x114 = addcarryx_u32(x110, x66, x111);
 uint32_t x115 = (x98 & 0xffffffff);
 uint32_t x117, uint8_t/*bool*/ x118 = addcarryx_u32(x114, x69, x115);
 uint32_t x119 = (x98 & 0xffffffff);
 uint32_t x121, uint8_t/*bool*/ x122 = addcarryx_u32(x118, x72, x119);
 uint32_t x123 = (x98 & 0xffffffff);
 uint32_t x125, uint8_t/*bool*/ x126 = addcarryx_u32(x122, x75, x123);
 uint32_t x127 = (x98 & 0xffffffff);
 uint32_t x129, uint8_t/*bool*/ x130 = addcarryx_u32(x126, x78, x127);
 uint32_t x131 = (x98 & 0xffffffff);
 uint32_t x133, uint8_t/*bool*/ x134 = addcarryx_u32(x130, x81, x131);
 uint32_t x135 = (x98 & 0xffffffff);
 uint32_t x137, uint8_t/*bool*/ x138 = addcarryx_u32(x134, x84, x135);
 uint32_t x139 = (x98 & 0xffffffff);
 uint32_t x141, uint8_t/*bool*/ x142 = addcarryx_u32(x138, x87, x139);
 uint32_t x143 = (x98 & 0xffffffff);
 uint32_t x145, uint8_t/*bool*/ x146 = addcarryx_u32(x142, x90, x143);
 uint32_t x147 = (x98 & 0xffffffff);
 uint32_t x149, uint8_t/*bool*/ x150 = addcarryx_u32(x146, x93, x147);
 uint32_t x151 = (x98 & 0xfffffff);
 uint32_t x153, uint8_t/*bool*/ _ = addcarryx_u32(x150, x96, x151);
 (Return x153, Return x149, Return x145, Return x141, Return x137, Return x133, Return x129, Return x125, Return x121, Return x117, Return x113, Return x109, Return x105, Return x101))
(x, x0)%core
     : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 → word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)
