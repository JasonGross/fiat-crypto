mul = λ var : Z.Syntax.base_type → Type,
λ '(x8, x9, x7, x5, x3, (x16, x17, x15, x13, x11))%core,
uint32_t x19, uint32_t x20 = mulx_u32(x3, x11);
uint32_t x22, uint32_t x23 = mulx_u32(x3, x13);
uint32_t x25, uint32_t x26 = mulx_u32(x3, x15);
uint32_t x28, uint32_t x29 = mulx_u32(x3, x17);
uint32_t x31, uint32_t x32 = mulx_u32(x3, x16);
uint32_t x34, uint8_t x35 = addcarryx_u32(0x0, x20, x22);
uint32_t x37, uint8_t x38 = addcarryx_u32(x35, x23, x25);
uint32_t x40, uint8_t x41 = addcarryx_u32(x38, x26, x28);
uint32_t x43, uint8_t x44 = addcarryx_u32(x41, x29, x31);
uint32_t x46, uint8_t _ = addcarryx_u32(0x0, x44, x32);
uint32_t x49, uint32_t _ = mulx_u32(x19, 0xcccccccd);
uint32_t x52, uint32_t x53 = mulx_u32(x49, 0xfffffffb);
uint32_t x55, uint32_t x56 = mulx_u32(x49, 0xffffffff);
uint32_t x58, uint32_t x59 = mulx_u32(x49, 0xffffffff);
uint32_t x61, uint32_t x62 = mulx_u32(x49, 0xffffffff);
uint32_t x64, uint8_t x65 = mulx_u32_out_u8(x49, 0x3);
uint32_t x67, uint8_t x68 = addcarryx_u32(0x0, x53, x55);
uint32_t x70, uint8_t x71 = addcarryx_u32(x68, x56, x58);
uint32_t x73, uint8_t x74 = addcarryx_u32(x71, x59, x61);
uint32_t x76, uint8_t x77 = addcarryx_u32(x74, x62, x64);
uint8_t x78 = (x77 + x65);
uint32_t _, uint8_t x81 = addcarryx_u32(0x0, x19, x52);
uint32_t x83, uint8_t x84 = addcarryx_u32(x81, x34, x67);
uint32_t x86, uint8_t x87 = addcarryx_u32(x84, x37, x70);
uint32_t x89, uint8_t x90 = addcarryx_u32(x87, x40, x73);
uint32_t x92, uint8_t x93 = addcarryx_u32(x90, x43, x76);
uint32_t x95, uint8_t x96 = addcarryx_u32(x93, x46, x78);
uint32_t x98, uint32_t x99 = mulx_u32(x5, x11);
uint32_t x101, uint32_t x102 = mulx_u32(x5, x13);
uint32_t x104, uint32_t x105 = mulx_u32(x5, x15);
uint32_t x107, uint32_t x108 = mulx_u32(x5, x17);
uint32_t x110, uint32_t x111 = mulx_u32(x5, x16);
uint32_t x113, uint8_t x114 = addcarryx_u32(0x0, x99, x101);
uint32_t x116, uint8_t x117 = addcarryx_u32(x114, x102, x104);
uint32_t x119, uint8_t x120 = addcarryx_u32(x117, x105, x107);
uint32_t x122, uint8_t x123 = addcarryx_u32(x120, x108, x110);
uint32_t x125, uint8_t _ = addcarryx_u32(0x0, x123, x111);
uint32_t x128, uint8_t x129 = addcarryx_u32(0x0, x83, x98);
uint32_t x131, uint8_t x132 = addcarryx_u32(x129, x86, x113);
uint32_t x134, uint8_t x135 = addcarryx_u32(x132, x89, x116);
uint32_t x137, uint8_t x138 = addcarryx_u32(x135, x92, x119);
uint32_t x140, uint8_t x141 = addcarryx_u32(x138, x95, x122);
uint32_t x143, uint8_t x144 = addcarryx_u32(x141, x96, x125);
uint32_t x146, uint32_t _ = mulx_u32(x128, 0xcccccccd);
uint32_t x149, uint32_t x150 = mulx_u32(x146, 0xfffffffb);
uint32_t x152, uint32_t x153 = mulx_u32(x146, 0xffffffff);
uint32_t x155, uint32_t x156 = mulx_u32(x146, 0xffffffff);
uint32_t x158, uint32_t x159 = mulx_u32(x146, 0xffffffff);
uint32_t x161, uint8_t x162 = mulx_u32_out_u8(x146, 0x3);
uint32_t x164, uint8_t x165 = addcarryx_u32(0x0, x150, x152);
uint32_t x167, uint8_t x168 = addcarryx_u32(x165, x153, x155);
uint32_t x170, uint8_t x171 = addcarryx_u32(x168, x156, x158);
uint32_t x173, uint8_t x174 = addcarryx_u32(x171, x159, x161);
uint8_t x175 = (x174 + x162);
uint32_t _, uint8_t x178 = addcarryx_u32(0x0, x128, x149);
uint32_t x180, uint8_t x181 = addcarryx_u32(x178, x131, x164);
uint32_t x183, uint8_t x184 = addcarryx_u32(x181, x134, x167);
uint32_t x186, uint8_t x187 = addcarryx_u32(x184, x137, x170);
uint32_t x189, uint8_t x190 = addcarryx_u32(x187, x140, x173);
uint32_t x192, uint8_t x193 = addcarryx_u32(x190, x143, x175);
uint8_t x194 = (x193 + x144);
uint32_t x196, uint32_t x197 = mulx_u32(x7, x11);
uint32_t x199, uint32_t x200 = mulx_u32(x7, x13);
uint32_t x202, uint32_t x203 = mulx_u32(x7, x15);
uint32_t x205, uint32_t x206 = mulx_u32(x7, x17);
uint32_t x208, uint32_t x209 = mulx_u32(x7, x16);
uint32_t x211, uint8_t x212 = addcarryx_u32(0x0, x197, x199);
uint32_t x214, uint8_t x215 = addcarryx_u32(x212, x200, x202);
uint32_t x217, uint8_t x218 = addcarryx_u32(x215, x203, x205);
uint32_t x220, uint8_t x221 = addcarryx_u32(x218, x206, x208);
uint32_t x223, uint8_t _ = addcarryx_u32(0x0, x221, x209);
uint32_t x226, uint8_t x227 = addcarryx_u32(0x0, x180, x196);
uint32_t x229, uint8_t x230 = addcarryx_u32(x227, x183, x211);
uint32_t x232, uint8_t x233 = addcarryx_u32(x230, x186, x214);
uint32_t x235, uint8_t x236 = addcarryx_u32(x233, x189, x217);
uint32_t x238, uint8_t x239 = addcarryx_u32(x236, x192, x220);
uint32_t x241, uint8_t x242 = addcarryx_u32(x239, x194, x223);
uint32_t x244, uint32_t _ = mulx_u32(x226, 0xcccccccd);
uint32_t x247, uint32_t x248 = mulx_u32(x244, 0xfffffffb);
uint32_t x250, uint32_t x251 = mulx_u32(x244, 0xffffffff);
uint32_t x253, uint32_t x254 = mulx_u32(x244, 0xffffffff);
uint32_t x256, uint32_t x257 = mulx_u32(x244, 0xffffffff);
uint32_t x259, uint8_t x260 = mulx_u32_out_u8(x244, 0x3);
uint32_t x262, uint8_t x263 = addcarryx_u32(0x0, x248, x250);
uint32_t x265, uint8_t x266 = addcarryx_u32(x263, x251, x253);
uint32_t x268, uint8_t x269 = addcarryx_u32(x266, x254, x256);
uint32_t x271, uint8_t x272 = addcarryx_u32(x269, x257, x259);
uint8_t x273 = (x272 + x260);
uint32_t _, uint8_t x276 = addcarryx_u32(0x0, x226, x247);
uint32_t x278, uint8_t x279 = addcarryx_u32(x276, x229, x262);
uint32_t x281, uint8_t x282 = addcarryx_u32(x279, x232, x265);
uint32_t x284, uint8_t x285 = addcarryx_u32(x282, x235, x268);
uint32_t x287, uint8_t x288 = addcarryx_u32(x285, x238, x271);
uint32_t x290, uint8_t x291 = addcarryx_u32(x288, x241, x273);
uint8_t x292 = (x291 + x242);
uint32_t x294, uint32_t x295 = mulx_u32(x9, x11);
uint32_t x297, uint32_t x298 = mulx_u32(x9, x13);
uint32_t x300, uint32_t x301 = mulx_u32(x9, x15);
uint32_t x303, uint32_t x304 = mulx_u32(x9, x17);
uint32_t x306, uint32_t x307 = mulx_u32(x9, x16);
uint32_t x309, uint8_t x310 = addcarryx_u32(0x0, x295, x297);
uint32_t x312, uint8_t x313 = addcarryx_u32(x310, x298, x300);
uint32_t x315, uint8_t x316 = addcarryx_u32(x313, x301, x303);
uint32_t x318, uint8_t x319 = addcarryx_u32(x316, x304, x306);
uint32_t x321, uint8_t _ = addcarryx_u32(0x0, x319, x307);
uint32_t x324, uint8_t x325 = addcarryx_u32(0x0, x278, x294);
uint32_t x327, uint8_t x328 = addcarryx_u32(x325, x281, x309);
uint32_t x330, uint8_t x331 = addcarryx_u32(x328, x284, x312);
uint32_t x333, uint8_t x334 = addcarryx_u32(x331, x287, x315);
uint32_t x336, uint8_t x337 = addcarryx_u32(x334, x290, x318);
uint32_t x339, uint8_t x340 = addcarryx_u32(x337, x292, x321);
uint32_t x342, uint32_t _ = mulx_u32(x324, 0xcccccccd);
uint32_t x345, uint32_t x346 = mulx_u32(x342, 0xfffffffb);
uint32_t x348, uint32_t x349 = mulx_u32(x342, 0xffffffff);
uint32_t x351, uint32_t x352 = mulx_u32(x342, 0xffffffff);
uint32_t x354, uint32_t x355 = mulx_u32(x342, 0xffffffff);
uint32_t x357, uint8_t x358 = mulx_u32_out_u8(x342, 0x3);
uint32_t x360, uint8_t x361 = addcarryx_u32(0x0, x346, x348);
uint32_t x363, uint8_t x364 = addcarryx_u32(x361, x349, x351);
uint32_t x366, uint8_t x367 = addcarryx_u32(x364, x352, x354);
uint32_t x369, uint8_t x370 = addcarryx_u32(x367, x355, x357);
uint8_t x371 = (x370 + x358);
uint32_t _, uint8_t x374 = addcarryx_u32(0x0, x324, x345);
uint32_t x376, uint8_t x377 = addcarryx_u32(x374, x327, x360);
uint32_t x379, uint8_t x380 = addcarryx_u32(x377, x330, x363);
uint32_t x382, uint8_t x383 = addcarryx_u32(x380, x333, x366);
uint32_t x385, uint8_t x386 = addcarryx_u32(x383, x336, x369);
uint32_t x388, uint8_t x389 = addcarryx_u32(x386, x339, x371);
uint8_t x390 = (x389 + x340);
uint32_t x392, uint32_t x393 = mulx_u32(x8, x11);
uint32_t x395, uint32_t x396 = mulx_u32(x8, x13);
uint32_t x398, uint32_t x399 = mulx_u32(x8, x15);
uint32_t x401, uint32_t x402 = mulx_u32(x8, x17);
uint32_t x404, uint32_t x405 = mulx_u32(x8, x16);
uint32_t x407, uint8_t x408 = addcarryx_u32(0x0, x393, x395);
uint32_t x410, uint8_t x411 = addcarryx_u32(x408, x396, x398);
uint32_t x413, uint8_t x414 = addcarryx_u32(x411, x399, x401);
uint32_t x416, uint8_t x417 = addcarryx_u32(x414, x402, x404);
uint32_t x419, uint8_t _ = addcarryx_u32(0x0, x417, x405);
uint32_t x422, uint8_t x423 = addcarryx_u32(0x0, x376, x392);
uint32_t x425, uint8_t x426 = addcarryx_u32(x423, x379, x407);
uint32_t x428, uint8_t x429 = addcarryx_u32(x426, x382, x410);
uint32_t x431, uint8_t x432 = addcarryx_u32(x429, x385, x413);
uint32_t x434, uint8_t x435 = addcarryx_u32(x432, x388, x416);
uint32_t x437, uint8_t x438 = addcarryx_u32(x435, x390, x419);
uint32_t x440, uint32_t _ = mulx_u32(x422, 0xcccccccd);
uint32_t x443, uint32_t x444 = mulx_u32(x440, 0xfffffffb);
uint32_t x446, uint32_t x447 = mulx_u32(x440, 0xffffffff);
uint32_t x449, uint32_t x450 = mulx_u32(x440, 0xffffffff);
uint32_t x452, uint32_t x453 = mulx_u32(x440, 0xffffffff);
uint32_t x455, uint8_t x456 = mulx_u32_out_u8(x440, 0x3);
uint32_t x458, uint8_t x459 = addcarryx_u32(0x0, x444, x446);
uint32_t x461, uint8_t x462 = addcarryx_u32(x459, x447, x449);
uint32_t x464, uint8_t x465 = addcarryx_u32(x462, x450, x452);
uint32_t x467, uint8_t x468 = addcarryx_u32(x465, x453, x455);
uint8_t x469 = (x468 + x456);
uint32_t _, uint8_t x472 = addcarryx_u32(0x0, x422, x443);
uint32_t x474, uint8_t x475 = addcarryx_u32(x472, x425, x458);
uint32_t x477, uint8_t x478 = addcarryx_u32(x475, x428, x461);
uint32_t x480, uint8_t x481 = addcarryx_u32(x478, x431, x464);
uint32_t x483, uint8_t x484 = addcarryx_u32(x481, x434, x467);
uint32_t x486, uint8_t x487 = addcarryx_u32(x484, x437, x469);
uint8_t x488 = (x487 + x438);
uint32_t x490, uint8_t x491 = subborrow_u32(0x0, x474, 0xfffffffb);
uint32_t x493, uint8_t x494 = subborrow_u32(x491, x477, 0xffffffff);
uint32_t x496, uint8_t x497 = subborrow_u32(x494, x480, 0xffffffff);
uint32_t x499, uint8_t x500 = subborrow_u32(x497, x483, 0xffffffff);
uint32_t x502, uint8_t x503 = subborrow_u32(x500, x486, 0x3);
uint32_t _, uint8_t x506 = subborrow_u32(x503, x488, 0x0);
(cmovznz32(x506, x502, x486), cmovznz32(x506, x499, x483), cmovznz32(x506, x496, x480), cmovznz32(x506, x493, x477), cmovznz32(x506, x490, x474))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t) -> uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

Argument scope is [function_scope]
