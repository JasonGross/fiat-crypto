mul = λ var : Z.Syntax.base_type → Type,
λ '(x10, x11, x9, x7, x5, x3, (x20, x21, x19, x17, x15, x13))%core,
uint64_t x23, uint64_t x24 = mulx_u64(x3, x13);
uint64_t x26, uint64_t x27 = mulx_u64(x3, x15);
uint64_t x29, uint64_t x30 = mulx_u64(x3, x17);
uint64_t x32, uint64_t x33 = mulx_u64(x3, x19);
uint64_t x35, uint64_t x36 = mulx_u64(x3, x21);
uint64_t x38, uint64_t x39 = mulx_u64(x3, x20);
uint64_t x41, uint8_t x42 = addcarryx_u64(0x0, x24, x26);
uint64_t x44, uint8_t x45 = addcarryx_u64(x42, x27, x29);
uint64_t x47, uint8_t x48 = addcarryx_u64(x45, x30, x32);
uint64_t x50, uint8_t x51 = addcarryx_u64(x48, x33, x35);
uint64_t x53, uint8_t x54 = addcarryx_u64(x51, x36, x38);
uint64_t x56, uint8_t _ = addcarryx_u64(0x0, x54, x39);
uint64_t x59, uint64_t x60 = mulx_u64(x23, 0xffffffffffffffffL);
uint64_t x62, uint64_t x63 = mulx_u64(x23, 0xffffffffffffffffL);
uint64_t x65, uint64_t x66 = mulx_u64(x23, 0xfffffffdffffffffL);
uint64_t x68, uint64_t x69 = mulx_u64(x23, 0xffffffffffffffffL);
uint64_t x71, uint64_t x72 = mulx_u64(x23, 0xffffffffffffffffL);
uint64_t x74, uint8_t x75 = mulx_u64_out_u8(x23, 0x3);
uint64_t x77, uint8_t x78 = addcarryx_u64(0x0, x60, x62);
uint64_t x80, uint8_t x81 = addcarryx_u64(x78, x63, x65);
uint64_t x83, uint8_t x84 = addcarryx_u64(x81, x66, x68);
uint64_t x86, uint8_t x87 = addcarryx_u64(x84, x69, x71);
uint64_t x89, uint8_t x90 = addcarryx_u64(x87, x72, x74);
uint8_t x91 = (x90 + x75);
uint64_t _, uint8_t x94 = addcarryx_u64(0x0, x23, x59);
uint64_t x96, uint8_t x97 = addcarryx_u64(x94, x41, x77);
uint64_t x99, uint8_t x100 = addcarryx_u64(x97, x44, x80);
uint64_t x102, uint8_t x103 = addcarryx_u64(x100, x47, x83);
uint64_t x105, uint8_t x106 = addcarryx_u64(x103, x50, x86);
uint64_t x108, uint8_t x109 = addcarryx_u64(x106, x53, x89);
uint64_t x111, uint8_t x112 = addcarryx_u64(x109, x56, x91);
uint64_t x114, uint64_t x115 = mulx_u64(x5, x13);
uint64_t x117, uint64_t x118 = mulx_u64(x5, x15);
uint64_t x120, uint64_t x121 = mulx_u64(x5, x17);
uint64_t x123, uint64_t x124 = mulx_u64(x5, x19);
uint64_t x126, uint64_t x127 = mulx_u64(x5, x21);
uint64_t x129, uint64_t x130 = mulx_u64(x5, x20);
uint64_t x132, uint8_t x133 = addcarryx_u64(0x0, x115, x117);
uint64_t x135, uint8_t x136 = addcarryx_u64(x133, x118, x120);
uint64_t x138, uint8_t x139 = addcarryx_u64(x136, x121, x123);
uint64_t x141, uint8_t x142 = addcarryx_u64(x139, x124, x126);
uint64_t x144, uint8_t x145 = addcarryx_u64(x142, x127, x129);
uint64_t x147, uint8_t _ = addcarryx_u64(0x0, x145, x130);
uint64_t x150, uint8_t x151 = addcarryx_u64(0x0, x96, x114);
uint64_t x153, uint8_t x154 = addcarryx_u64(x151, x99, x132);
uint64_t x156, uint8_t x157 = addcarryx_u64(x154, x102, x135);
uint64_t x159, uint8_t x160 = addcarryx_u64(x157, x105, x138);
uint64_t x162, uint8_t x163 = addcarryx_u64(x160, x108, x141);
uint64_t x165, uint8_t x166 = addcarryx_u64(x163, x111, x144);
uint64_t x168, uint8_t x169 = addcarryx_u64(x166, x112, x147);
uint64_t x171, uint64_t x172 = mulx_u64(x150, 0xffffffffffffffffL);
uint64_t x174, uint64_t x175 = mulx_u64(x150, 0xffffffffffffffffL);
uint64_t x177, uint64_t x178 = mulx_u64(x150, 0xfffffffdffffffffL);
uint64_t x180, uint64_t x181 = mulx_u64(x150, 0xffffffffffffffffL);
uint64_t x183, uint64_t x184 = mulx_u64(x150, 0xffffffffffffffffL);
uint64_t x186, uint8_t x187 = mulx_u64_out_u8(x150, 0x3);
uint64_t x189, uint8_t x190 = addcarryx_u64(0x0, x172, x174);
uint64_t x192, uint8_t x193 = addcarryx_u64(x190, x175, x177);
uint64_t x195, uint8_t x196 = addcarryx_u64(x193, x178, x180);
uint64_t x198, uint8_t x199 = addcarryx_u64(x196, x181, x183);
uint64_t x201, uint8_t x202 = addcarryx_u64(x199, x184, x186);
uint8_t x203 = (x202 + x187);
uint64_t _, uint8_t x206 = addcarryx_u64(0x0, x150, x171);
uint64_t x208, uint8_t x209 = addcarryx_u64(x206, x153, x189);
uint64_t x211, uint8_t x212 = addcarryx_u64(x209, x156, x192);
uint64_t x214, uint8_t x215 = addcarryx_u64(x212, x159, x195);
uint64_t x217, uint8_t x218 = addcarryx_u64(x215, x162, x198);
uint64_t x220, uint8_t x221 = addcarryx_u64(x218, x165, x201);
uint64_t x223, uint8_t x224 = addcarryx_u64(x221, x168, x203);
uint8_t x225 = (x224 + x169);
uint64_t x227, uint64_t x228 = mulx_u64(x7, x13);
uint64_t x230, uint64_t x231 = mulx_u64(x7, x15);
uint64_t x233, uint64_t x234 = mulx_u64(x7, x17);
uint64_t x236, uint64_t x237 = mulx_u64(x7, x19);
uint64_t x239, uint64_t x240 = mulx_u64(x7, x21);
uint64_t x242, uint64_t x243 = mulx_u64(x7, x20);
uint64_t x245, uint8_t x246 = addcarryx_u64(0x0, x228, x230);
uint64_t x248, uint8_t x249 = addcarryx_u64(x246, x231, x233);
uint64_t x251, uint8_t x252 = addcarryx_u64(x249, x234, x236);
uint64_t x254, uint8_t x255 = addcarryx_u64(x252, x237, x239);
uint64_t x257, uint8_t x258 = addcarryx_u64(x255, x240, x242);
uint64_t x260, uint8_t _ = addcarryx_u64(0x0, x258, x243);
uint64_t x263, uint8_t x264 = addcarryx_u64(0x0, x208, x227);
uint64_t x266, uint8_t x267 = addcarryx_u64(x264, x211, x245);
uint64_t x269, uint8_t x270 = addcarryx_u64(x267, x214, x248);
uint64_t x272, uint8_t x273 = addcarryx_u64(x270, x217, x251);
uint64_t x275, uint8_t x276 = addcarryx_u64(x273, x220, x254);
uint64_t x278, uint8_t x279 = addcarryx_u64(x276, x223, x257);
uint64_t x281, uint8_t x282 = addcarryx_u64(x279, x225, x260);
uint64_t x284, uint64_t x285 = mulx_u64(x263, 0xffffffffffffffffL);
uint64_t x287, uint64_t x288 = mulx_u64(x263, 0xffffffffffffffffL);
uint64_t x290, uint64_t x291 = mulx_u64(x263, 0xfffffffdffffffffL);
uint64_t x293, uint64_t x294 = mulx_u64(x263, 0xffffffffffffffffL);
uint64_t x296, uint64_t x297 = mulx_u64(x263, 0xffffffffffffffffL);
uint64_t x299, uint8_t x300 = mulx_u64_out_u8(x263, 0x3);
uint64_t x302, uint8_t x303 = addcarryx_u64(0x0, x285, x287);
uint64_t x305, uint8_t x306 = addcarryx_u64(x303, x288, x290);
uint64_t x308, uint8_t x309 = addcarryx_u64(x306, x291, x293);
uint64_t x311, uint8_t x312 = addcarryx_u64(x309, x294, x296);
uint64_t x314, uint8_t x315 = addcarryx_u64(x312, x297, x299);
uint8_t x316 = (x315 + x300);
uint64_t _, uint8_t x319 = addcarryx_u64(0x0, x263, x284);
uint64_t x321, uint8_t x322 = addcarryx_u64(x319, x266, x302);
uint64_t x324, uint8_t x325 = addcarryx_u64(x322, x269, x305);
uint64_t x327, uint8_t x328 = addcarryx_u64(x325, x272, x308);
uint64_t x330, uint8_t x331 = addcarryx_u64(x328, x275, x311);
uint64_t x333, uint8_t x334 = addcarryx_u64(x331, x278, x314);
uint64_t x336, uint8_t x337 = addcarryx_u64(x334, x281, x316);
uint8_t x338 = (x337 + x282);
uint64_t x340, uint64_t x341 = mulx_u64(x9, x13);
uint64_t x343, uint64_t x344 = mulx_u64(x9, x15);
uint64_t x346, uint64_t x347 = mulx_u64(x9, x17);
uint64_t x349, uint64_t x350 = mulx_u64(x9, x19);
uint64_t x352, uint64_t x353 = mulx_u64(x9, x21);
uint64_t x355, uint64_t x356 = mulx_u64(x9, x20);
uint64_t x358, uint8_t x359 = addcarryx_u64(0x0, x341, x343);
uint64_t x361, uint8_t x362 = addcarryx_u64(x359, x344, x346);
uint64_t x364, uint8_t x365 = addcarryx_u64(x362, x347, x349);
uint64_t x367, uint8_t x368 = addcarryx_u64(x365, x350, x352);
uint64_t x370, uint8_t x371 = addcarryx_u64(x368, x353, x355);
uint64_t x373, uint8_t _ = addcarryx_u64(0x0, x371, x356);
uint64_t x376, uint8_t x377 = addcarryx_u64(0x0, x321, x340);
uint64_t x379, uint8_t x380 = addcarryx_u64(x377, x324, x358);
uint64_t x382, uint8_t x383 = addcarryx_u64(x380, x327, x361);
uint64_t x385, uint8_t x386 = addcarryx_u64(x383, x330, x364);
uint64_t x388, uint8_t x389 = addcarryx_u64(x386, x333, x367);
uint64_t x391, uint8_t x392 = addcarryx_u64(x389, x336, x370);
uint64_t x394, uint8_t x395 = addcarryx_u64(x392, x338, x373);
uint64_t x397, uint64_t x398 = mulx_u64(x376, 0xffffffffffffffffL);
uint64_t x400, uint64_t x401 = mulx_u64(x376, 0xffffffffffffffffL);
uint64_t x403, uint64_t x404 = mulx_u64(x376, 0xfffffffdffffffffL);
uint64_t x406, uint64_t x407 = mulx_u64(x376, 0xffffffffffffffffL);
uint64_t x409, uint64_t x410 = mulx_u64(x376, 0xffffffffffffffffL);
uint64_t x412, uint8_t x413 = mulx_u64_out_u8(x376, 0x3);
uint64_t x415, uint8_t x416 = addcarryx_u64(0x0, x398, x400);
uint64_t x418, uint8_t x419 = addcarryx_u64(x416, x401, x403);
uint64_t x421, uint8_t x422 = addcarryx_u64(x419, x404, x406);
uint64_t x424, uint8_t x425 = addcarryx_u64(x422, x407, x409);
uint64_t x427, uint8_t x428 = addcarryx_u64(x425, x410, x412);
uint8_t x429 = (x428 + x413);
uint64_t _, uint8_t x432 = addcarryx_u64(0x0, x376, x397);
uint64_t x434, uint8_t x435 = addcarryx_u64(x432, x379, x415);
uint64_t x437, uint8_t x438 = addcarryx_u64(x435, x382, x418);
uint64_t x440, uint8_t x441 = addcarryx_u64(x438, x385, x421);
uint64_t x443, uint8_t x444 = addcarryx_u64(x441, x388, x424);
uint64_t x446, uint8_t x447 = addcarryx_u64(x444, x391, x427);
uint64_t x449, uint8_t x450 = addcarryx_u64(x447, x394, x429);
uint8_t x451 = (x450 + x395);
uint64_t x453, uint64_t x454 = mulx_u64(x11, x13);
uint64_t x456, uint64_t x457 = mulx_u64(x11, x15);
uint64_t x459, uint64_t x460 = mulx_u64(x11, x17);
uint64_t x462, uint64_t x463 = mulx_u64(x11, x19);
uint64_t x465, uint64_t x466 = mulx_u64(x11, x21);
uint64_t x468, uint64_t x469 = mulx_u64(x11, x20);
uint64_t x471, uint8_t x472 = addcarryx_u64(0x0, x454, x456);
uint64_t x474, uint8_t x475 = addcarryx_u64(x472, x457, x459);
uint64_t x477, uint8_t x478 = addcarryx_u64(x475, x460, x462);
uint64_t x480, uint8_t x481 = addcarryx_u64(x478, x463, x465);
uint64_t x483, uint8_t x484 = addcarryx_u64(x481, x466, x468);
uint64_t x486, uint8_t _ = addcarryx_u64(0x0, x484, x469);
uint64_t x489, uint8_t x490 = addcarryx_u64(0x0, x434, x453);
uint64_t x492, uint8_t x493 = addcarryx_u64(x490, x437, x471);
uint64_t x495, uint8_t x496 = addcarryx_u64(x493, x440, x474);
uint64_t x498, uint8_t x499 = addcarryx_u64(x496, x443, x477);
uint64_t x501, uint8_t x502 = addcarryx_u64(x499, x446, x480);
uint64_t x504, uint8_t x505 = addcarryx_u64(x502, x449, x483);
uint64_t x507, uint8_t x508 = addcarryx_u64(x505, x451, x486);
uint64_t x510, uint64_t x511 = mulx_u64(x489, 0xffffffffffffffffL);
uint64_t x513, uint64_t x514 = mulx_u64(x489, 0xffffffffffffffffL);
uint64_t x516, uint64_t x517 = mulx_u64(x489, 0xfffffffdffffffffL);
uint64_t x519, uint64_t x520 = mulx_u64(x489, 0xffffffffffffffffL);
uint64_t x522, uint64_t x523 = mulx_u64(x489, 0xffffffffffffffffL);
uint64_t x525, uint8_t x526 = mulx_u64_out_u8(x489, 0x3);
uint64_t x528, uint8_t x529 = addcarryx_u64(0x0, x511, x513);
uint64_t x531, uint8_t x532 = addcarryx_u64(x529, x514, x516);
uint64_t x534, uint8_t x535 = addcarryx_u64(x532, x517, x519);
uint64_t x537, uint8_t x538 = addcarryx_u64(x535, x520, x522);
uint64_t x540, uint8_t x541 = addcarryx_u64(x538, x523, x525);
uint8_t x542 = (x541 + x526);
uint64_t _, uint8_t x545 = addcarryx_u64(0x0, x489, x510);
uint64_t x547, uint8_t x548 = addcarryx_u64(x545, x492, x528);
uint64_t x550, uint8_t x551 = addcarryx_u64(x548, x495, x531);
uint64_t x553, uint8_t x554 = addcarryx_u64(x551, x498, x534);
uint64_t x556, uint8_t x557 = addcarryx_u64(x554, x501, x537);
uint64_t x559, uint8_t x560 = addcarryx_u64(x557, x504, x540);
uint64_t x562, uint8_t x563 = addcarryx_u64(x560, x507, x542);
uint8_t x564 = (x563 + x508);
uint64_t x566, uint64_t x567 = mulx_u64(x10, x13);
uint64_t x569, uint64_t x570 = mulx_u64(x10, x15);
uint64_t x572, uint64_t x573 = mulx_u64(x10, x17);
uint64_t x575, uint64_t x576 = mulx_u64(x10, x19);
uint64_t x578, uint64_t x579 = mulx_u64(x10, x21);
uint64_t x581, uint64_t x582 = mulx_u64(x10, x20);
uint64_t x584, uint8_t x585 = addcarryx_u64(0x0, x567, x569);
uint64_t x587, uint8_t x588 = addcarryx_u64(x585, x570, x572);
uint64_t x590, uint8_t x591 = addcarryx_u64(x588, x573, x575);
uint64_t x593, uint8_t x594 = addcarryx_u64(x591, x576, x578);
uint64_t x596, uint8_t x597 = addcarryx_u64(x594, x579, x581);
uint64_t x599, uint8_t _ = addcarryx_u64(0x0, x597, x582);
uint64_t x602, uint8_t x603 = addcarryx_u64(0x0, x547, x566);
uint64_t x605, uint8_t x606 = addcarryx_u64(x603, x550, x584);
uint64_t x608, uint8_t x609 = addcarryx_u64(x606, x553, x587);
uint64_t x611, uint8_t x612 = addcarryx_u64(x609, x556, x590);
uint64_t x614, uint8_t x615 = addcarryx_u64(x612, x559, x593);
uint64_t x617, uint8_t x618 = addcarryx_u64(x615, x562, x596);
uint64_t x620, uint8_t x621 = addcarryx_u64(x618, x564, x599);
uint64_t x623, uint64_t x624 = mulx_u64(x602, 0xffffffffffffffffL);
uint64_t x626, uint64_t x627 = mulx_u64(x602, 0xffffffffffffffffL);
uint64_t x629, uint64_t x630 = mulx_u64(x602, 0xfffffffdffffffffL);
uint64_t x632, uint64_t x633 = mulx_u64(x602, 0xffffffffffffffffL);
uint64_t x635, uint64_t x636 = mulx_u64(x602, 0xffffffffffffffffL);
uint64_t x638, uint8_t x639 = mulx_u64_out_u8(x602, 0x3);
uint64_t x641, uint8_t x642 = addcarryx_u64(0x0, x624, x626);
uint64_t x644, uint8_t x645 = addcarryx_u64(x642, x627, x629);
uint64_t x647, uint8_t x648 = addcarryx_u64(x645, x630, x632);
uint64_t x650, uint8_t x651 = addcarryx_u64(x648, x633, x635);
uint64_t x653, uint8_t x654 = addcarryx_u64(x651, x636, x638);
uint8_t x655 = (x654 + x639);
uint64_t _, uint8_t x658 = addcarryx_u64(0x0, x602, x623);
uint64_t x660, uint8_t x661 = addcarryx_u64(x658, x605, x641);
uint64_t x663, uint8_t x664 = addcarryx_u64(x661, x608, x644);
uint64_t x666, uint8_t x667 = addcarryx_u64(x664, x611, x647);
uint64_t x669, uint8_t x670 = addcarryx_u64(x667, x614, x650);
uint64_t x672, uint8_t x673 = addcarryx_u64(x670, x617, x653);
uint64_t x675, uint8_t x676 = addcarryx_u64(x673, x620, x655);
uint8_t x677 = (x676 + x621);
uint64_t x679, uint8_t x680 = subborrow_u64(0x0, x660, 0xffffffffffffffffL);
uint64_t x682, uint8_t x683 = subborrow_u64(x680, x663, 0xffffffffffffffffL);
uint64_t x685, uint8_t x686 = subborrow_u64(x683, x666, 0xfffffffdffffffffL);
uint64_t x688, uint8_t x689 = subborrow_u64(x686, x669, 0xffffffffffffffffL);
uint64_t x691, uint8_t x692 = subborrow_u64(x689, x672, 0xffffffffffffffffL);
uint64_t x694, uint8_t x695 = subborrow_u64(x692, x675, 0x3);
uint64_t _, uint8_t x698 = subborrow_u64(x695, x677, 0x0);
(cmovznz64(x698, x694, x675), cmovznz64(x698, x691, x672), cmovznz64(x698, x688, x669), cmovznz64(x698, x685, x666), cmovznz64(x698, x682, x663), cmovznz64(x698, x679, x660))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t) -> uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
