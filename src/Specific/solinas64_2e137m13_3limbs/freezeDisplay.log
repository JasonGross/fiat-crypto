freeze = λ var : Z.Syntax.base_type → Type,
λ '(x2, x3, x1)%core,
uint64_t x5, uint64_t x6 = Op (Z.Syntax.SubWithGetBorrow 46 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (0x0, Return x1, 0x3ffffffffff3);
uint64_t x8, uint64_t x9 = Op (Z.Syntax.SubWithGetBorrow 46 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x6, Return x3, 0x3fffffffffff);
uint64_t x11, uint64_t x12 = Op (Z.Syntax.SubWithGetBorrow 45 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x9, Return x2, 0x1fffffffffff);
uint64_t x13 = cmovznz64(x12, 0x0, 0xffffffffffffffffL);
uint64_t x14 = (x13 & 0x3ffffffffff3);
uint64_t x16, uint64_t x17 = Op (Z.Syntax.AddWithGetCarry 46 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (0x0, Return x5, Return x14);
uint64_t x18 = (x13 & 0x3fffffffffff);
uint64_t x20, uint64_t x21 = Op (Z.Syntax.AddWithGetCarry 46 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x17, Return x8, Return x18);
uint64_t x22 = (x13 & 0x1fffffffffff);
uint64_t x24, uint64_t _ = Op (Z.Syntax.AddWithGetCarry 45 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x21, Return x11, Return x22);
(Return x24, Return x20, Return x16)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t -> uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
