mul = λ var : Z.Syntax.base_type → Type,
λ '(x4, x5, x3, (x8, x9, x7))%core,
uint64_t x11, uint64_t x12 = mulx_u64(x3, x7);
uint64_t x14, uint64_t x15 = mulx_u64(x3, x9);
uint64_t x17, uint64_t x18 = mulx_u64(x3, x8);
uint64_t x20, uint8_t x21 = addcarryx_u64(0x0, x12, x14);
uint64_t x23, uint8_t x24 = addcarryx_u64(x21, x15, x17);
uint64_t x26, uint8_t _ = addcarryx_u64(0x0, x24, x18);
uint64_t x29, uint64_t _ = mulx_u64(x11, 0x8f5c28f5c28f5c29L);
uint64_t x32, uint64_t x33 = mulx_u64(x29, 0xffffffffffffffe7L);
uint64_t x35, uint64_t x36 = mulx_u64(x29, 0xffffffffffffffffL);
uint64_t x38, uint8_t x39 = addcarryx_u64(0x0, x33, x35);
uint64_t x41, uint8_t x42 = addcarryx_u64(x39, x36, x29);
uint64_t _, uint8_t x45 = addcarryx_u64(0x0, x11, x32);
uint64_t x47, uint8_t x48 = addcarryx_u64(x45, x20, x38);
uint64_t x50, uint8_t x51 = addcarryx_u64(x48, x23, x41);
uint64_t x53, uint8_t x54 = addcarryx_u64(x51, x26, x42);
uint64_t x56, uint64_t x57 = mulx_u64(x5, x7);
uint64_t x59, uint64_t x60 = mulx_u64(x5, x9);
uint64_t x62, uint64_t x63 = mulx_u64(x5, x8);
uint64_t x65, uint8_t x66 = addcarryx_u64(0x0, x57, x59);
uint64_t x68, uint8_t x69 = addcarryx_u64(x66, x60, x62);
uint64_t x71, uint8_t _ = addcarryx_u64(0x0, x69, x63);
uint64_t x74, uint8_t x75 = addcarryx_u64(0x0, x47, x56);
uint64_t x77, uint8_t x78 = addcarryx_u64(x75, x50, x65);
uint64_t x80, uint8_t x81 = addcarryx_u64(x78, x53, x68);
uint64_t x83, uint8_t x84 = addcarryx_u64(x81, x54, x71);
uint64_t x86, uint64_t _ = mulx_u64(x74, 0x8f5c28f5c28f5c29L);
uint64_t x89, uint64_t x90 = mulx_u64(x86, 0xffffffffffffffe7L);
uint64_t x92, uint64_t x93 = mulx_u64(x86, 0xffffffffffffffffL);
uint64_t x95, uint8_t x96 = addcarryx_u64(0x0, x90, x92);
uint64_t x98, uint8_t x99 = addcarryx_u64(x96, x93, x86);
uint64_t _, uint8_t x102 = addcarryx_u64(0x0, x74, x89);
uint64_t x104, uint8_t x105 = addcarryx_u64(x102, x77, x95);
uint64_t x107, uint8_t x108 = addcarryx_u64(x105, x80, x98);
uint64_t x110, uint8_t x111 = addcarryx_u64(x108, x83, x99);
uint8_t x112 = (x111 + x84);
uint64_t x114, uint64_t x115 = mulx_u64(x4, x7);
uint64_t x117, uint64_t x118 = mulx_u64(x4, x9);
uint64_t x120, uint64_t x121 = mulx_u64(x4, x8);
uint64_t x123, uint8_t x124 = addcarryx_u64(0x0, x115, x117);
uint64_t x126, uint8_t x127 = addcarryx_u64(x124, x118, x120);
uint64_t x129, uint8_t _ = addcarryx_u64(0x0, x127, x121);
uint64_t x132, uint8_t x133 = addcarryx_u64(0x0, x104, x114);
uint64_t x135, uint8_t x136 = addcarryx_u64(x133, x107, x123);
uint64_t x138, uint8_t x139 = addcarryx_u64(x136, x110, x126);
uint64_t x141, uint8_t x142 = addcarryx_u64(x139, x112, x129);
uint64_t x144, uint64_t _ = mulx_u64(x132, 0x8f5c28f5c28f5c29L);
uint64_t x147, uint64_t x148 = mulx_u64(x144, 0xffffffffffffffe7L);
uint64_t x150, uint64_t x151 = mulx_u64(x144, 0xffffffffffffffffL);
uint64_t x153, uint8_t x154 = addcarryx_u64(0x0, x148, x150);
uint64_t x156, uint8_t x157 = addcarryx_u64(x154, x151, x144);
uint64_t _, uint8_t x160 = addcarryx_u64(0x0, x132, x147);
uint64_t x162, uint8_t x163 = addcarryx_u64(x160, x135, x153);
uint64_t x165, uint8_t x166 = addcarryx_u64(x163, x138, x156);
uint64_t x168, uint8_t x169 = addcarryx_u64(x166, x141, x157);
uint8_t x170 = (x169 + x142);
uint64_t x172, uint8_t x173 = subborrow_u64(0x0, x162, 0xffffffffffffffe7L);
uint64_t x175, uint8_t x176 = subborrow_u64(x173, x165, 0xffffffffffffffffL);
uint64_t x178, uint8_t x179 = subborrow_u64(x176, x168, 0x1);
uint64_t _, uint8_t x182 = subborrow_u64(x179, x170, 0x0);
(cmovznz64(x182, x178, x168), cmovznz64(x182, x175, x165), cmovznz64(x182, x172, x162))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * (uint64_t * uint64_t * uint64_t) -> uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
