square = λ var : Z.Syntax.base_type → Type,
λ '(x16, x17, x15, x13, x11, x9, x7, x5, x3, x1)%core,
uint64_t x18 = ((0x2 * ((uint64_t)(x9 + x16) * (x9 + x16))) - (0x2 * ((uint64_t)x9 * x9)));
uint64_t x19 = ((((uint64_t)(x7 + x17) * (x9 + x16)) + ((uint64_t)(x9 + x16) * (x7 + x17))) - (((uint64_t)x7 * x9) + ((uint64_t)x9 * x7)));
uint64_t x20 = (((0x2 * ((uint64_t)(x5 + x15) * (x9 + x16))) + (((uint64_t)(x7 + x17) * (x7 + x17)) + (0x2 * ((uint64_t)(x9 + x16) * (x5 + x15))))) - ((0x2 * ((uint64_t)x5 * x9)) + (((uint64_t)x7 * x7) + (0x2 * ((uint64_t)x9 * x5)))));
uint64_t x21 = (((0x2 * ((uint64_t)(x3 + x13) * (x9 + x16))) + ((0x2 * ((uint64_t)(x5 + x15) * (x7 + x17))) + ((0x2 * ((uint64_t)(x7 + x17) * (x5 + x15))) + (0x2 * ((uint64_t)(x9 + x16) * (x3 + x13)))))) - ((0x2 * ((uint64_t)x3 * x9)) + ((0x2 * ((uint64_t)x5 * x7)) + ((0x2 * ((uint64_t)x7 * x5)) + (0x2 * ((uint64_t)x9 * x3))))));
uint64_t x22 = ((((uint64_t)(x1 + x11) * (x9 + x16)) + (((uint64_t)(x3 + x13) * (x7 + x17)) + ((0x2 * ((uint64_t)(x5 + x15) * (x5 + x15))) + (((uint64_t)(x7 + x17) * (x3 + x13)) + ((uint64_t)(x9 + x16) * (x1 + x11)))))) - (((uint64_t)x1 * x9) + (((uint64_t)x3 * x7) + ((0x2 * ((uint64_t)x5 * x5)) + (((uint64_t)x7 * x3) + ((uint64_t)x9 * x1))))));
uint64_t x23 = (((0x2 * ((uint64_t)x9 * x9)) + (0x2 * ((uint64_t)x16 * x16))) + ((((uint64_t)(x1 + x11) * (x7 + x17)) + ((0x2 * ((uint64_t)(x3 + x13) * (x5 + x15))) + ((0x2 * ((uint64_t)(x5 + x15) * (x3 + x13))) + ((uint64_t)(x7 + x17) * (x1 + x11))))) - (((uint64_t)x1 * x7) + ((0x2 * ((uint64_t)x3 * x5)) + ((0x2 * ((uint64_t)x5 * x3)) + ((uint64_t)x7 * x1))))));
uint64_t x24 = (((((uint64_t)x7 * x9) + ((uint64_t)x9 * x7)) + (((uint64_t)x17 * x16) + ((uint64_t)x16 * x17))) + ((((uint64_t)(x1 + x11) * (x5 + x15)) + (((uint64_t)(x3 + x13) * (x3 + x13)) + ((uint64_t)(x5 + x15) * (x1 + x11)))) - (((uint64_t)x1 * x5) + (((uint64_t)x3 * x3) + ((uint64_t)x5 * x1)))));
uint64_t x25 = ((((0x2 * ((uint64_t)x5 * x9)) + (((uint64_t)x7 * x7) + (0x2 * ((uint64_t)x9 * x5)))) + ((0x2 * ((uint64_t)x15 * x16)) + (((uint64_t)x17 * x17) + (0x2 * ((uint64_t)x16 * x15))))) + ((((uint64_t)(x1 + x11) * (x3 + x13)) + ((uint64_t)(x3 + x13) * (x1 + x11))) - (((uint64_t)x1 * x3) + ((uint64_t)x3 * x1))));
uint64_t x26 = ((((0x2 * ((uint64_t)x3 * x9)) + ((0x2 * ((uint64_t)x5 * x7)) + ((0x2 * ((uint64_t)x7 * x5)) + (0x2 * ((uint64_t)x9 * x3))))) + ((0x2 * ((uint64_t)x13 * x16)) + ((0x2 * ((uint64_t)x15 * x17)) + ((0x2 * ((uint64_t)x17 * x15)) + (0x2 * ((uint64_t)x16 * x13)))))) + (((uint64_t)(x1 + x11) * (x1 + x11)) - ((uint64_t)x1 * x1)));
uint64_t x27 = ((((uint64_t)x1 * x9) + (((uint64_t)x3 * x7) + ((0x2 * ((uint64_t)x5 * x5)) + (((uint64_t)x7 * x3) + ((uint64_t)x9 * x1))))) + (((uint64_t)x11 * x16) + (((uint64_t)x13 * x17) + ((0x2 * ((uint64_t)x15 * x15)) + (((uint64_t)x17 * x13) + ((uint64_t)x16 * x11))))));
uint64_t x28 = ((((uint64_t)x1 * x7) + ((0x2 * ((uint64_t)x3 * x5)) + ((0x2 * ((uint64_t)x5 * x3)) + ((uint64_t)x7 * x1)))) + (((uint64_t)x11 * x17) + ((0x2 * ((uint64_t)x13 * x15)) + ((0x2 * ((uint64_t)x15 * x13)) + ((uint64_t)x17 * x11)))));
uint64_t x29 = ((((uint64_t)x1 * x5) + (((uint64_t)x3 * x3) + ((uint64_t)x5 * x1))) + (((uint64_t)x11 * x15) + (((uint64_t)x13 * x13) + ((uint64_t)x15 * x11))));
uint64_t x30 = ((((uint64_t)x1 * x3) + ((uint64_t)x3 * x1)) + (((uint64_t)x11 * x13) + ((uint64_t)x13 * x11)));
uint64_t x31 = (((uint64_t)x1 * x1) + ((uint64_t)x11 * x11));
uint64_t x32 = (x23 + x18);
uint64_t x33 = (x24 + x19);
uint64_t x34 = (x25 + x20);
uint64_t x35 = (x26 + x21);
uint64_t x36 = (x28 + x18);
uint64_t x37 = (x29 + x19);
uint64_t x38 = (x30 + x20);
uint64_t x39 = (x31 + x21);
uint32_t x40 = (uint32_t) (x27 >> 0x15);
uint32_t x41 = ((uint32_t)x27 & 0x1fffff);
uint32_t x42 = (uint32_t) (x22 >> 0x15);
uint32_t x43 = ((uint32_t)x22 & 0x1fffff);
uint64_t x44 = (((uint64_t)0x200000 * x42) + x43);
uint32_t x45 = (uint32_t) (x44 >> 0x15);
uint32_t x46 = ((uint32_t)x44 & 0x1fffff);
uint64_t x47 = ((x40 + x35) + x45);
uint32_t x48 = (uint32_t) (x47 >> 0x16);
uint32_t x49 = ((uint32_t)x47 & 0x3fffff);
uint64_t x50 = (x39 + x45);
uint32_t x51 = (uint32_t) (x50 >> 0x16);
uint32_t x52 = ((uint32_t)x50 & 0x3fffff);
uint64_t x53 = (x48 + x34);
uint32_t x54 = (uint32_t) (x53 >> 0x16);
uint32_t x55 = ((uint32_t)x53 & 0x3fffff);
uint64_t x56 = (x51 + x38);
uint32_t x57 = (uint32_t) (x56 >> 0x16);
uint32_t x58 = ((uint32_t)x56 & 0x3fffff);
uint64_t x59 = (x54 + x33);
uint32_t x60 = (uint32_t) (x59 >> 0x15);
uint32_t x61 = ((uint32_t)x59 & 0x1fffff);
uint64_t x62 = (x57 + x37);
uint32_t x63 = (uint32_t) (x62 >> 0x15);
uint32_t x64 = ((uint32_t)x62 & 0x1fffff);
uint64_t x65 = (x60 + x32);
uint32_t x66 = (uint32_t) (x65 >> 0x16);
uint32_t x67 = ((uint32_t)x65 & 0x3fffff);
uint64_t x68 = (x63 + x36);
uint32_t x69 = (uint32_t) (x68 >> 0x16);
uint32_t x70 = ((uint32_t)x68 & 0x3fffff);
uint32_t x71 = (x66 + x46);
uint32_t x72 = (x71 >> 0x15);
uint32_t x73 = (x71 & 0x1fffff);
uint32_t x74 = (x69 + x41);
uint32_t x75 = (x74 >> 0x15);
uint32_t x76 = (x74 & 0x1fffff);
uint32_t x77 = ((0x200000 * x72) + x73);
uint32_t x78 = (x77 >> 0x15);
uint32_t x79 = (x77 & 0x1fffff);
uint32_t x80 = ((x75 + x49) + x78);
uint32_t x81 = (x80 >> 0x16);
uint32_t x82 = (x80 & 0x3fffff);
uint32_t x83 = (x52 + x78);
uint32_t x84 = (x83 >> 0x16);
uint32_t x85 = (x83 & 0x3fffff);
return (Return x79, Return x67, Return x61, (x81 + x55), Return x82, Return x76, Return x70, Return x64, (x84 + x58), Return x85)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t -> uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

Argument scope is [function_scope]
