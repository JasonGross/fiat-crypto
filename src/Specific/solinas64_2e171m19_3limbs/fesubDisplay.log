sub = λ var : Z.Syntax.base_type → Type,
λ '(x4, x5, x3, (x8, x9, x7))%core,
(((0x3fffffffffffffe + x4) - x8), ((0x3fffffffffffffe + x5) - x9), ((0x3ffffffffffffda + x3) - x7))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * (uint64_t * uint64_t * uint64_t) -> uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
