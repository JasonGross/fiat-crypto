mul = λ var : Z.Syntax.base_type → Type,
λ '(x16, x17, x15, x13, x11, x9, x7, x5, x3, (x32, x33, x31, x29, x27, x25, x23, x21, x19))%core,
uint64_t x34 = (0x2 * ((uint64_t)x16 * x32));
uint64_t x35 = ((0x2 * ((uint64_t)x17 * x32)) + (0x2 * ((uint64_t)x16 * x33)));
uint64_t x36 = ((0x2 * ((uint64_t)x15 * x32)) + ((0x2 * ((uint64_t)x17 * x33)) + (0x2 * ((uint64_t)x16 * x31))));
uint64_t x37 = (((uint64_t)x13 * x32) + (((uint64_t)x15 * x33) + (((uint64_t)x17 * x31) + ((uint64_t)x16 * x29))));
uint64_t x38 = ((0x2 * ((uint64_t)x11 * x32)) + (((uint64_t)x13 * x33) + (((uint64_t)x15 * x31) + (((uint64_t)x17 * x29) + (0x2 * ((uint64_t)x16 * x27))))));
uint64_t x39 = ((0x2 * ((uint64_t)x9 * x32)) + ((0x2 * ((uint64_t)x11 * x33)) + (((uint64_t)x13 * x31) + (((uint64_t)x15 * x29) + ((0x2 * ((uint64_t)x17 * x27)) + (0x2 * ((uint64_t)x16 * x25)))))));
uint64_t x40 = ((0x2 * ((uint64_t)x7 * x32)) + ((0x2 * ((uint64_t)x9 * x33)) + ((0x2 * ((uint64_t)x11 * x31)) + (((uint64_t)x13 * x29) + ((0x2 * ((uint64_t)x15 * x27)) + ((0x2 * ((uint64_t)x17 * x25)) + (0x2 * ((uint64_t)x16 * x23))))))));
uint64_t x41 = ((0x2 * ((uint64_t)x5 * x32)) + ((0x2 * ((uint64_t)x7 * x33)) + ((0x2 * ((uint64_t)x9 * x31)) + ((0x2 * ((uint64_t)x11 * x29)) + ((0x2 * ((uint64_t)x13 * x27)) + ((0x2 * ((uint64_t)x15 * x25)) + ((0x2 * ((uint64_t)x17 * x23)) + (0x2 * ((uint64_t)x16 * x21)))))))));
uint64_t x42 = (((uint64_t)x3 * x32) + (((uint64_t)x5 * x33) + (((uint64_t)x7 * x31) + (((uint64_t)x9 * x29) + ((0x2 * ((uint64_t)x11 * x27)) + (((uint64_t)x13 * x25) + (((uint64_t)x15 * x23) + (((uint64_t)x17 * x21) + ((uint64_t)x16 * x19)))))))));
uint64_t x43 = (((uint64_t)x3 * x33) + (((uint64_t)x5 * x31) + (((uint64_t)x7 * x29) + ((0x2 * ((uint64_t)x9 * x27)) + ((0x2 * ((uint64_t)x11 * x25)) + (((uint64_t)x13 * x23) + (((uint64_t)x15 * x21) + ((uint64_t)x17 * x19))))))));
uint64_t x44 = (((uint64_t)x3 * x31) + (((uint64_t)x5 * x29) + ((0x2 * ((uint64_t)x7 * x27)) + ((0x2 * ((uint64_t)x9 * x25)) + ((0x2 * ((uint64_t)x11 * x23)) + (((uint64_t)x13 * x21) + ((uint64_t)x15 * x19)))))));
uint64_t x45 = (((uint64_t)x3 * x29) + ((0x2 * ((uint64_t)x5 * x27)) + ((0x2 * ((uint64_t)x7 * x25)) + ((0x2 * ((uint64_t)x9 * x23)) + ((0x2 * ((uint64_t)x11 * x21)) + ((uint64_t)x13 * x19))))));
uint64_t x46 = (((uint64_t)x3 * x27) + (((uint64_t)x5 * x25) + (((uint64_t)x7 * x23) + (((uint64_t)x9 * x21) + ((uint64_t)x11 * x19)))));
uint64_t x47 = (((uint64_t)x3 * x25) + (((uint64_t)x5 * x23) + (((uint64_t)x7 * x21) + ((uint64_t)x9 * x19))));
uint64_t x48 = (((uint64_t)x3 * x23) + (((uint64_t)x5 * x21) + ((uint64_t)x7 * x19)));
uint64_t x49 = (((uint64_t)x3 * x21) + ((uint64_t)x5 * x19));
uint64_t x50 = ((uint64_t)x3 * x19);
uint64_t x51 = (x43 + (0xf * x34));
uint64_t x52 = (x44 + (0xf * x35));
uint64_t x53 = (x45 + (0xf * x36));
uint64_t x54 = (x46 + (0xf * x37));
uint64_t x55 = (x47 + (0xf * x38));
uint64_t x56 = (x48 + (0xf * x39));
uint64_t x57 = (x49 + (0xf * x40));
uint64_t x58 = (x50 + (0xf * x41));
uint64_t x59 = (x58 >> 0x16);
uint32_t x60 = ((uint32_t)x58 & 0x3fffff);
uint64_t x61 = (x59 + x57);
uint64_t x62 = (x61 >> 0x16);
uint32_t x63 = ((uint32_t)x61 & 0x3fffff);
uint64_t x64 = (x62 + x56);
uint64_t x65 = (x64 >> 0x16);
uint32_t x66 = ((uint32_t)x64 & 0x3fffff);
uint64_t x67 = (x65 + x55);
uint32_t x68 = (uint32_t) (x67 >> 0x16);
uint32_t x69 = ((uint32_t)x67 & 0x3fffff);
uint64_t x70 = (x68 + x54);
uint64_t x71 = (x70 >> 0x15);
uint32_t x72 = ((uint32_t)x70 & 0x1fffff);
uint64_t x73 = (x71 + x53);
uint32_t x74 = (uint32_t) (x73 >> 0x16);
uint32_t x75 = ((uint32_t)x73 & 0x3fffff);
uint64_t x76 = (x74 + x52);
uint32_t x77 = (uint32_t) (x76 >> 0x16);
uint32_t x78 = ((uint32_t)x76 & 0x3fffff);
uint64_t x79 = (x77 + x51);
uint32_t x80 = (uint32_t) (x79 >> 0x16);
uint32_t x81 = ((uint32_t)x79 & 0x3fffff);
uint64_t x82 = (x80 + x42);
uint32_t x83 = (uint32_t) (x82 >> 0x15);
uint32_t x84 = ((uint32_t)x82 & 0x1fffff);
uint64_t x85 = (x60 + ((uint64_t)0xf * x83));
uint32_t x86 = (uint32_t) (x85 >> 0x16);
uint32_t x87 = ((uint32_t)x85 & 0x3fffff);
uint32_t x88 = (x86 + x63);
uint32_t x89 = (x88 >> 0x16);
uint32_t x90 = (x88 & 0x3fffff);
return (Return x84, Return x81, Return x78, Return x75, Return x72, Return x69, (x89 + x66), Return x90, Return x87)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t) -> uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

Argument scope is [function_scope]
