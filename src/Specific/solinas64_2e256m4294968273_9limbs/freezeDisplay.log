freeze = λ var : Z.Syntax.base_type → Type,
λ '(x14, x15, x13, x11, x9, x7, x5, x3, x1)%core,
uint64_t x17, uint64_t x18 = Op (Z.Syntax.SubWithGetBorrow 29 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (0x0, Return x1, 0x1ffffc2f);
uint64_t x20, uint64_t x21 = Op (Z.Syntax.SubWithGetBorrow 28 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x18, Return x3, 0xffffff7);
uint64_t x23, uint64_t x24 = Op (Z.Syntax.SubWithGetBorrow 29 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x21, Return x5, 0x1fffffff);
uint64_t x26, uint64_t x27 = Op (Z.Syntax.SubWithGetBorrow 28 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x24, Return x7, 0xfffffff);
uint64_t x29, uint64_t x30 = Op (Z.Syntax.SubWithGetBorrow 29 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x27, Return x9, 0x1fffffff);
uint64_t x32, uint64_t x33 = Op (Z.Syntax.SubWithGetBorrow 28 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x30, Return x11, 0xfffffff);
uint64_t x35, uint64_t x36 = Op (Z.Syntax.SubWithGetBorrow 29 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x33, Return x13, 0x1fffffff);
uint64_t x38, uint64_t x39 = Op (Z.Syntax.SubWithGetBorrow 28 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x36, Return x15, 0xfffffff);
uint64_t x41, uint64_t x42 = Op (Z.Syntax.SubWithGetBorrow 28 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x39, Return x14, 0xfffffff);
uint64_t x43 = cmovznz64(x42, 0x0, 0xffffffffffffffffL);
uint64_t x44 = (x43 & 0x1ffffc2f);
uint64_t x46, uint64_t x47 = Op (Z.Syntax.AddWithGetCarry 29 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (0x0, Return x17, Return x44);
uint64_t x48 = (x43 & 0xffffff7);
uint64_t x50, uint64_t x51 = Op (Z.Syntax.AddWithGetCarry 28 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x47, Return x20, Return x48);
uint64_t x52 = (x43 & 0x1fffffff);
uint64_t x54, uint64_t x55 = Op (Z.Syntax.AddWithGetCarry 29 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x51, Return x23, Return x52);
uint64_t x56 = (x43 & 0xfffffff);
uint64_t x58, uint64_t x59 = Op (Z.Syntax.AddWithGetCarry 28 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x55, Return x26, Return x56);
uint64_t x60 = (x43 & 0x1fffffff);
uint64_t x62, uint64_t x63 = Op (Z.Syntax.AddWithGetCarry 29 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x59, Return x29, Return x60);
uint64_t x64 = (x43 & 0xfffffff);
uint64_t x66, uint64_t x67 = Op (Z.Syntax.AddWithGetCarry 28 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x63, Return x32, Return x64);
uint64_t x68 = (x43 & 0x1fffffff);
uint64_t x70, uint64_t x71 = Op (Z.Syntax.AddWithGetCarry 29 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x67, Return x35, Return x68);
uint64_t x72 = (x43 & 0xfffffff);
uint64_t x74, uint64_t x75 = Op (Z.Syntax.AddWithGetCarry 28 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x71, Return x38, Return x72);
uint64_t x76 = (x43 & 0xfffffff);
uint64_t x78, uint64_t _ = Op (Z.Syntax.AddWithGetCarry 28 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x75, Return x41, Return x76);
(Return x78, Return x74, Return x70, Return x66, Return x62, Return x58, Return x54, Return x50, Return x46)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t -> uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
