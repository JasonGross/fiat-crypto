mul = λ var : Z.Syntax.base_type → Type,
λ '(x12, x13, x11, x9, x7, x5, x3, (x24, x25, x23, x21, x19, x17, x15))%core,
uint128_t x26 = (0x2 * ((uint128_t)x12 * x24));
uint128_t x27 = (((uint128_t)x13 * x24) + ((uint128_t)x12 * x25));
uint128_t x28 = ((0x2 * ((uint128_t)x11 * x24)) + (((uint128_t)x13 * x25) + (0x2 * ((uint128_t)x12 * x23))));
uint128_t x29 = (((uint128_t)x9 * x24) + (((uint128_t)x11 * x25) + (((uint128_t)x13 * x23) + ((uint128_t)x12 * x21))));
uint128_t x30 = ((0x2 * ((uint128_t)x7 * x24)) + (((uint128_t)x9 * x25) + ((0x2 * ((uint128_t)x11 * x23)) + (((uint128_t)x13 * x21) + (0x2 * ((uint128_t)x12 * x19))))));
uint128_t x31 = ((0x2 * ((uint128_t)x5 * x24)) + ((0x2 * ((uint128_t)x7 * x25)) + ((0x2 * ((uint128_t)x9 * x23)) + ((0x2 * ((uint128_t)x11 * x21)) + ((0x2 * ((uint128_t)x13 * x19)) + (0x2 * ((uint128_t)x12 * x17)))))));
uint128_t x32 = (((uint128_t)x3 * x24) + (((uint128_t)x5 * x25) + ((0x2 * ((uint128_t)x7 * x23)) + (((uint128_t)x9 * x21) + ((0x2 * ((uint128_t)x11 * x19)) + (((uint128_t)x13 * x17) + ((uint128_t)x12 * x15)))))));
uint128_t x33 = (((uint128_t)x3 * x25) + ((0x2 * ((uint128_t)x5 * x23)) + ((0x2 * ((uint128_t)x7 * x21)) + ((0x2 * ((uint128_t)x9 * x19)) + ((0x2 * ((uint128_t)x11 * x17)) + ((uint128_t)x13 * x15))))));
uint128_t x34 = (((uint128_t)x3 * x23) + (((uint128_t)x5 * x21) + ((0x2 * ((uint128_t)x7 * x19)) + (((uint128_t)x9 * x17) + ((uint128_t)x11 * x15)))));
uint128_t x35 = (((uint128_t)x3 * x21) + ((0x2 * ((uint128_t)x5 * x19)) + ((0x2 * ((uint128_t)x7 * x17)) + ((uint128_t)x9 * x15))));
uint128_t x36 = (((uint128_t)x3 * x19) + (((uint128_t)x5 * x17) + ((uint128_t)x7 * x15)));
uint128_t x37 = (((uint128_t)x3 * x17) + ((uint128_t)x5 * x15));
uint128_t x38 = ((uint128_t)x3 * x15);
uint128_t x39 = (x33 + ((0x3d1 * x26) + (0x100000000 * x26)));
uint128_t x40 = (x34 + ((0x3d1 * x27) + (0x100000000 * x27)));
uint128_t x41 = (x35 + ((0x3d1 * x28) + (0x100000000 * x28)));
uint128_t x42 = (x36 + ((0x3d1 * x29) + (0x100000000 * x29)));
uint128_t x43 = (x37 + ((0x3d1 * x30) + (0x100000000 * x30)));
uint128_t x44 = (x38 + ((0x3d1 * x31) + (0x100000000 * x31)));
uint64_t x45 = (uint64_t) (x32 >> 0x24);
uint64_t x46 = ((uint64_t)x32 & 0xfffffffff);
uint128_t x47 = (((uint128_t)0x1000000000 * x45) + x46);
uint64_t x48 = (uint64_t) (x47 >> 0x24);
uint64_t x49 = ((uint64_t)x47 & 0xfffffffff);
uint128_t x50 = (((uint128_t)0x1000000000 * x48) + x49);
uint64_t x51 = (uint64_t) (x50 >> 0x24);
uint64_t x52 = ((uint64_t)x50 & 0xfffffffff);
uint128_t x53 = (x44 + ((0x3d1 * x51) + ((uint128_t)0x100000000 * x51)));
uint128_t x54 = (x53 >> 0x25);
uint64_t x55 = ((uint64_t)x53 & 0x1fffffffff);
uint128_t x56 = (x54 + x43);
uint128_t x57 = (x56 >> 0x25);
uint64_t x58 = ((uint64_t)x56 & 0x1fffffffff);
uint128_t x59 = (x57 + x42);
uint128_t x60 = (x59 >> 0x24);
uint64_t x61 = ((uint64_t)x59 & 0xfffffffff);
uint128_t x62 = (x60 + x41);
uint128_t x63 = (x62 >> 0x25);
uint64_t x64 = ((uint64_t)x62 & 0x1fffffffff);
uint128_t x65 = (x63 + x40);
uint128_t x66 = (x65 >> 0x24);
uint64_t x67 = ((uint64_t)x65 & 0xfffffffff);
uint128_t x68 = (x66 + x39);
uint128_t x69 = (x68 >> 0x25);
uint64_t x70 = ((uint64_t)x68 & 0x1fffffffff);
uint128_t x71 = (x69 + x52);
uint64_t x72 = (uint64_t) (x71 >> 0x24);
uint64_t x73 = ((uint64_t)x71 & 0xfffffffff);
uint128_t x74 = (x55 + ((0x3d1 * x72) + ((uint128_t)0x100000000 * x72)));
uint64_t x75 = (uint64_t) (x74 >> 0x25);
uint64_t x76 = ((uint64_t)x74 & 0x1fffffffff);
uint64_t x77 = (x76 >> 0x25);
uint64_t x78 = (x76 & 0x1fffffffff);
return (Return x73, Return x70, Return x67, Return x64, Return x61, (x77 + (x75 + x58)), Return x78)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t) -> uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
