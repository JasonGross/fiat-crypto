mul = λ var : Z.Syntax.base_type → Type,
λ '(x10, x11, x9, x7, x5, x3, (x20, x21, x19, x17, x15, x13))%core,
uint32_t x23, uint32_t x24 = mulx_u32(x3, x13);
uint32_t x26, uint32_t x27 = mulx_u32(x3, x15);
uint32_t x29, uint32_t x30 = mulx_u32(x3, x17);
uint32_t x32, uint32_t x33 = mulx_u32(x3, x19);
uint32_t x35, uint32_t x36 = mulx_u32(x3, x21);
uint32_t x38, uint32_t x39 = mulx_u32(x3, x20);
uint32_t x41, uint8_t x42 = addcarryx_u32(0x0, x24, x26);
uint32_t x44, uint8_t x45 = addcarryx_u32(x42, x27, x29);
uint32_t x47, uint8_t x48 = addcarryx_u32(x45, x30, x32);
uint32_t x50, uint8_t x51 = addcarryx_u32(x48, x33, x35);
uint32_t x53, uint8_t x54 = addcarryx_u32(x51, x36, x38);
uint32_t x56, uint8_t _ = addcarryx_u32(0x0, x54, x39);
uint32_t x59, uint32_t _ = mulx_u32(x23, 0xcccccccd);
uint32_t x62, uint32_t x63 = mulx_u32(x59, 0xfffffffb);
uint32_t x65, uint32_t x66 = mulx_u32(x59, 0xffffffff);
uint32_t x68, uint32_t x69 = mulx_u32(x59, 0xffffffff);
uint32_t x71, uint32_t x72 = mulx_u32(x59, 0xffffffff);
uint32_t x74, uint32_t x75 = mulx_u32(x59, 0xffffffff);
uint32_t x77, uint8_t x78 = mulx_u32_out_u8(x59, 0x3f);
uint32_t x80, uint8_t x81 = addcarryx_u32(0x0, x63, x65);
uint32_t x83, uint8_t x84 = addcarryx_u32(x81, x66, x68);
uint32_t x86, uint8_t x87 = addcarryx_u32(x84, x69, x71);
uint32_t x89, uint8_t x90 = addcarryx_u32(x87, x72, x74);
uint32_t x92, uint8_t x93 = addcarryx_u32(x90, x75, x77);
uint8_t x94 = (x93 + x78);
uint32_t _, uint8_t x97 = addcarryx_u32(0x0, x23, x62);
uint32_t x99, uint8_t x100 = addcarryx_u32(x97, x41, x80);
uint32_t x102, uint8_t x103 = addcarryx_u32(x100, x44, x83);
uint32_t x105, uint8_t x106 = addcarryx_u32(x103, x47, x86);
uint32_t x108, uint8_t x109 = addcarryx_u32(x106, x50, x89);
uint32_t x111, uint8_t x112 = addcarryx_u32(x109, x53, x92);
uint32_t x114, uint8_t x115 = addcarryx_u32(x112, x56, x94);
uint32_t x117, uint32_t x118 = mulx_u32(x5, x13);
uint32_t x120, uint32_t x121 = mulx_u32(x5, x15);
uint32_t x123, uint32_t x124 = mulx_u32(x5, x17);
uint32_t x126, uint32_t x127 = mulx_u32(x5, x19);
uint32_t x129, uint32_t x130 = mulx_u32(x5, x21);
uint32_t x132, uint32_t x133 = mulx_u32(x5, x20);
uint32_t x135, uint8_t x136 = addcarryx_u32(0x0, x118, x120);
uint32_t x138, uint8_t x139 = addcarryx_u32(x136, x121, x123);
uint32_t x141, uint8_t x142 = addcarryx_u32(x139, x124, x126);
uint32_t x144, uint8_t x145 = addcarryx_u32(x142, x127, x129);
uint32_t x147, uint8_t x148 = addcarryx_u32(x145, x130, x132);
uint32_t x150, uint8_t _ = addcarryx_u32(0x0, x148, x133);
uint32_t x153, uint8_t x154 = addcarryx_u32(0x0, x99, x117);
uint32_t x156, uint8_t x157 = addcarryx_u32(x154, x102, x135);
uint32_t x159, uint8_t x160 = addcarryx_u32(x157, x105, x138);
uint32_t x162, uint8_t x163 = addcarryx_u32(x160, x108, x141);
uint32_t x165, uint8_t x166 = addcarryx_u32(x163, x111, x144);
uint32_t x168, uint8_t x169 = addcarryx_u32(x166, x114, x147);
uint32_t x171, uint8_t x172 = addcarryx_u32(x169, x115, x150);
uint32_t x174, uint32_t _ = mulx_u32(x153, 0xcccccccd);
uint32_t x177, uint32_t x178 = mulx_u32(x174, 0xfffffffb);
uint32_t x180, uint32_t x181 = mulx_u32(x174, 0xffffffff);
uint32_t x183, uint32_t x184 = mulx_u32(x174, 0xffffffff);
uint32_t x186, uint32_t x187 = mulx_u32(x174, 0xffffffff);
uint32_t x189, uint32_t x190 = mulx_u32(x174, 0xffffffff);
uint32_t x192, uint8_t x193 = mulx_u32_out_u8(x174, 0x3f);
uint32_t x195, uint8_t x196 = addcarryx_u32(0x0, x178, x180);
uint32_t x198, uint8_t x199 = addcarryx_u32(x196, x181, x183);
uint32_t x201, uint8_t x202 = addcarryx_u32(x199, x184, x186);
uint32_t x204, uint8_t x205 = addcarryx_u32(x202, x187, x189);
uint32_t x207, uint8_t x208 = addcarryx_u32(x205, x190, x192);
uint8_t x209 = (x208 + x193);
uint32_t _, uint8_t x212 = addcarryx_u32(0x0, x153, x177);
uint32_t x214, uint8_t x215 = addcarryx_u32(x212, x156, x195);
uint32_t x217, uint8_t x218 = addcarryx_u32(x215, x159, x198);
uint32_t x220, uint8_t x221 = addcarryx_u32(x218, x162, x201);
uint32_t x223, uint8_t x224 = addcarryx_u32(x221, x165, x204);
uint32_t x226, uint8_t x227 = addcarryx_u32(x224, x168, x207);
uint32_t x229, uint8_t x230 = addcarryx_u32(x227, x171, x209);
uint8_t x231 = (x230 + x172);
uint32_t x233, uint32_t x234 = mulx_u32(x7, x13);
uint32_t x236, uint32_t x237 = mulx_u32(x7, x15);
uint32_t x239, uint32_t x240 = mulx_u32(x7, x17);
uint32_t x242, uint32_t x243 = mulx_u32(x7, x19);
uint32_t x245, uint32_t x246 = mulx_u32(x7, x21);
uint32_t x248, uint32_t x249 = mulx_u32(x7, x20);
uint32_t x251, uint8_t x252 = addcarryx_u32(0x0, x234, x236);
uint32_t x254, uint8_t x255 = addcarryx_u32(x252, x237, x239);
uint32_t x257, uint8_t x258 = addcarryx_u32(x255, x240, x242);
uint32_t x260, uint8_t x261 = addcarryx_u32(x258, x243, x245);
uint32_t x263, uint8_t x264 = addcarryx_u32(x261, x246, x248);
uint32_t x266, uint8_t _ = addcarryx_u32(0x0, x264, x249);
uint32_t x269, uint8_t x270 = addcarryx_u32(0x0, x214, x233);
uint32_t x272, uint8_t x273 = addcarryx_u32(x270, x217, x251);
uint32_t x275, uint8_t x276 = addcarryx_u32(x273, x220, x254);
uint32_t x278, uint8_t x279 = addcarryx_u32(x276, x223, x257);
uint32_t x281, uint8_t x282 = addcarryx_u32(x279, x226, x260);
uint32_t x284, uint8_t x285 = addcarryx_u32(x282, x229, x263);
uint32_t x287, uint8_t x288 = addcarryx_u32(x285, x231, x266);
uint32_t x290, uint32_t _ = mulx_u32(x269, 0xcccccccd);
uint32_t x293, uint32_t x294 = mulx_u32(x290, 0xfffffffb);
uint32_t x296, uint32_t x297 = mulx_u32(x290, 0xffffffff);
uint32_t x299, uint32_t x300 = mulx_u32(x290, 0xffffffff);
uint32_t x302, uint32_t x303 = mulx_u32(x290, 0xffffffff);
uint32_t x305, uint32_t x306 = mulx_u32(x290, 0xffffffff);
uint32_t x308, uint8_t x309 = mulx_u32_out_u8(x290, 0x3f);
uint32_t x311, uint8_t x312 = addcarryx_u32(0x0, x294, x296);
uint32_t x314, uint8_t x315 = addcarryx_u32(x312, x297, x299);
uint32_t x317, uint8_t x318 = addcarryx_u32(x315, x300, x302);
uint32_t x320, uint8_t x321 = addcarryx_u32(x318, x303, x305);
uint32_t x323, uint8_t x324 = addcarryx_u32(x321, x306, x308);
uint8_t x325 = (x324 + x309);
uint32_t _, uint8_t x328 = addcarryx_u32(0x0, x269, x293);
uint32_t x330, uint8_t x331 = addcarryx_u32(x328, x272, x311);
uint32_t x333, uint8_t x334 = addcarryx_u32(x331, x275, x314);
uint32_t x336, uint8_t x337 = addcarryx_u32(x334, x278, x317);
uint32_t x339, uint8_t x340 = addcarryx_u32(x337, x281, x320);
uint32_t x342, uint8_t x343 = addcarryx_u32(x340, x284, x323);
uint32_t x345, uint8_t x346 = addcarryx_u32(x343, x287, x325);
uint8_t x347 = (x346 + x288);
uint32_t x349, uint32_t x350 = mulx_u32(x9, x13);
uint32_t x352, uint32_t x353 = mulx_u32(x9, x15);
uint32_t x355, uint32_t x356 = mulx_u32(x9, x17);
uint32_t x358, uint32_t x359 = mulx_u32(x9, x19);
uint32_t x361, uint32_t x362 = mulx_u32(x9, x21);
uint32_t x364, uint32_t x365 = mulx_u32(x9, x20);
uint32_t x367, uint8_t x368 = addcarryx_u32(0x0, x350, x352);
uint32_t x370, uint8_t x371 = addcarryx_u32(x368, x353, x355);
uint32_t x373, uint8_t x374 = addcarryx_u32(x371, x356, x358);
uint32_t x376, uint8_t x377 = addcarryx_u32(x374, x359, x361);
uint32_t x379, uint8_t x380 = addcarryx_u32(x377, x362, x364);
uint32_t x382, uint8_t _ = addcarryx_u32(0x0, x380, x365);
uint32_t x385, uint8_t x386 = addcarryx_u32(0x0, x330, x349);
uint32_t x388, uint8_t x389 = addcarryx_u32(x386, x333, x367);
uint32_t x391, uint8_t x392 = addcarryx_u32(x389, x336, x370);
uint32_t x394, uint8_t x395 = addcarryx_u32(x392, x339, x373);
uint32_t x397, uint8_t x398 = addcarryx_u32(x395, x342, x376);
uint32_t x400, uint8_t x401 = addcarryx_u32(x398, x345, x379);
uint32_t x403, uint8_t x404 = addcarryx_u32(x401, x347, x382);
uint32_t x406, uint32_t _ = mulx_u32(x385, 0xcccccccd);
uint32_t x409, uint32_t x410 = mulx_u32(x406, 0xfffffffb);
uint32_t x412, uint32_t x413 = mulx_u32(x406, 0xffffffff);
uint32_t x415, uint32_t x416 = mulx_u32(x406, 0xffffffff);
uint32_t x418, uint32_t x419 = mulx_u32(x406, 0xffffffff);
uint32_t x421, uint32_t x422 = mulx_u32(x406, 0xffffffff);
uint32_t x424, uint8_t x425 = mulx_u32_out_u8(x406, 0x3f);
uint32_t x427, uint8_t x428 = addcarryx_u32(0x0, x410, x412);
uint32_t x430, uint8_t x431 = addcarryx_u32(x428, x413, x415);
uint32_t x433, uint8_t x434 = addcarryx_u32(x431, x416, x418);
uint32_t x436, uint8_t x437 = addcarryx_u32(x434, x419, x421);
uint32_t x439, uint8_t x440 = addcarryx_u32(x437, x422, x424);
uint8_t x441 = (x440 + x425);
uint32_t _, uint8_t x444 = addcarryx_u32(0x0, x385, x409);
uint32_t x446, uint8_t x447 = addcarryx_u32(x444, x388, x427);
uint32_t x449, uint8_t x450 = addcarryx_u32(x447, x391, x430);
uint32_t x452, uint8_t x453 = addcarryx_u32(x450, x394, x433);
uint32_t x455, uint8_t x456 = addcarryx_u32(x453, x397, x436);
uint32_t x458, uint8_t x459 = addcarryx_u32(x456, x400, x439);
uint32_t x461, uint8_t x462 = addcarryx_u32(x459, x403, x441);
uint8_t x463 = (x462 + x404);
uint32_t x465, uint32_t x466 = mulx_u32(x11, x13);
uint32_t x468, uint32_t x469 = mulx_u32(x11, x15);
uint32_t x471, uint32_t x472 = mulx_u32(x11, x17);
uint32_t x474, uint32_t x475 = mulx_u32(x11, x19);
uint32_t x477, uint32_t x478 = mulx_u32(x11, x21);
uint32_t x480, uint32_t x481 = mulx_u32(x11, x20);
uint32_t x483, uint8_t x484 = addcarryx_u32(0x0, x466, x468);
uint32_t x486, uint8_t x487 = addcarryx_u32(x484, x469, x471);
uint32_t x489, uint8_t x490 = addcarryx_u32(x487, x472, x474);
uint32_t x492, uint8_t x493 = addcarryx_u32(x490, x475, x477);
uint32_t x495, uint8_t x496 = addcarryx_u32(x493, x478, x480);
uint32_t x498, uint8_t _ = addcarryx_u32(0x0, x496, x481);
uint32_t x501, uint8_t x502 = addcarryx_u32(0x0, x446, x465);
uint32_t x504, uint8_t x505 = addcarryx_u32(x502, x449, x483);
uint32_t x507, uint8_t x508 = addcarryx_u32(x505, x452, x486);
uint32_t x510, uint8_t x511 = addcarryx_u32(x508, x455, x489);
uint32_t x513, uint8_t x514 = addcarryx_u32(x511, x458, x492);
uint32_t x516, uint8_t x517 = addcarryx_u32(x514, x461, x495);
uint32_t x519, uint8_t x520 = addcarryx_u32(x517, x463, x498);
uint32_t x522, uint32_t _ = mulx_u32(x501, 0xcccccccd);
uint32_t x525, uint32_t x526 = mulx_u32(x522, 0xfffffffb);
uint32_t x528, uint32_t x529 = mulx_u32(x522, 0xffffffff);
uint32_t x531, uint32_t x532 = mulx_u32(x522, 0xffffffff);
uint32_t x534, uint32_t x535 = mulx_u32(x522, 0xffffffff);
uint32_t x537, uint32_t x538 = mulx_u32(x522, 0xffffffff);
uint32_t x540, uint8_t x541 = mulx_u32_out_u8(x522, 0x3f);
uint32_t x543, uint8_t x544 = addcarryx_u32(0x0, x526, x528);
uint32_t x546, uint8_t x547 = addcarryx_u32(x544, x529, x531);
uint32_t x549, uint8_t x550 = addcarryx_u32(x547, x532, x534);
uint32_t x552, uint8_t x553 = addcarryx_u32(x550, x535, x537);
uint32_t x555, uint8_t x556 = addcarryx_u32(x553, x538, x540);
uint8_t x557 = (x556 + x541);
uint32_t _, uint8_t x560 = addcarryx_u32(0x0, x501, x525);
uint32_t x562, uint8_t x563 = addcarryx_u32(x560, x504, x543);
uint32_t x565, uint8_t x566 = addcarryx_u32(x563, x507, x546);
uint32_t x568, uint8_t x569 = addcarryx_u32(x566, x510, x549);
uint32_t x571, uint8_t x572 = addcarryx_u32(x569, x513, x552);
uint32_t x574, uint8_t x575 = addcarryx_u32(x572, x516, x555);
uint32_t x577, uint8_t x578 = addcarryx_u32(x575, x519, x557);
uint8_t x579 = (x578 + x520);
uint32_t x581, uint32_t x582 = mulx_u32(x10, x13);
uint32_t x584, uint32_t x585 = mulx_u32(x10, x15);
uint32_t x587, uint32_t x588 = mulx_u32(x10, x17);
uint32_t x590, uint32_t x591 = mulx_u32(x10, x19);
uint32_t x593, uint32_t x594 = mulx_u32(x10, x21);
uint32_t x596, uint32_t x597 = mulx_u32(x10, x20);
uint32_t x599, uint8_t x600 = addcarryx_u32(0x0, x582, x584);
uint32_t x602, uint8_t x603 = addcarryx_u32(x600, x585, x587);
uint32_t x605, uint8_t x606 = addcarryx_u32(x603, x588, x590);
uint32_t x608, uint8_t x609 = addcarryx_u32(x606, x591, x593);
uint32_t x611, uint8_t x612 = addcarryx_u32(x609, x594, x596);
uint32_t x614, uint8_t _ = addcarryx_u32(0x0, x612, x597);
uint32_t x617, uint8_t x618 = addcarryx_u32(0x0, x562, x581);
uint32_t x620, uint8_t x621 = addcarryx_u32(x618, x565, x599);
uint32_t x623, uint8_t x624 = addcarryx_u32(x621, x568, x602);
uint32_t x626, uint8_t x627 = addcarryx_u32(x624, x571, x605);
uint32_t x629, uint8_t x630 = addcarryx_u32(x627, x574, x608);
uint32_t x632, uint8_t x633 = addcarryx_u32(x630, x577, x611);
uint32_t x635, uint8_t x636 = addcarryx_u32(x633, x579, x614);
uint32_t x638, uint32_t _ = mulx_u32(x617, 0xcccccccd);
uint32_t x641, uint32_t x642 = mulx_u32(x638, 0xfffffffb);
uint32_t x644, uint32_t x645 = mulx_u32(x638, 0xffffffff);
uint32_t x647, uint32_t x648 = mulx_u32(x638, 0xffffffff);
uint32_t x650, uint32_t x651 = mulx_u32(x638, 0xffffffff);
uint32_t x653, uint32_t x654 = mulx_u32(x638, 0xffffffff);
uint32_t x656, uint8_t x657 = mulx_u32_out_u8(x638, 0x3f);
uint32_t x659, uint8_t x660 = addcarryx_u32(0x0, x642, x644);
uint32_t x662, uint8_t x663 = addcarryx_u32(x660, x645, x647);
uint32_t x665, uint8_t x666 = addcarryx_u32(x663, x648, x650);
uint32_t x668, uint8_t x669 = addcarryx_u32(x666, x651, x653);
uint32_t x671, uint8_t x672 = addcarryx_u32(x669, x654, x656);
uint8_t x673 = (x672 + x657);
uint32_t _, uint8_t x676 = addcarryx_u32(0x0, x617, x641);
uint32_t x678, uint8_t x679 = addcarryx_u32(x676, x620, x659);
uint32_t x681, uint8_t x682 = addcarryx_u32(x679, x623, x662);
uint32_t x684, uint8_t x685 = addcarryx_u32(x682, x626, x665);
uint32_t x687, uint8_t x688 = addcarryx_u32(x685, x629, x668);
uint32_t x690, uint8_t x691 = addcarryx_u32(x688, x632, x671);
uint32_t x693, uint8_t x694 = addcarryx_u32(x691, x635, x673);
uint8_t x695 = (x694 + x636);
uint32_t x697, uint8_t x698 = subborrow_u32(0x0, x678, 0xfffffffb);
uint32_t x700, uint8_t x701 = subborrow_u32(x698, x681, 0xffffffff);
uint32_t x703, uint8_t x704 = subborrow_u32(x701, x684, 0xffffffff);
uint32_t x706, uint8_t x707 = subborrow_u32(x704, x687, 0xffffffff);
uint32_t x709, uint8_t x710 = subborrow_u32(x707, x690, 0xffffffff);
uint32_t x712, uint8_t x713 = subborrow_u32(x710, x693, 0x3f);
uint32_t _, uint8_t x716 = subborrow_u32(x713, x695, 0x0);
(cmovznz32(x716, x712, x693), cmovznz32(x716, x709, x690), cmovznz32(x716, x706, x687), cmovznz32(x716, x703, x684), cmovznz32(x716, x700, x681), cmovznz32(x716, x697, x678))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t) -> uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

Argument scope is [function_scope]
