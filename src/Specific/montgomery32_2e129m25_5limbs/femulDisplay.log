mul = λ var : Z.Syntax.base_type → Type,
λ '(x8, x9, x7, x5, x3, (x16, x17, x15, x13, x11))%core,
uint32_t x19, uint32_t x20 = mulx_u32(x3, x11);
uint32_t x22, uint32_t x23 = mulx_u32(x3, x13);
uint32_t x25, uint32_t x26 = mulx_u32(x3, x15);
uint32_t x28, uint32_t x29 = mulx_u32(x3, x17);
uint32_t x31, uint32_t x32 = mulx_u32(x3, x16);
uint32_t x34, uint8_t x35 = addcarryx_u32(0x0, x20, x22);
uint32_t x37, uint8_t x38 = addcarryx_u32(x35, x23, x25);
uint32_t x40, uint8_t x41 = addcarryx_u32(x38, x26, x28);
uint32_t x43, uint8_t x44 = addcarryx_u32(x41, x29, x31);
uint32_t x46, uint8_t _ = addcarryx_u32(0x0, x44, x32);
uint32_t x49, uint32_t _ = mulx_u32(x19, 0xc28f5c29);
uint32_t x52, uint32_t x53 = mulx_u32(x49, 0xffffffe7);
uint32_t x55, uint32_t x56 = mulx_u32(x49, 0xffffffff);
uint32_t x58, uint32_t x59 = mulx_u32(x49, 0xffffffff);
uint32_t x61, uint32_t x62 = mulx_u32(x49, 0xffffffff);
uint32_t x64, uint8_t x65 = addcarryx_u32(0x0, x53, x55);
uint32_t x67, uint8_t x68 = addcarryx_u32(x65, x56, x58);
uint32_t x70, uint8_t x71 = addcarryx_u32(x68, x59, x61);
uint32_t x73, uint8_t x74 = addcarryx_u32(x71, x62, x49);
uint32_t _, uint8_t x77 = addcarryx_u32(0x0, x19, x52);
uint32_t x79, uint8_t x80 = addcarryx_u32(x77, x34, x64);
uint32_t x82, uint8_t x83 = addcarryx_u32(x80, x37, x67);
uint32_t x85, uint8_t x86 = addcarryx_u32(x83, x40, x70);
uint32_t x88, uint8_t x89 = addcarryx_u32(x86, x43, x73);
uint32_t x91, uint8_t x92 = addcarryx_u32(x89, x46, x74);
uint32_t x94, uint32_t x95 = mulx_u32(x5, x11);
uint32_t x97, uint32_t x98 = mulx_u32(x5, x13);
uint32_t x100, uint32_t x101 = mulx_u32(x5, x15);
uint32_t x103, uint32_t x104 = mulx_u32(x5, x17);
uint32_t x106, uint32_t x107 = mulx_u32(x5, x16);
uint32_t x109, uint8_t x110 = addcarryx_u32(0x0, x95, x97);
uint32_t x112, uint8_t x113 = addcarryx_u32(x110, x98, x100);
uint32_t x115, uint8_t x116 = addcarryx_u32(x113, x101, x103);
uint32_t x118, uint8_t x119 = addcarryx_u32(x116, x104, x106);
uint32_t x121, uint8_t _ = addcarryx_u32(0x0, x119, x107);
uint32_t x124, uint8_t x125 = addcarryx_u32(0x0, x79, x94);
uint32_t x127, uint8_t x128 = addcarryx_u32(x125, x82, x109);
uint32_t x130, uint8_t x131 = addcarryx_u32(x128, x85, x112);
uint32_t x133, uint8_t x134 = addcarryx_u32(x131, x88, x115);
uint32_t x136, uint8_t x137 = addcarryx_u32(x134, x91, x118);
uint32_t x139, uint8_t x140 = addcarryx_u32(x137, x92, x121);
uint32_t x142, uint32_t _ = mulx_u32(x124, 0xc28f5c29);
uint32_t x145, uint32_t x146 = mulx_u32(x142, 0xffffffe7);
uint32_t x148, uint32_t x149 = mulx_u32(x142, 0xffffffff);
uint32_t x151, uint32_t x152 = mulx_u32(x142, 0xffffffff);
uint32_t x154, uint32_t x155 = mulx_u32(x142, 0xffffffff);
uint32_t x157, uint8_t x158 = addcarryx_u32(0x0, x146, x148);
uint32_t x160, uint8_t x161 = addcarryx_u32(x158, x149, x151);
uint32_t x163, uint8_t x164 = addcarryx_u32(x161, x152, x154);
uint32_t x166, uint8_t x167 = addcarryx_u32(x164, x155, x142);
uint32_t _, uint8_t x170 = addcarryx_u32(0x0, x124, x145);
uint32_t x172, uint8_t x173 = addcarryx_u32(x170, x127, x157);
uint32_t x175, uint8_t x176 = addcarryx_u32(x173, x130, x160);
uint32_t x178, uint8_t x179 = addcarryx_u32(x176, x133, x163);
uint32_t x181, uint8_t x182 = addcarryx_u32(x179, x136, x166);
uint32_t x184, uint8_t x185 = addcarryx_u32(x182, x139, x167);
uint8_t x186 = (x185 + x140);
uint32_t x188, uint32_t x189 = mulx_u32(x7, x11);
uint32_t x191, uint32_t x192 = mulx_u32(x7, x13);
uint32_t x194, uint32_t x195 = mulx_u32(x7, x15);
uint32_t x197, uint32_t x198 = mulx_u32(x7, x17);
uint32_t x200, uint32_t x201 = mulx_u32(x7, x16);
uint32_t x203, uint8_t x204 = addcarryx_u32(0x0, x189, x191);
uint32_t x206, uint8_t x207 = addcarryx_u32(x204, x192, x194);
uint32_t x209, uint8_t x210 = addcarryx_u32(x207, x195, x197);
uint32_t x212, uint8_t x213 = addcarryx_u32(x210, x198, x200);
uint32_t x215, uint8_t _ = addcarryx_u32(0x0, x213, x201);
uint32_t x218, uint8_t x219 = addcarryx_u32(0x0, x172, x188);
uint32_t x221, uint8_t x222 = addcarryx_u32(x219, x175, x203);
uint32_t x224, uint8_t x225 = addcarryx_u32(x222, x178, x206);
uint32_t x227, uint8_t x228 = addcarryx_u32(x225, x181, x209);
uint32_t x230, uint8_t x231 = addcarryx_u32(x228, x184, x212);
uint32_t x233, uint8_t x234 = addcarryx_u32(x231, x186, x215);
uint32_t x236, uint32_t _ = mulx_u32(x218, 0xc28f5c29);
uint32_t x239, uint32_t x240 = mulx_u32(x236, 0xffffffe7);
uint32_t x242, uint32_t x243 = mulx_u32(x236, 0xffffffff);
uint32_t x245, uint32_t x246 = mulx_u32(x236, 0xffffffff);
uint32_t x248, uint32_t x249 = mulx_u32(x236, 0xffffffff);
uint32_t x251, uint8_t x252 = addcarryx_u32(0x0, x240, x242);
uint32_t x254, uint8_t x255 = addcarryx_u32(x252, x243, x245);
uint32_t x257, uint8_t x258 = addcarryx_u32(x255, x246, x248);
uint32_t x260, uint8_t x261 = addcarryx_u32(x258, x249, x236);
uint32_t _, uint8_t x264 = addcarryx_u32(0x0, x218, x239);
uint32_t x266, uint8_t x267 = addcarryx_u32(x264, x221, x251);
uint32_t x269, uint8_t x270 = addcarryx_u32(x267, x224, x254);
uint32_t x272, uint8_t x273 = addcarryx_u32(x270, x227, x257);
uint32_t x275, uint8_t x276 = addcarryx_u32(x273, x230, x260);
uint32_t x278, uint8_t x279 = addcarryx_u32(x276, x233, x261);
uint8_t x280 = (x279 + x234);
uint32_t x282, uint32_t x283 = mulx_u32(x9, x11);
uint32_t x285, uint32_t x286 = mulx_u32(x9, x13);
uint32_t x288, uint32_t x289 = mulx_u32(x9, x15);
uint32_t x291, uint32_t x292 = mulx_u32(x9, x17);
uint32_t x294, uint32_t x295 = mulx_u32(x9, x16);
uint32_t x297, uint8_t x298 = addcarryx_u32(0x0, x283, x285);
uint32_t x300, uint8_t x301 = addcarryx_u32(x298, x286, x288);
uint32_t x303, uint8_t x304 = addcarryx_u32(x301, x289, x291);
uint32_t x306, uint8_t x307 = addcarryx_u32(x304, x292, x294);
uint32_t x309, uint8_t _ = addcarryx_u32(0x0, x307, x295);
uint32_t x312, uint8_t x313 = addcarryx_u32(0x0, x266, x282);
uint32_t x315, uint8_t x316 = addcarryx_u32(x313, x269, x297);
uint32_t x318, uint8_t x319 = addcarryx_u32(x316, x272, x300);
uint32_t x321, uint8_t x322 = addcarryx_u32(x319, x275, x303);
uint32_t x324, uint8_t x325 = addcarryx_u32(x322, x278, x306);
uint32_t x327, uint8_t x328 = addcarryx_u32(x325, x280, x309);
uint32_t x330, uint32_t _ = mulx_u32(x312, 0xc28f5c29);
uint32_t x333, uint32_t x334 = mulx_u32(x330, 0xffffffe7);
uint32_t x336, uint32_t x337 = mulx_u32(x330, 0xffffffff);
uint32_t x339, uint32_t x340 = mulx_u32(x330, 0xffffffff);
uint32_t x342, uint32_t x343 = mulx_u32(x330, 0xffffffff);
uint32_t x345, uint8_t x346 = addcarryx_u32(0x0, x334, x336);
uint32_t x348, uint8_t x349 = addcarryx_u32(x346, x337, x339);
uint32_t x351, uint8_t x352 = addcarryx_u32(x349, x340, x342);
uint32_t x354, uint8_t x355 = addcarryx_u32(x352, x343, x330);
uint32_t _, uint8_t x358 = addcarryx_u32(0x0, x312, x333);
uint32_t x360, uint8_t x361 = addcarryx_u32(x358, x315, x345);
uint32_t x363, uint8_t x364 = addcarryx_u32(x361, x318, x348);
uint32_t x366, uint8_t x367 = addcarryx_u32(x364, x321, x351);
uint32_t x369, uint8_t x370 = addcarryx_u32(x367, x324, x354);
uint32_t x372, uint8_t x373 = addcarryx_u32(x370, x327, x355);
uint8_t x374 = (x373 + x328);
uint32_t x376, uint32_t x377 = mulx_u32(x8, x11);
uint32_t x379, uint32_t x380 = mulx_u32(x8, x13);
uint32_t x382, uint32_t x383 = mulx_u32(x8, x15);
uint32_t x385, uint32_t x386 = mulx_u32(x8, x17);
uint32_t x388, uint32_t x389 = mulx_u32(x8, x16);
uint32_t x391, uint8_t x392 = addcarryx_u32(0x0, x377, x379);
uint32_t x394, uint8_t x395 = addcarryx_u32(x392, x380, x382);
uint32_t x397, uint8_t x398 = addcarryx_u32(x395, x383, x385);
uint32_t x400, uint8_t x401 = addcarryx_u32(x398, x386, x388);
uint32_t x403, uint8_t _ = addcarryx_u32(0x0, x401, x389);
uint32_t x406, uint8_t x407 = addcarryx_u32(0x0, x360, x376);
uint32_t x409, uint8_t x410 = addcarryx_u32(x407, x363, x391);
uint32_t x412, uint8_t x413 = addcarryx_u32(x410, x366, x394);
uint32_t x415, uint8_t x416 = addcarryx_u32(x413, x369, x397);
uint32_t x418, uint8_t x419 = addcarryx_u32(x416, x372, x400);
uint32_t x421, uint8_t x422 = addcarryx_u32(x419, x374, x403);
uint32_t x424, uint32_t _ = mulx_u32(x406, 0xc28f5c29);
uint32_t x427, uint32_t x428 = mulx_u32(x424, 0xffffffe7);
uint32_t x430, uint32_t x431 = mulx_u32(x424, 0xffffffff);
uint32_t x433, uint32_t x434 = mulx_u32(x424, 0xffffffff);
uint32_t x436, uint32_t x437 = mulx_u32(x424, 0xffffffff);
uint32_t x439, uint8_t x440 = addcarryx_u32(0x0, x428, x430);
uint32_t x442, uint8_t x443 = addcarryx_u32(x440, x431, x433);
uint32_t x445, uint8_t x446 = addcarryx_u32(x443, x434, x436);
uint32_t x448, uint8_t x449 = addcarryx_u32(x446, x437, x424);
uint32_t _, uint8_t x452 = addcarryx_u32(0x0, x406, x427);
uint32_t x454, uint8_t x455 = addcarryx_u32(x452, x409, x439);
uint32_t x457, uint8_t x458 = addcarryx_u32(x455, x412, x442);
uint32_t x460, uint8_t x461 = addcarryx_u32(x458, x415, x445);
uint32_t x463, uint8_t x464 = addcarryx_u32(x461, x418, x448);
uint32_t x466, uint8_t x467 = addcarryx_u32(x464, x421, x449);
uint8_t x468 = (x467 + x422);
uint32_t x470, uint8_t x471 = subborrow_u32(0x0, x454, 0xffffffe7);
uint32_t x473, uint8_t x474 = subborrow_u32(x471, x457, 0xffffffff);
uint32_t x476, uint8_t x477 = subborrow_u32(x474, x460, 0xffffffff);
uint32_t x479, uint8_t x480 = subborrow_u32(x477, x463, 0xffffffff);
uint32_t x482, uint8_t x483 = subborrow_u32(x480, x466, 0x1);
uint32_t _, uint8_t x486 = subborrow_u32(x483, x468, 0x0);
(cmovznz32(x486, x482, x466), cmovznz32(x486, x479, x463), cmovznz32(x486, x476, x460), cmovznz32(x486, x473, x457), cmovznz32(x486, x470, x454))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t) -> uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

Argument scope is [function_scope]
