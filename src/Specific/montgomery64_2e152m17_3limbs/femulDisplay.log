mul = λ var : Z.Syntax.base_type → Type,
λ '(x4, x5, x3, (x8, x9, x7))%core,
uint64_t x11, uint64_t x12 = mulx_u64(x3, x7);
uint64_t x14, uint64_t x15 = mulx_u64(x3, x9);
uint64_t x17, uint64_t x18 = mulx_u64(x3, x8);
uint64_t x20, uint8_t x21 = addcarryx_u64(0x0, x12, x14);
uint64_t x23, uint8_t x24 = addcarryx_u64(x21, x15, x17);
uint64_t x26, uint8_t _ = addcarryx_u64(0x0, x24, x18);
uint64_t x29, uint64_t _ = mulx_u64(x11, 0xf0f0f0f0f0f0f0f1L);
uint64_t x32, uint64_t x33 = mulx_u64(x29, 0xffffffffffffffefL);
uint64_t x35, uint64_t x36 = mulx_u64(x29, 0xffffffffffffffffL);
uint64_t x38, uint64_t x39 = mulx_u64(x29, 0xffffff);
uint64_t x41, uint8_t x42 = addcarryx_u64(0x0, x33, x35);
uint64_t x44, uint8_t x45 = addcarryx_u64(x42, x36, x38);
uint64_t x47, uint8_t _ = addcarryx_u64(0x0, x45, x39);
uint64_t _, uint8_t x51 = addcarryx_u64(0x0, x11, x32);
uint64_t x53, uint8_t x54 = addcarryx_u64(x51, x20, x41);
uint64_t x56, uint8_t x57 = addcarryx_u64(x54, x23, x44);
uint64_t x59, uint8_t x60 = addcarryx_u64(x57, x26, x47);
uint64_t x62, uint64_t x63 = mulx_u64(x5, x7);
uint64_t x65, uint64_t x66 = mulx_u64(x5, x9);
uint64_t x68, uint64_t x69 = mulx_u64(x5, x8);
uint64_t x71, uint8_t x72 = addcarryx_u64(0x0, x63, x65);
uint64_t x74, uint8_t x75 = addcarryx_u64(x72, x66, x68);
uint64_t x77, uint8_t _ = addcarryx_u64(0x0, x75, x69);
uint64_t x80, uint8_t x81 = addcarryx_u64(0x0, x53, x62);
uint64_t x83, uint8_t x84 = addcarryx_u64(x81, x56, x71);
uint64_t x86, uint8_t x87 = addcarryx_u64(x84, x59, x74);
uint64_t x89, uint8_t x90 = addcarryx_u64(x87, x60, x77);
uint64_t x92, uint64_t _ = mulx_u64(x80, 0xf0f0f0f0f0f0f0f1L);
uint64_t x95, uint64_t x96 = mulx_u64(x92, 0xffffffffffffffefL);
uint64_t x98, uint64_t x99 = mulx_u64(x92, 0xffffffffffffffffL);
uint64_t x101, uint64_t x102 = mulx_u64(x92, 0xffffff);
uint64_t x104, uint8_t x105 = addcarryx_u64(0x0, x96, x98);
uint64_t x107, uint8_t x108 = addcarryx_u64(x105, x99, x101);
uint64_t x110, uint8_t _ = addcarryx_u64(0x0, x108, x102);
uint64_t _, uint8_t x114 = addcarryx_u64(0x0, x80, x95);
uint64_t x116, uint8_t x117 = addcarryx_u64(x114, x83, x104);
uint64_t x119, uint8_t x120 = addcarryx_u64(x117, x86, x107);
uint64_t x122, uint8_t x123 = addcarryx_u64(x120, x89, x110);
uint8_t x124 = (x123 + x90);
uint64_t x126, uint64_t x127 = mulx_u64(x4, x7);
uint64_t x129, uint64_t x130 = mulx_u64(x4, x9);
uint64_t x132, uint64_t x133 = mulx_u64(x4, x8);
uint64_t x135, uint8_t x136 = addcarryx_u64(0x0, x127, x129);
uint64_t x138, uint8_t x139 = addcarryx_u64(x136, x130, x132);
uint64_t x141, uint8_t _ = addcarryx_u64(0x0, x139, x133);
uint64_t x144, uint8_t x145 = addcarryx_u64(0x0, x116, x126);
uint64_t x147, uint8_t x148 = addcarryx_u64(x145, x119, x135);
uint64_t x150, uint8_t x151 = addcarryx_u64(x148, x122, x138);
uint64_t x153, uint8_t x154 = addcarryx_u64(x151, x124, x141);
uint64_t x156, uint64_t _ = mulx_u64(x144, 0xf0f0f0f0f0f0f0f1L);
uint64_t x159, uint64_t x160 = mulx_u64(x156, 0xffffffffffffffefL);
uint64_t x162, uint64_t x163 = mulx_u64(x156, 0xffffffffffffffffL);
uint64_t x165, uint64_t x166 = mulx_u64(x156, 0xffffff);
uint64_t x168, uint8_t x169 = addcarryx_u64(0x0, x160, x162);
uint64_t x171, uint8_t x172 = addcarryx_u64(x169, x163, x165);
uint64_t x174, uint8_t _ = addcarryx_u64(0x0, x172, x166);
uint64_t _, uint8_t x178 = addcarryx_u64(0x0, x144, x159);
uint64_t x180, uint8_t x181 = addcarryx_u64(x178, x147, x168);
uint64_t x183, uint8_t x184 = addcarryx_u64(x181, x150, x171);
uint64_t x186, uint8_t x187 = addcarryx_u64(x184, x153, x174);
uint8_t x188 = (x187 + x154);
uint64_t x190, uint8_t x191 = subborrow_u64(0x0, x180, 0xffffffffffffffefL);
uint64_t x193, uint8_t x194 = subborrow_u64(x191, x183, 0xffffffffffffffffL);
uint64_t x196, uint8_t x197 = subborrow_u64(x194, x186, 0xffffff);
uint64_t _, uint8_t x200 = subborrow_u64(x197, x188, 0x0);
(cmovznz64(x200, x196, x186), cmovznz64(x200, x193, x183), cmovznz64(x200, x190, x180))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * (uint64_t * uint64_t * uint64_t) -> uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
