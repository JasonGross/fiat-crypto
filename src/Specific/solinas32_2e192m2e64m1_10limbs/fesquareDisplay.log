square = λ var : Z.Syntax.base_type → Type,
λ '(x16, x17, x15, x13, x11, x9, x7, x5, x3, x1)%core,
uint64_t x18 = ((uint64_t)x16 * x16);
uint64_t x19 = (((uint64_t)x17 * x16) + ((uint64_t)x16 * x17));
uint64_t x20 = (((uint64_t)x15 * x16) + (((uint64_t)x17 * x17) + ((uint64_t)x16 * x15)));
uint64_t x21 = ((0x2 * ((uint64_t)x13 * x16)) + ((0x2 * ((uint64_t)x15 * x17)) + ((0x2 * ((uint64_t)x17 * x15)) + (0x2 * ((uint64_t)x16 * x13)))));
uint64_t x22 = (((uint64_t)x11 * x16) + ((0x2 * ((uint64_t)x13 * x17)) + ((0x2 * ((uint64_t)x15 * x15)) + ((0x2 * ((uint64_t)x17 * x13)) + ((uint64_t)x16 * x11)))));
uint64_t x23 = (((uint64_t)x9 * x16) + (((uint64_t)x11 * x17) + ((0x2 * ((uint64_t)x13 * x15)) + ((0x2 * ((uint64_t)x15 * x13)) + (((uint64_t)x17 * x11) + ((uint64_t)x16 * x9))))));
uint64_t x24 = (((uint64_t)x7 * x16) + (((uint64_t)x9 * x17) + (((uint64_t)x11 * x15) + ((0x2 * ((uint64_t)x13 * x13)) + (((uint64_t)x15 * x11) + (((uint64_t)x17 * x9) + ((uint64_t)x16 * x7)))))));
uint64_t x25 = (((uint64_t)x5 * x16) + (((uint64_t)x7 * x17) + (((uint64_t)x9 * x15) + (((uint64_t)x11 * x13) + (((uint64_t)x13 * x11) + (((uint64_t)x15 * x9) + (((uint64_t)x17 * x7) + ((uint64_t)x16 * x5))))))));
uint64_t x26 = ((0x2 * ((uint64_t)x3 * x16)) + ((0x2 * ((uint64_t)x5 * x17)) + ((0x2 * ((uint64_t)x7 * x15)) + ((0x2 * ((uint64_t)x9 * x13)) + (((uint64_t)x11 * x11) + ((0x2 * ((uint64_t)x13 * x9)) + ((0x2 * ((uint64_t)x15 * x7)) + ((0x2 * ((uint64_t)x17 * x5)) + (0x2 * ((uint64_t)x16 * x3))))))))));
uint64_t x27 = (((uint64_t)x1 * x16) + ((0x2 * ((uint64_t)x3 * x17)) + ((0x2 * ((uint64_t)x5 * x15)) + ((0x2 * ((uint64_t)x7 * x13)) + (((uint64_t)x9 * x11) + (((uint64_t)x11 * x9) + ((0x2 * ((uint64_t)x13 * x7)) + ((0x2 * ((uint64_t)x15 * x5)) + ((0x2 * ((uint64_t)x17 * x3)) + ((uint64_t)x16 * x1))))))))));
uint64_t x28 = (((uint64_t)x1 * x17) + ((0x2 * ((uint64_t)x3 * x15)) + ((0x2 * ((uint64_t)x5 * x13)) + (((uint64_t)x7 * x11) + (((uint64_t)x9 * x9) + (((uint64_t)x11 * x7) + ((0x2 * ((uint64_t)x13 * x5)) + ((0x2 * ((uint64_t)x15 * x3)) + ((uint64_t)x17 * x1)))))))));
uint64_t x29 = (((uint64_t)x1 * x15) + ((0x2 * ((uint64_t)x3 * x13)) + (((uint64_t)x5 * x11) + (((uint64_t)x7 * x9) + (((uint64_t)x9 * x7) + (((uint64_t)x11 * x5) + ((0x2 * ((uint64_t)x13 * x3)) + ((uint64_t)x15 * x1))))))));
uint64_t x30 = (((uint64_t)x1 * x13) + (((uint64_t)x3 * x11) + (((uint64_t)x5 * x9) + (((uint64_t)x7 * x7) + (((uint64_t)x9 * x5) + (((uint64_t)x11 * x3) + ((uint64_t)x13 * x1)))))));
uint64_t x31 = (((uint64_t)x1 * x11) + ((0x2 * ((uint64_t)x3 * x9)) + ((0x2 * ((uint64_t)x5 * x7)) + ((0x2 * ((uint64_t)x7 * x5)) + ((0x2 * ((uint64_t)x9 * x3)) + ((uint64_t)x11 * x1))))));
uint64_t x32 = (((uint64_t)x1 * x9) + ((0x2 * ((uint64_t)x3 * x7)) + ((0x2 * ((uint64_t)x5 * x5)) + ((0x2 * ((uint64_t)x7 * x3)) + ((uint64_t)x9 * x1)))));
uint64_t x33 = (((uint64_t)x1 * x7) + ((0x2 * ((uint64_t)x3 * x5)) + ((0x2 * ((uint64_t)x5 * x3)) + ((uint64_t)x7 * x1))));
uint64_t x34 = (((uint64_t)x1 * x5) + ((0x2 * ((uint64_t)x3 * x3)) + ((uint64_t)x5 * x1)));
uint64_t x35 = (((uint64_t)x1 * x3) + ((uint64_t)x3 * x1));
uint64_t x36 = ((uint64_t)x1 * x1);
ℤ x37 = (x27 +ℤ ((0x80 * x20) +ℤ ((0x4000000 *ℤ x19) +ℤ (0x200000000000 *ℤ x18))));
uint64_t x38 = (x28 + (x18 + (0x40 * x21)));
uint64_t x39 = (x29 + (x19 + (0x40 * x22)));
uint64_t x40 = (x30 + (x20 + (0x40 * x23)));
uint64_t x41 = (x31 + (x21 + (0x80 * x24)));
uint64_t x42 = (x32 + (x22 + (0x80 * x25)));
uint64_t x43 = (x33 + (x23 + (0x40 * x26)));
uint64_t x44 = (x34 + x24);
uint64_t x45 = (x35 + x25);
uint64_t x46 = (x36 + x26);
uint32_t x47 = (uint32_t) (x44 >> 0x13);
uint32_t x48 = ((uint32_t)x44 & 0x7ffff);
ℤ x49 = (x37 >>ℤ 0x13);
uint32_t x50 = (x37 & 0x7ffff);
ℤ x51 = ((0x80000 *ℤ x49) +ℤ x50);
ℤ x52 = (x51 >>ℤ 0x13);
uint32_t x53 = (x51 & 0x7ffff);
ℤ x54 = ((x47 + x43) +ℤ (0x40 *ℤ x52));
uint64_t x55 = (x54 >> 0x13);
uint32_t x56 = (x54 & 0x7ffff);
ℤ x57 = (x46 +ℤ x52);
uint64_t x58 = (x57 >> 0x14);
uint32_t x59 = (x57 & 0xfffff);
uint64_t x60 = (x55 + x42);
uint64_t x61 = (x60 >> 0x13);
uint32_t x62 = ((uint32_t)x60 & 0x7ffff);
uint64_t x63 = (x58 + x45);
uint32_t x64 = (uint32_t) (x63 >> 0x13);
uint32_t x65 = ((uint32_t)x63 & 0x7ffff);
uint64_t x66 = (x61 + x41);
uint32_t x67 = (uint32_t) (x66 >> 0x14);
uint32_t x68 = ((uint32_t)x66 & 0xfffff);
uint32_t x69 = (x64 + x48);
uint32_t x70 = (x69 >> 0x13);
uint32_t x71 = (x69 & 0x7ffff);
uint64_t x72 = (x67 + x40);
uint32_t x73 = (uint32_t) (x72 >> 0x13);
uint32_t x74 = ((uint32_t)x72 & 0x7ffff);
uint64_t x75 = (x73 + x39);
uint32_t x76 = (uint32_t) (x75 >> 0x13);
uint32_t x77 = ((uint32_t)x75 & 0x7ffff);
uint64_t x78 = (x76 + x38);
uint32_t x79 = (uint32_t) (x78 >> 0x13);
uint32_t x80 = ((uint32_t)x78 & 0x7ffff);
uint32_t x81 = (x79 + x53);
uint32_t x82 = (x81 >> 0x13);
uint32_t x83 = (x81 & 0x7ffff);
uint32_t x84 = ((0x80000 * x82) + x83);
uint32_t x85 = (x84 >> 0x13);
uint32_t x86 = (x84 & 0x7ffff);
uint32_t x87 = ((x70 + x56) + (0x40 * x85));
uint32_t x88 = (x87 >> 0x13);
uint32_t x89 = (x87 & 0x7ffff);
uint32_t x90 = (x59 + x85);
uint32_t x91 = (x90 >> 0x14);
uint32_t x92 = (x90 & 0xfffff);
return (Return x86, Return x80, Return x77, Return x74, Return x68, (x88 + x62), Return x89, Return x71, (x91 + x65), Return x92)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t -> uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

Argument scope is [function_scope]
