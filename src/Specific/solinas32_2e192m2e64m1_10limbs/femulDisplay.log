mul = λ var : Z.Syntax.base_type → Type,
λ '(x18, x19, x17, x15, x13, x11, x9, x7, x5, x3, (x36, x37, x35, x33, x31, x29, x27, x25, x23, x21))%core,
uint64_t x38 = ((uint64_t)x18 * x36);
uint64_t x39 = (((uint64_t)x19 * x36) + ((uint64_t)x18 * x37));
uint64_t x40 = (((uint64_t)x17 * x36) + (((uint64_t)x19 * x37) + ((uint64_t)x18 * x35)));
uint64_t x41 = ((0x2 * ((uint64_t)x15 * x36)) + ((0x2 * ((uint64_t)x17 * x37)) + ((0x2 * ((uint64_t)x19 * x35)) + (0x2 * ((uint64_t)x18 * x33)))));
uint64_t x42 = (((uint64_t)x13 * x36) + ((0x2 * ((uint64_t)x15 * x37)) + ((0x2 * ((uint64_t)x17 * x35)) + ((0x2 * ((uint64_t)x19 * x33)) + ((uint64_t)x18 * x31)))));
uint64_t x43 = (((uint64_t)x11 * x36) + (((uint64_t)x13 * x37) + ((0x2 * ((uint64_t)x15 * x35)) + ((0x2 * ((uint64_t)x17 * x33)) + (((uint64_t)x19 * x31) + ((uint64_t)x18 * x29))))));
uint64_t x44 = (((uint64_t)x9 * x36) + (((uint64_t)x11 * x37) + (((uint64_t)x13 * x35) + ((0x2 * ((uint64_t)x15 * x33)) + (((uint64_t)x17 * x31) + (((uint64_t)x19 * x29) + ((uint64_t)x18 * x27)))))));
uint64_t x45 = (((uint64_t)x7 * x36) + (((uint64_t)x9 * x37) + (((uint64_t)x11 * x35) + (((uint64_t)x13 * x33) + (((uint64_t)x15 * x31) + (((uint64_t)x17 * x29) + (((uint64_t)x19 * x27) + ((uint64_t)x18 * x25))))))));
uint64_t x46 = ((0x2 * ((uint64_t)x5 * x36)) + ((0x2 * ((uint64_t)x7 * x37)) + ((0x2 * ((uint64_t)x9 * x35)) + ((0x2 * ((uint64_t)x11 * x33)) + (((uint64_t)x13 * x31) + ((0x2 * ((uint64_t)x15 * x29)) + ((0x2 * ((uint64_t)x17 * x27)) + ((0x2 * ((uint64_t)x19 * x25)) + (0x2 * ((uint64_t)x18 * x23))))))))));
uint64_t x47 = (((uint64_t)x3 * x36) + ((0x2 * ((uint64_t)x5 * x37)) + ((0x2 * ((uint64_t)x7 * x35)) + ((0x2 * ((uint64_t)x9 * x33)) + (((uint64_t)x11 * x31) + (((uint64_t)x13 * x29) + ((0x2 * ((uint64_t)x15 * x27)) + ((0x2 * ((uint64_t)x17 * x25)) + ((0x2 * ((uint64_t)x19 * x23)) + ((uint64_t)x18 * x21))))))))));
uint64_t x48 = (((uint64_t)x3 * x37) + ((0x2 * ((uint64_t)x5 * x35)) + ((0x2 * ((uint64_t)x7 * x33)) + (((uint64_t)x9 * x31) + (((uint64_t)x11 * x29) + (((uint64_t)x13 * x27) + ((0x2 * ((uint64_t)x15 * x25)) + ((0x2 * ((uint64_t)x17 * x23)) + ((uint64_t)x19 * x21)))))))));
uint64_t x49 = (((uint64_t)x3 * x35) + ((0x2 * ((uint64_t)x5 * x33)) + (((uint64_t)x7 * x31) + (((uint64_t)x9 * x29) + (((uint64_t)x11 * x27) + (((uint64_t)x13 * x25) + ((0x2 * ((uint64_t)x15 * x23)) + ((uint64_t)x17 * x21))))))));
uint64_t x50 = (((uint64_t)x3 * x33) + (((uint64_t)x5 * x31) + (((uint64_t)x7 * x29) + (((uint64_t)x9 * x27) + (((uint64_t)x11 * x25) + (((uint64_t)x13 * x23) + ((uint64_t)x15 * x21)))))));
uint64_t x51 = (((uint64_t)x3 * x31) + ((0x2 * ((uint64_t)x5 * x29)) + ((0x2 * ((uint64_t)x7 * x27)) + ((0x2 * ((uint64_t)x9 * x25)) + ((0x2 * ((uint64_t)x11 * x23)) + ((uint64_t)x13 * x21))))));
uint64_t x52 = (((uint64_t)x3 * x29) + ((0x2 * ((uint64_t)x5 * x27)) + ((0x2 * ((uint64_t)x7 * x25)) + ((0x2 * ((uint64_t)x9 * x23)) + ((uint64_t)x11 * x21)))));
uint64_t x53 = (((uint64_t)x3 * x27) + ((0x2 * ((uint64_t)x5 * x25)) + ((0x2 * ((uint64_t)x7 * x23)) + ((uint64_t)x9 * x21))));
uint64_t x54 = (((uint64_t)x3 * x25) + ((0x2 * ((uint64_t)x5 * x23)) + ((uint64_t)x7 * x21)));
uint64_t x55 = (((uint64_t)x3 * x23) + ((uint64_t)x5 * x21));
uint64_t x56 = ((uint64_t)x3 * x21);
ℤ x57 = (x47 +ℤ ((0x80 * x40) +ℤ ((0x4000000 *ℤ x39) +ℤ (0x200000000000 *ℤ x38))));
uint64_t x58 = (x48 + (x38 + (0x40 * x41)));
uint64_t x59 = (x49 + (x39 + (0x40 * x42)));
uint64_t x60 = (x50 + (x40 + (0x40 * x43)));
uint64_t x61 = (x51 + (x41 + (0x80 * x44)));
uint64_t x62 = (x52 + (x42 + (0x80 * x45)));
uint64_t x63 = (x53 + (x43 + (0x40 * x46)));
uint64_t x64 = (x54 + x44);
uint64_t x65 = (x55 + x45);
uint64_t x66 = (x56 + x46);
uint32_t x67 = (uint32_t) (x64 >> 0x13);
uint32_t x68 = ((uint32_t)x64 & 0x7ffff);
ℤ x69 = (x57 >>ℤ 0x13);
uint32_t x70 = (x57 & 0x7ffff);
ℤ x71 = ((0x80000 *ℤ x69) +ℤ x70);
ℤ x72 = (x71 >>ℤ 0x13);
uint32_t x73 = (x71 & 0x7ffff);
ℤ x74 = ((x67 + x63) +ℤ (0x40 *ℤ x72));
uint64_t x75 = (x74 >> 0x13);
uint32_t x76 = (x74 & 0x7ffff);
ℤ x77 = (x66 +ℤ x72);
uint64_t x78 = (x77 >> 0x14);
uint32_t x79 = (x77 & 0xfffff);
uint64_t x80 = (x75 + x62);
uint64_t x81 = (x80 >> 0x13);
uint32_t x82 = ((uint32_t)x80 & 0x7ffff);
uint64_t x83 = (x78 + x65);
uint32_t x84 = (uint32_t) (x83 >> 0x13);
uint32_t x85 = ((uint32_t)x83 & 0x7ffff);
uint64_t x86 = (x81 + x61);
uint32_t x87 = (uint32_t) (x86 >> 0x14);
uint32_t x88 = ((uint32_t)x86 & 0xfffff);
uint32_t x89 = (x84 + x68);
uint32_t x90 = (x89 >> 0x13);
uint32_t x91 = (x89 & 0x7ffff);
uint64_t x92 = (x87 + x60);
uint32_t x93 = (uint32_t) (x92 >> 0x13);
uint32_t x94 = ((uint32_t)x92 & 0x7ffff);
uint64_t x95 = (x93 + x59);
uint32_t x96 = (uint32_t) (x95 >> 0x13);
uint32_t x97 = ((uint32_t)x95 & 0x7ffff);
uint64_t x98 = (x96 + x58);
uint32_t x99 = (uint32_t) (x98 >> 0x13);
uint32_t x100 = ((uint32_t)x98 & 0x7ffff);
uint32_t x101 = (x99 + x73);
uint32_t x102 = (x101 >> 0x13);
uint32_t x103 = (x101 & 0x7ffff);
uint32_t x104 = ((0x80000 * x102) + x103);
uint32_t x105 = (x104 >> 0x13);
uint32_t x106 = (x104 & 0x7ffff);
uint32_t x107 = ((x90 + x76) + (0x40 * x105));
uint32_t x108 = (x107 >> 0x13);
uint32_t x109 = (x107 & 0x7ffff);
uint32_t x110 = (x79 + x105);
uint32_t x111 = (x110 >> 0x14);
uint32_t x112 = (x110 & 0xfffff);
return (Return x106, Return x100, Return x97, Return x94, Return x88, (x108 + x82), Return x109, Return x91, (x111 + x85), Return x112)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t) -> uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

Argument scope is [function_scope]
