square = λ var : Z.Syntax.base_type → Type,
λ '(x22, x23, x21, x19, x17, x15, x13, x11, x9, x7, x5, x3, x1)%core,
uint64_t x24 = (0x2 * ((uint64_t)x22 * x22));
uint64_t x25 = ((0x2 * ((uint64_t)x23 * x22)) + (0x2 * ((uint64_t)x22 * x23)));
uint64_t x26 = (((uint64_t)x21 * x22) + (((uint64_t)x23 * x23) + ((uint64_t)x22 * x21)));
uint64_t x27 = ((0x2 * ((uint64_t)x19 * x22)) + (((uint64_t)x21 * x23) + (((uint64_t)x23 * x21) + (0x2 * ((uint64_t)x22 * x19)))));
uint64_t x28 = ((0x2 * ((uint64_t)x17 * x22)) + ((0x2 * ((uint64_t)x19 * x23)) + (((uint64_t)x21 * x21) + ((0x2 * ((uint64_t)x23 * x19)) + (0x2 * ((uint64_t)x22 * x17))))));
uint64_t x29 = (((uint64_t)x15 * x22) + (((uint64_t)x17 * x23) + (((uint64_t)x19 * x21) + (((uint64_t)x21 * x19) + (((uint64_t)x23 * x17) + ((uint64_t)x22 * x15))))));
uint64_t x30 = ((0x2 * ((uint64_t)x13 * x22)) + (((uint64_t)x15 * x23) + (((uint64_t)x17 * x21) + ((0x2 * ((uint64_t)x19 * x19)) + (((uint64_t)x21 * x17) + (((uint64_t)x23 * x15) + (0x2 * ((uint64_t)x22 * x13))))))));
uint64_t x31 = ((0x2 * ((uint64_t)x11 * x22)) + ((0x2 * ((uint64_t)x13 * x23)) + (((uint64_t)x15 * x21) + ((0x2 * ((uint64_t)x17 * x19)) + ((0x2 * ((uint64_t)x19 * x17)) + (((uint64_t)x21 * x15) + ((0x2 * ((uint64_t)x23 * x13)) + (0x2 * ((uint64_t)x22 * x11)))))))));
uint64_t x32 = (((uint64_t)x9 * x22) + (((uint64_t)x11 * x23) + (((uint64_t)x13 * x21) + (((uint64_t)x15 * x19) + (((uint64_t)x17 * x17) + (((uint64_t)x19 * x15) + (((uint64_t)x21 * x13) + (((uint64_t)x23 * x11) + ((uint64_t)x22 * x9)))))))));
uint64_t x33 = ((0x2 * ((uint64_t)x7 * x22)) + (((uint64_t)x9 * x23) + (((uint64_t)x11 * x21) + ((0x2 * ((uint64_t)x13 * x19)) + (((uint64_t)x15 * x17) + (((uint64_t)x17 * x15) + ((0x2 * ((uint64_t)x19 * x13)) + (((uint64_t)x21 * x11) + (((uint64_t)x23 * x9) + (0x2 * ((uint64_t)x22 * x7)))))))))));
uint64_t x34 = ((0x2 * ((uint64_t)x5 * x22)) + ((0x2 * ((uint64_t)x7 * x23)) + (((uint64_t)x9 * x21) + ((0x2 * ((uint64_t)x11 * x19)) + ((0x2 * ((uint64_t)x13 * x17)) + (((uint64_t)x15 * x15) + ((0x2 * ((uint64_t)x17 * x13)) + ((0x2 * ((uint64_t)x19 * x11)) + (((uint64_t)x21 * x9) + ((0x2 * ((uint64_t)x23 * x7)) + (0x2 * ((uint64_t)x22 * x5))))))))))));
uint64_t x35 = ((0x2 * ((uint64_t)x3 * x22)) + ((0x2 * ((uint64_t)x5 * x23)) + ((0x2 * ((uint64_t)x7 * x21)) + ((0x2 * ((uint64_t)x9 * x19)) + ((0x2 * ((uint64_t)x11 * x17)) + ((0x2 * ((uint64_t)x13 * x15)) + ((0x2 * ((uint64_t)x15 * x13)) + ((0x2 * ((uint64_t)x17 * x11)) + ((0x2 * ((uint64_t)x19 * x9)) + ((0x2 * ((uint64_t)x21 * x7)) + ((0x2 * ((uint64_t)x23 * x5)) + (0x2 * ((uint64_t)x22 * x3)))))))))))));
uint64_t x36 = (((uint64_t)x1 * x22) + (((uint64_t)x3 * x23) + (((uint64_t)x5 * x21) + ((0x2 * ((uint64_t)x7 * x19)) + (((uint64_t)x9 * x17) + (((uint64_t)x11 * x15) + ((0x2 * ((uint64_t)x13 * x13)) + (((uint64_t)x15 * x11) + (((uint64_t)x17 * x9) + ((0x2 * ((uint64_t)x19 * x7)) + (((uint64_t)x21 * x5) + (((uint64_t)x23 * x3) + ((uint64_t)x22 * x1)))))))))))));
uint64_t x37 = (((uint64_t)x1 * x23) + (((uint64_t)x3 * x21) + ((0x2 * ((uint64_t)x5 * x19)) + ((0x2 * ((uint64_t)x7 * x17)) + (((uint64_t)x9 * x15) + ((0x2 * ((uint64_t)x11 * x13)) + ((0x2 * ((uint64_t)x13 * x11)) + (((uint64_t)x15 * x9) + ((0x2 * ((uint64_t)x17 * x7)) + ((0x2 * ((uint64_t)x19 * x5)) + (((uint64_t)x21 * x3) + ((uint64_t)x23 * x1))))))))))));
uint64_t x38 = (((uint64_t)x1 * x21) + ((0x2 * ((uint64_t)x3 * x19)) + ((0x2 * ((uint64_t)x5 * x17)) + ((0x2 * ((uint64_t)x7 * x15)) + ((0x2 * ((uint64_t)x9 * x13)) + ((0x2 * ((uint64_t)x11 * x11)) + ((0x2 * ((uint64_t)x13 * x9)) + ((0x2 * ((uint64_t)x15 * x7)) + ((0x2 * ((uint64_t)x17 * x5)) + ((0x2 * ((uint64_t)x19 * x3)) + ((uint64_t)x21 * x1)))))))))));
uint64_t x39 = (((uint64_t)x1 * x19) + (((uint64_t)x3 * x17) + (((uint64_t)x5 * x15) + ((0x2 * ((uint64_t)x7 * x13)) + (((uint64_t)x9 * x11) + (((uint64_t)x11 * x9) + ((0x2 * ((uint64_t)x13 * x7)) + (((uint64_t)x15 * x5) + (((uint64_t)x17 * x3) + ((uint64_t)x19 * x1))))))))));
uint64_t x40 = (((uint64_t)x1 * x17) + (((uint64_t)x3 * x15) + ((0x2 * ((uint64_t)x5 * x13)) + ((0x2 * ((uint64_t)x7 * x11)) + (((uint64_t)x9 * x9) + ((0x2 * ((uint64_t)x11 * x7)) + ((0x2 * ((uint64_t)x13 * x5)) + (((uint64_t)x15 * x3) + ((uint64_t)x17 * x1)))))))));
uint64_t x41 = (((uint64_t)x1 * x15) + ((0x2 * ((uint64_t)x3 * x13)) + ((0x2 * ((uint64_t)x5 * x11)) + ((0x2 * ((uint64_t)x7 * x9)) + ((0x2 * ((uint64_t)x9 * x7)) + ((0x2 * ((uint64_t)x11 * x5)) + ((0x2 * ((uint64_t)x13 * x3)) + ((uint64_t)x15 * x1))))))));
uint64_t x42 = (((uint64_t)x1 * x13) + (((uint64_t)x3 * x11) + (((uint64_t)x5 * x9) + ((0x2 * ((uint64_t)x7 * x7)) + (((uint64_t)x9 * x5) + (((uint64_t)x11 * x3) + ((uint64_t)x13 * x1)))))));
uint64_t x43 = (((uint64_t)x1 * x11) + (((uint64_t)x3 * x9) + ((0x2 * ((uint64_t)x5 * x7)) + ((0x2 * ((uint64_t)x7 * x5)) + (((uint64_t)x9 * x3) + ((uint64_t)x11 * x1))))));
uint64_t x44 = (((uint64_t)x1 * x9) + ((0x2 * ((uint64_t)x3 * x7)) + ((0x2 * ((uint64_t)x5 * x5)) + ((0x2 * ((uint64_t)x7 * x3)) + ((uint64_t)x9 * x1)))));
uint64_t x45 = (((uint64_t)x1 * x7) + (((uint64_t)x3 * x5) + (((uint64_t)x5 * x3) + ((uint64_t)x7 * x1))));
uint64_t x46 = (((uint64_t)x1 * x5) + (((uint64_t)x3 * x3) + ((uint64_t)x5 * x1)));
uint64_t x47 = (((uint64_t)x1 * x3) + ((uint64_t)x3 * x1));
uint64_t x48 = ((uint64_t)x1 * x1);
uint64_t x49 = (x36 + (0x1000 * x24));
uint64_t x50 = (x37 + ((0x3d1 * x24) + (0x1000 * x25)));
uint64_t x51 = (x38 + ((0x3d1 * x25) + (0x2000 * x26)));
uint64_t x52 = (x39 + ((0x3d1 * x26) + (0x1000 * x27)));
uint64_t x53 = (x40 + ((0x3d1 * x27) + (0x1000 * x28)));
uint64_t x54 = (x41 + ((0x3d1 * x28) + (0x2000 * x29)));
uint64_t x55 = (x42 + ((0x3d1 * x29) + (0x1000 * x30)));
uint64_t x56 = (x43 + ((0x3d1 * x30) + (0x1000 * x31)));
uint64_t x57 = (x44 + ((0x3d1 * x31) + (0x2000 * x32)));
uint64_t x58 = (x45 + ((0x3d1 * x32) + (0x1000 * x33)));
uint64_t x59 = (x46 + ((0x3d1 * x33) + (0x1000 * x34)));
uint64_t x60 = (x47 + ((0x3d1 * x34) + (0x1000 * x35)));
uint64_t x61 = (x48 + (0x3d1 * x35));
uint64_t x62 = (x61 >> 0x14);
uint32_t x63 = ((uint32_t)x61 & 0xfffff);
uint64_t x64 = (x49 >> 0x13);
uint32_t x65 = ((uint32_t)x49 & 0x7ffff);
uint64_t x66 = ((0x80000 * x64) + x65);
uint64_t x67 = (x66 >> 0x13);
uint32_t x68 = ((uint32_t)x66 & 0x7ffff);
uint64_t x69 = ((x62 + x60) + (0x1000 * x67));
uint64_t x70 = (x69 >> 0x14);
uint32_t x71 = ((uint32_t)x69 & 0xfffff);
uint64_t x72 = (x63 + (0x3d1 * x67));
uint32_t x73 = (uint32_t) (x72 >> 0x14);
uint32_t x74 = ((uint32_t)x72 & 0xfffff);
uint64_t x75 = (x70 + x59);
uint64_t x76 = (x75 >> 0x14);
uint32_t x77 = ((uint32_t)x75 & 0xfffff);
uint64_t x78 = (x76 + x58);
uint64_t x79 = (x78 >> 0x13);
uint32_t x80 = ((uint32_t)x78 & 0x7ffff);
uint64_t x81 = (x79 + x57);
uint64_t x82 = (x81 >> 0x14);
uint32_t x83 = ((uint32_t)x81 & 0xfffff);
uint64_t x84 = (x82 + x56);
uint64_t x85 = (x84 >> 0x14);
uint32_t x86 = ((uint32_t)x84 & 0xfffff);
uint64_t x87 = (x85 + x55);
uint64_t x88 = (x87 >> 0x13);
uint32_t x89 = ((uint32_t)x87 & 0x7ffff);
uint64_t x90 = (x88 + x54);
uint64_t x91 = (x90 >> 0x14);
uint32_t x92 = ((uint32_t)x90 & 0xfffff);
uint64_t x93 = (x91 + x53);
uint64_t x94 = (x93 >> 0x14);
uint32_t x95 = ((uint32_t)x93 & 0xfffff);
uint64_t x96 = (x94 + x52);
uint64_t x97 = (x96 >> 0x13);
uint32_t x98 = ((uint32_t)x96 & 0x7ffff);
uint64_t x99 = (x97 + x51);
uint64_t x100 = (x99 >> 0x14);
uint32_t x101 = ((uint32_t)x99 & 0xfffff);
uint64_t x102 = (x100 + x50);
uint64_t x103 = (x102 >> 0x14);
uint32_t x104 = ((uint32_t)x102 & 0xfffff);
uint64_t x105 = (x103 + x68);
uint32_t x106 = (uint32_t) (x105 >> 0x13);
uint32_t x107 = ((uint32_t)x105 & 0x7ffff);
uint64_t x108 = (((uint64_t)0x80000 * x106) + x107);
uint32_t x109 = (uint32_t) (x108 >> 0x13);
uint32_t x110 = ((uint32_t)x108 & 0x7ffff);
uint32_t x111 = ((x73 + x71) + (0x1000 * x109));
uint32_t x112 = (x111 >> 0x14);
uint32_t x113 = (x111 & 0xfffff);
uint32_t x114 = (x74 + (0x3d1 * x109));
uint32_t x115 = (x114 >> 0x14);
uint32_t x116 = (x114 & 0xfffff);
return (Return x110, Return x104, Return x101, Return x98, Return x95, Return x92, Return x89, Return x86, Return x83, Return x80, (x112 + x77), (x115 + x113), Return x116)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t -> uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

Argument scope is [function_scope]
