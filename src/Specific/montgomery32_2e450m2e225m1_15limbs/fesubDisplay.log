sub = λ var : Z.Syntax.base_type → Type,
λ '(x28, x29, x27, x25, x23, x21, x19, x17, x15, x13, x11, x9, x7, x5, x3, (x56, x57, x55, x53, x51, x49, x47, x45, x43, x41, x39, x37, x35, x33, x31))%core,
uint32_t x59, uint8_t x60 = subborrow_u32(0x0, x3, x31);
uint32_t x62, uint8_t x63 = subborrow_u32(x60, x5, x33);
uint32_t x65, uint8_t x66 = subborrow_u32(x63, x7, x35);
uint32_t x68, uint8_t x69 = subborrow_u32(x66, x9, x37);
uint32_t x71, uint8_t x72 = subborrow_u32(x69, x11, x39);
uint32_t x74, uint8_t x75 = subborrow_u32(x72, x13, x41);
uint32_t x77, uint8_t x78 = subborrow_u32(x75, x15, x43);
uint32_t x80, uint8_t x81 = subborrow_u32(x78, x17, x45);
uint32_t x83, uint8_t x84 = subborrow_u32(x81, x19, x47);
uint32_t x86, uint8_t x87 = subborrow_u32(x84, x21, x49);
uint32_t x89, uint8_t x90 = subborrow_u32(x87, x23, x51);
uint32_t x92, uint8_t x93 = subborrow_u32(x90, x25, x53);
uint32_t x95, uint8_t x96 = subborrow_u32(x93, x27, x55);
uint32_t x98, uint8_t x99 = subborrow_u32(x96, x29, x57);
uint32_t x101, uint8_t x102 = subborrow_u32(x99, x28, x56);
uint32_t x103 = cmovznz32(x102, 0x0, 0xffffffff);
uint32_t x105, uint8_t x106 = addcarryx_u32(0x0, x59, (x103 & 0xffffffff));
uint32_t x108, uint8_t x109 = addcarryx_u32(x106, x62, (x103 & 0xffffffff));
uint32_t x111, uint8_t x112 = addcarryx_u32(x109, x65, (x103 & 0xffffffff));
uint32_t x114, uint8_t x115 = addcarryx_u32(x112, x68, (x103 & 0xffffffff));
uint32_t x117, uint8_t x118 = addcarryx_u32(x115, x71, (x103 & 0xffffffff));
uint32_t x120, uint8_t x121 = addcarryx_u32(x118, x74, (x103 & 0xffffffff));
uint32_t x123, uint8_t x124 = addcarryx_u32(x121, x77, (x103 & 0xffffffff));
uint32_t x126, uint8_t x127 = addcarryx_u32(x124, x80, (x103 & 0xfffffffd));
uint32_t x129, uint8_t x130 = addcarryx_u32(x127, x83, (x103 & 0xffffffff));
uint32_t x132, uint8_t x133 = addcarryx_u32(x130, x86, (x103 & 0xffffffff));
uint32_t x135, uint8_t x136 = addcarryx_u32(x133, x89, (x103 & 0xffffffff));
uint32_t x138, uint8_t x139 = addcarryx_u32(x136, x92, (x103 & 0xffffffff));
uint32_t x141, uint8_t x142 = addcarryx_u32(x139, x95, (x103 & 0xffffffff));
uint32_t x144, uint8_t x145 = addcarryx_u32(x142, x98, (x103 & 0xffffffff));
uint32_t x147, uint8_t _ = addcarryx_u32(x145, x101, ((uint8_t)x103 & 0x3));
(Return x147, Return x144, Return x141, Return x138, Return x135, Return x132, Return x129, Return x126, Return x123, Return x120, Return x117, Return x114, Return x111, Return x108, Return x105)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t) -> uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

Argument scope is [function_scope]
