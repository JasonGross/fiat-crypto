freeze = λ var : Z.Syntax.base_type → Type,
λ '(x6, x7, x5, x3, x1)%core,
uint64_t x9, uint64_t x10 = Op (Z.Syntax.SubWithGetBorrow 38 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (0x0, Return x1, 0x3fffffffe7);
uint64_t x12, uint64_t x13 = Op (Z.Syntax.SubWithGetBorrow 38 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x10, Return x3, 0x3fffffffff);
uint64_t x15, uint64_t x16 = Op (Z.Syntax.SubWithGetBorrow 38 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x13, Return x5, 0x3fffffffff);
uint64_t x18, uint64_t x19 = Op (Z.Syntax.SubWithGetBorrow 38 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x16, Return x7, 0x3fffffffff);
uint64_t x21, uint64_t x22 = Op (Z.Syntax.SubWithGetBorrow 37 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x19, Return x6, 0x1fffffffff);
uint64_t x23 = cmovznz64(x22, 0x0, 0xffffffffffffffffL);
uint64_t x24 = (x23 & 0x3fffffffe7);
uint64_t x26, uint64_t x27 = Op (Z.Syntax.AddWithGetCarry 38 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (0x0, Return x9, Return x24);
uint64_t x28 = (x23 & 0x3fffffffff);
uint64_t x30, uint64_t x31 = Op (Z.Syntax.AddWithGetCarry 38 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x27, Return x12, Return x28);
uint64_t x32 = (x23 & 0x3fffffffff);
uint64_t x34, uint64_t x35 = Op (Z.Syntax.AddWithGetCarry 38 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x31, Return x15, Return x32);
uint64_t x36 = (x23 & 0x3fffffffff);
uint64_t x38, uint64_t x39 = Op (Z.Syntax.AddWithGetCarry 38 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x35, Return x18, Return x36);
uint64_t x40 = (x23 & 0x1fffffffff);
uint64_t x42, uint64_t _ = Op (Z.Syntax.AddWithGetCarry 37 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x39, Return x21, Return x40);
(Return x42, Return x38, Return x34, Return x30, Return x26)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t -> uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
