square = λ var : Z.Syntax.base_type → Type,
λ '(x16, x17, x15, x13, x11, x9, x7, x5, x3, x1)%core,
uint64_t x18 = ((uint64_t)x1 * x1);
uint64_t x19 = ((uint64_t)(0x2 * x1) * x3);
uint64_t x20 = (0x2 * (((uint64_t)x3 * x3) + ((uint64_t)x1 * x5)));
uint64_t x21 = (0x2 * (((uint64_t)x3 * x5) + ((uint64_t)x1 * x7)));
uint64_t x22 = ((((uint64_t)x5 * x5) + ((uint64_t)(0x4 * x3) * x7)) + ((uint64_t)(0x2 * x1) * x9));
uint64_t x23 = (0x2 * ((((uint64_t)x5 * x7) + ((uint64_t)x3 * x9)) + ((uint64_t)x1 * x11)));
uint64_t x24 = (0x2 * (((((uint64_t)x7 * x7) + ((uint64_t)x5 * x9)) + ((uint64_t)x1 * x13)) + ((uint64_t)(0x2 * x3) * x11)));
uint64_t x25 = (0x2 * (((((uint64_t)x7 * x9) + ((uint64_t)x5 * x11)) + ((uint64_t)x3 * x13)) + ((uint64_t)x1 * x15)));
uint64_t x26 = (((uint64_t)x9 * x9) + (0x2 * ((((uint64_t)x5 * x13) + ((uint64_t)x1 * x17)) + (0x2 * (((uint64_t)x3 * x15) + ((uint64_t)x7 * x11))))));
uint64_t x27 = (0x2 * ((((((uint64_t)x9 * x11) + ((uint64_t)x7 * x13)) + ((uint64_t)x5 * x15)) + ((uint64_t)x3 * x17)) + ((uint64_t)x1 * x16)));
uint64_t x28 = (0x2 * (((((uint64_t)x11 * x11) + ((uint64_t)x9 * x13)) + ((uint64_t)x5 * x17)) + (0x2 * (((uint64_t)x7 * x15) + ((uint64_t)x3 * x16)))));
uint64_t x29 = (0x2 * (((((uint64_t)x11 * x13) + ((uint64_t)x9 * x15)) + ((uint64_t)x7 * x17)) + ((uint64_t)x5 * x16)));
uint64_t x30 = (((uint64_t)x13 * x13) + (0x2 * (((uint64_t)x9 * x17) + (0x2 * (((uint64_t)x11 * x15) + ((uint64_t)x7 * x16))))));
uint64_t x31 = (0x2 * ((((uint64_t)x13 * x15) + ((uint64_t)x11 * x17)) + ((uint64_t)x9 * x16)));
uint64_t x32 = (0x2 * ((((uint64_t)x15 * x15) + ((uint64_t)x13 * x17)) + ((uint64_t)(0x2 * x11) * x16)));
uint64_t x33 = (0x2 * (((uint64_t)x15 * x17) + ((uint64_t)x13 * x16)));
uint64_t x34 = (((uint64_t)x17 * x17) + ((uint64_t)(0x4 * x15) * x16));
uint64_t x35 = ((uint64_t)(0x2 * x17) * x16);
uint64_t x36 = ((uint64_t)(0x2 * x16) * x16);
uint64_t x37 = (x26 + (x36 << 0x4));
uint64_t x38 = (x37 + (x36 << 0x1));
uint64_t x39 = (x38 + x36);
uint64_t x40 = (x25 + (x35 << 0x4));
uint64_t x41 = (x40 + (x35 << 0x1));
uint64_t x42 = (x41 + x35);
uint64_t x43 = (x24 + (x34 << 0x4));
uint64_t x44 = (x43 + (x34 << 0x1));
uint64_t x45 = (x44 + x34);
uint64_t x46 = (x23 + (x33 << 0x4));
uint64_t x47 = (x46 + (x33 << 0x1));
uint64_t x48 = (x47 + x33);
uint64_t x49 = (x22 + (x32 << 0x4));
uint64_t x50 = (x49 + (x32 << 0x1));
uint64_t x51 = (x50 + x32);
uint64_t x52 = (x21 + (x31 << 0x4));
uint64_t x53 = (x52 + (x31 << 0x1));
uint64_t x54 = (x53 + x31);
uint64_t x55 = (x20 + (x30 << 0x4));
uint64_t x56 = (x55 + (x30 << 0x1));
uint64_t x57 = (x56 + x30);
uint64_t x58 = (x19 + (x29 << 0x4));
uint64_t x59 = (x58 + (x29 << 0x1));
uint64_t x60 = (x59 + x29);
uint64_t x61 = (x18 + (x28 << 0x4));
uint64_t x62 = (x61 + (x28 << 0x1));
uint64_t x63 = (x62 + x28);
uint64_t x64 = (x63 >> 0x1a);
uint32_t x65 = ((uint32_t)x63 & 0x3ffffff);
uint64_t x66 = (x64 + x60);
uint64_t x67 = (x66 >> 0x19);
uint32_t x68 = ((uint32_t)x66 & 0x1ffffff);
uint64_t x69 = (x67 + x57);
uint64_t x70 = (x69 >> 0x1a);
uint32_t x71 = ((uint32_t)x69 & 0x3ffffff);
uint64_t x72 = (x70 + x54);
uint64_t x73 = (x72 >> 0x19);
uint32_t x74 = ((uint32_t)x72 & 0x1ffffff);
uint64_t x75 = (x73 + x51);
uint64_t x76 = (x75 >> 0x1a);
uint32_t x77 = ((uint32_t)x75 & 0x3ffffff);
uint64_t x78 = (x76 + x48);
uint64_t x79 = (x78 >> 0x19);
uint32_t x80 = ((uint32_t)x78 & 0x1ffffff);
uint64_t x81 = (x79 + x45);
uint64_t x82 = (x81 >> 0x1a);
uint32_t x83 = ((uint32_t)x81 & 0x3ffffff);
uint64_t x84 = (x82 + x42);
uint64_t x85 = (x84 >> 0x19);
uint32_t x86 = ((uint32_t)x84 & 0x1ffffff);
uint64_t x87 = (x85 + x39);
uint64_t x88 = (x87 >> 0x1a);
uint32_t x89 = ((uint32_t)x87 & 0x3ffffff);
uint64_t x90 = (x88 + x27);
uint64_t x91 = (x90 >> 0x19);
uint32_t x92 = ((uint32_t)x90 & 0x1ffffff);
uint64_t x93 = (x65 + (0x13 * x91));
uint32_t x94 = (uint32_t) (x93 >> 0x1a);
uint32_t x95 = ((uint32_t)x93 & 0x3ffffff);
uint32_t x96 = (x94 + x68);
uint32_t x97 = (x96 >> 0x19);
uint32_t x98 = (x96 & 0x1ffffff);
return (Return x92, Return x89, Return x86, Return x83, Return x80, Return x77, Return x74, (x97 + x71), Return x98, Return x95)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t -> uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

Argument scope is [function_scope]
