sub = λ var : Z.Syntax.base_type → Type,
λ '(x6, x7, x5, x3, (x12, x13, x11, x9))%core,
(((0x1fffffffe + x6) - x12), ((0x3fffffffe + x7) - x13), ((0x1fffffffe + x5) - x11), ((0x3fffffff6 + x3) - x9))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t * (uint64_t * uint64_t * uint64_t * uint64_t) -> uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
