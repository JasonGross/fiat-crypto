freeze = λ var : Z.Syntax.base_type → Type,
λ '(x4, x5, x3, x1)%core,
uint64_t x7, uint64_t x8 = Op (Z.Syntax.SubWithGetBorrow 33 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (0x0, Return x1, 0x1fffffffb);
uint64_t x10, uint64_t x11 = Op (Z.Syntax.SubWithGetBorrow 32 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x8, Return x3, 0xffffffff);
uint64_t x13, uint64_t x14 = Op (Z.Syntax.SubWithGetBorrow 33 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x11, Return x5, 0x1ffffffff);
uint64_t x16, uint64_t x17 = Op (Z.Syntax.SubWithGetBorrow 32 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x14, Return x4, 0xffffffff);
uint64_t x18 = cmovznz64(x17, 0x0, 0xffffffffffffffffL);
uint64_t x19 = (x18 & 0x1fffffffb);
uint64_t x21, uint64_t x22 = Op (Z.Syntax.AddWithGetCarry 33 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (0x0, Return x7, Return x19);
uint64_t x23 = (x18 & 0xffffffff);
uint64_t x25, uint64_t x26 = Op (Z.Syntax.AddWithGetCarry 32 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x22, Return x10, Return x23);
uint64_t x27 = (x18 & 0x1ffffffff);
uint64_t x29, uint64_t x30 = Op (Z.Syntax.AddWithGetCarry 33 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x26, Return x13, Return x27);
uint64_t x31 = (x18 & 0xffffffff);
uint64_t x33, uint64_t _ = Op (Z.Syntax.AddWithGetCarry 32 (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6) (Syntax.TWord 6)) (Return x30, Return x16, Return x31);
(Return x33, Return x29, Return x25, Return x21)
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint64_t * uint64_t * uint64_t * uint64_t -> uint64_t * uint64_t * uint64_t * uint64_t)

Argument scope is [function_scope]
