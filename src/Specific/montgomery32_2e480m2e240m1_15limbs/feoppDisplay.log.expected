λ x : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x27, x28, x26, x24, x22, x20, x18, x16, x14, x12, x10, x8, x6, x4, x2)%core,
 uint32_t x30, uint8_t/*bool*/ x31 = subborrow_u32(0x0, 0x0, x2);
 uint32_t x33, uint8_t/*bool*/ x34 = subborrow_u32(x31, 0x0, x4);
 uint32_t x36, uint8_t/*bool*/ x37 = subborrow_u32(x34, 0x0, x6);
 uint32_t x39, uint8_t/*bool*/ x40 = subborrow_u32(x37, 0x0, x8);
 uint32_t x42, uint8_t/*bool*/ x43 = subborrow_u32(x40, 0x0, x10);
 uint32_t x45, uint8_t/*bool*/ x46 = subborrow_u32(x43, 0x0, x12);
 uint32_t x48, uint8_t/*bool*/ x49 = subborrow_u32(x46, 0x0, x14);
 uint32_t x51, uint8_t/*bool*/ x52 = subborrow_u32(x49, 0x0, x16);
 uint32_t x54, uint8_t/*bool*/ x55 = subborrow_u32(x52, 0x0, x18);
 uint32_t x57, uint8_t/*bool*/ x58 = subborrow_u32(x55, 0x0, x20);
 uint32_t x60, uint8_t/*bool*/ x61 = subborrow_u32(x58, 0x0, x22);
 uint32_t x63, uint8_t/*bool*/ x64 = subborrow_u32(x61, 0x0, x24);
 uint32_t x66, uint8_t/*bool*/ x67 = subborrow_u32(x64, 0x0, x26);
 uint32_t x69, uint8_t/*bool*/ x70 = subborrow_u32(x67, 0x0, x28);
 uint32_t x72, uint8_t/*bool*/ x73 = subborrow_u32(x70, 0x0, x27);
 uint32_t x74 = cmovznz32(x73, 0x0, 0xffffffff);
 uint32_t x75 = (x74 & 0xffffffff);
 uint32_t x77, uint8_t/*bool*/ x78 = addcarryx_u32(0x0, x30, x75);
 uint32_t x79 = (x74 & 0xffffffff);
 uint32_t x81, uint8_t/*bool*/ x82 = addcarryx_u32(x78, x33, x79);
 uint32_t x83 = (x74 & 0xffffffff);
 uint32_t x85, uint8_t/*bool*/ x86 = addcarryx_u32(x82, x36, x83);
 uint32_t x87 = (x74 & 0xffffffff);
 uint32_t x89, uint8_t/*bool*/ x90 = addcarryx_u32(x86, x39, x87);
 uint32_t x91 = (x74 & 0xffffffff);
 uint32_t x93, uint8_t/*bool*/ x94 = addcarryx_u32(x90, x42, x91);
 uint32_t x95 = (x74 & 0xffffffff);
 uint32_t x97, uint8_t/*bool*/ x98 = addcarryx_u32(x94, x45, x95);
 uint32_t x99 = (x74 & 0xffffffff);
 uint32_t x101, uint8_t/*bool*/ x102 = addcarryx_u32(x98, x48, x99);
 uint32_t x103 = (x74 & 0xfffeffff);
 uint32_t x105, uint8_t/*bool*/ x106 = addcarryx_u32(x102, x51, x103);
 uint32_t x107 = (x74 & 0xffffffff);
 uint32_t x109, uint8_t/*bool*/ x110 = addcarryx_u32(x106, x54, x107);
 uint32_t x111 = (x74 & 0xffffffff);
 uint32_t x113, uint8_t/*bool*/ x114 = addcarryx_u32(x110, x57, x111);
 uint32_t x115 = (x74 & 0xffffffff);
 uint32_t x117, uint8_t/*bool*/ x118 = addcarryx_u32(x114, x60, x115);
 uint32_t x119 = (x74 & 0xffffffff);
 uint32_t x121, uint8_t/*bool*/ x122 = addcarryx_u32(x118, x63, x119);
 uint32_t x123 = (x74 & 0xffffffff);
 uint32_t x125, uint8_t/*bool*/ x126 = addcarryx_u32(x122, x66, x123);
 uint32_t x127 = (x74 & 0xffffffff);
 uint32_t x129, uint8_t/*bool*/ x130 = addcarryx_u32(x126, x69, x127);
 uint32_t x131 = (x74 & 0xffffffff);
 uint32_t x133, uint8_t/*bool*/ _ = addcarryx_u32(x130, x72, x131);
 (Return x133, Return x129, Return x125, Return x121, Return x117, Return x113, Return x109, Return x105, Return x101, Return x97, Return x93, Return x89, Return x85, Return x81, Return x77))
x
     : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)
