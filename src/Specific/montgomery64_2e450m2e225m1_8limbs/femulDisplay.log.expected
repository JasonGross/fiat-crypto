λ x x0 : word64 * word64 * word64 * word64 * word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x16, x17, x15, x13, x11, x9, x7, x5, (x30, x31, x29, x27, x25, x23, x21, x19))%core,
 uint64_t x33, uint64_t x34 = mulx_u64(x5, x19);
 uint64_t x36, uint64_t x37 = mulx_u64(x5, x21);
 uint64_t x39, uint64_t x40 = mulx_u64(x5, x23);
 uint64_t x42, uint64_t x43 = mulx_u64(x5, x25);
 uint64_t x45, uint64_t x46 = mulx_u64(x5, x27);
 uint64_t x48, uint64_t x49 = mulx_u64(x5, x29);
 uint64_t x51, uint64_t x52 = mulx_u64(x5, x31);
 uint64_t x54, uint64_t x55 = mulx_u64(x5, x30);
 uint64_t x57, uint8_t/*bool*/ x58 = addcarryx_u64(0x0, x34, x36);
 uint64_t x60, uint8_t/*bool*/ x61 = addcarryx_u64(x58, x37, x39);
 uint64_t x63, uint8_t/*bool*/ x64 = addcarryx_u64(x61, x40, x42);
 uint64_t x66, uint8_t/*bool*/ x67 = addcarryx_u64(x64, x43, x45);
 uint64_t x69, uint8_t/*bool*/ x70 = addcarryx_u64(x67, x46, x48);
 uint64_t x72, uint8_t/*bool*/ x73 = addcarryx_u64(x70, x49, x51);
 uint64_t x75, uint8_t/*bool*/ x76 = addcarryx_u64(x73, x52, x54);
 uint64_t x78, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x76, x55);
 uint64_t x81, uint64_t x82 = mulx_u64(x33, 0xffffffffffffffffL);
 uint64_t x84, uint64_t x85 = mulx_u64(x33, 0xffffffffffffffffL);
 uint64_t x87, uint64_t x88 = mulx_u64(x33, 0xffffffffffffffffL);
 uint64_t x90, uint64_t x91 = mulx_u64(x33, 0xfffffffdffffffffL);
 uint64_t x93, uint64_t x94 = mulx_u64(x33, 0xffffffffffffffffL);
 uint64_t x96, uint64_t x97 = mulx_u64(x33, 0xffffffffffffffffL);
 uint64_t x99, uint64_t x100 = mulx_u64(x33, 0xffffffffffffffffL);
 uint64_t x102, uint8_t x103 = mulx_u64_out_u8(x33, 0x3);
 uint64_t x105, uint8_t/*bool*/ x106 = addcarryx_u64(0x0, x82, x84);
 uint64_t x108, uint8_t/*bool*/ x109 = addcarryx_u64(x106, x85, x87);
 uint64_t x111, uint8_t/*bool*/ x112 = addcarryx_u64(x109, x88, x90);
 uint64_t x114, uint8_t/*bool*/ x115 = addcarryx_u64(x112, x91, x93);
 uint64_t x117, uint8_t/*bool*/ x118 = addcarryx_u64(x115, x94, x96);
 uint64_t x120, uint8_t/*bool*/ x121 = addcarryx_u64(x118, x97, x99);
 uint64_t x123, uint8_t/*bool*/ x124 = addcarryx_u64(x121, x100, x102);
 uint8_t x125 = ((uint8_t)0x0 + x124);
 uint8_t x126 = (x125 + x103);
 uint64_t _, uint8_t/*bool*/ x129 = addcarryx_u64(0x0, x33, x81);
 uint64_t x131, uint8_t/*bool*/ x132 = addcarryx_u64(x129, x57, x105);
 uint64_t x134, uint8_t/*bool*/ x135 = addcarryx_u64(x132, x60, x108);
 uint64_t x137, uint8_t/*bool*/ x138 = addcarryx_u64(x135, x63, x111);
 uint64_t x140, uint8_t/*bool*/ x141 = addcarryx_u64(x138, x66, x114);
 uint64_t x143, uint8_t/*bool*/ x144 = addcarryx_u64(x141, x69, x117);
 uint64_t x146, uint8_t/*bool*/ x147 = addcarryx_u64(x144, x72, x120);
 uint64_t x149, uint8_t/*bool*/ x150 = addcarryx_u64(x147, x75, x123);
 uint64_t x152, uint8_t/*bool*/ x153 = addcarryx_u64(x150, x78, x126);
 uint8_t/*bool*/ x154 = (1&(x153 + 0x0));
 uint64_t x156, uint64_t x157 = mulx_u64(x7, x19);
 uint64_t x159, uint64_t x160 = mulx_u64(x7, x21);
 uint64_t x162, uint64_t x163 = mulx_u64(x7, x23);
 uint64_t x165, uint64_t x166 = mulx_u64(x7, x25);
 uint64_t x168, uint64_t x169 = mulx_u64(x7, x27);
 uint64_t x171, uint64_t x172 = mulx_u64(x7, x29);
 uint64_t x174, uint64_t x175 = mulx_u64(x7, x31);
 uint64_t x177, uint64_t x178 = mulx_u64(x7, x30);
 uint64_t x180, uint8_t/*bool*/ x181 = addcarryx_u64(0x0, x157, x159);
 uint64_t x183, uint8_t/*bool*/ x184 = addcarryx_u64(x181, x160, x162);
 uint64_t x186, uint8_t/*bool*/ x187 = addcarryx_u64(x184, x163, x165);
 uint64_t x189, uint8_t/*bool*/ x190 = addcarryx_u64(x187, x166, x168);
 uint64_t x192, uint8_t/*bool*/ x193 = addcarryx_u64(x190, x169, x171);
 uint64_t x195, uint8_t/*bool*/ x196 = addcarryx_u64(x193, x172, x174);
 uint64_t x198, uint8_t/*bool*/ x199 = addcarryx_u64(x196, x175, x177);
 uint64_t x201, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x199, x178);
 uint64_t x204, uint8_t/*bool*/ x205 = addcarryx_u64(0x0, x131, x156);
 uint64_t x207, uint8_t/*bool*/ x208 = addcarryx_u64(x205, x134, x180);
 uint64_t x210, uint8_t/*bool*/ x211 = addcarryx_u64(x208, x137, x183);
 uint64_t x213, uint8_t/*bool*/ x214 = addcarryx_u64(x211, x140, x186);
 uint64_t x216, uint8_t/*bool*/ x217 = addcarryx_u64(x214, x143, x189);
 uint64_t x219, uint8_t/*bool*/ x220 = addcarryx_u64(x217, x146, x192);
 uint64_t x222, uint8_t/*bool*/ x223 = addcarryx_u64(x220, x149, x195);
 uint64_t x225, uint8_t/*bool*/ x226 = addcarryx_u64(x223, x152, x198);
 uint64_t x228, uint8_t/*bool*/ x229 = addcarryx_u64(x226, x154, x201);
 uint64_t x231, uint64_t x232 = mulx_u64(x204, 0xffffffffffffffffL);
 uint64_t x234, uint64_t x235 = mulx_u64(x204, 0xffffffffffffffffL);
 uint64_t x237, uint64_t x238 = mulx_u64(x204, 0xffffffffffffffffL);
 uint64_t x240, uint64_t x241 = mulx_u64(x204, 0xfffffffdffffffffL);
 uint64_t x243, uint64_t x244 = mulx_u64(x204, 0xffffffffffffffffL);
 uint64_t x246, uint64_t x247 = mulx_u64(x204, 0xffffffffffffffffL);
 uint64_t x249, uint64_t x250 = mulx_u64(x204, 0xffffffffffffffffL);
 uint64_t x252, uint8_t x253 = mulx_u64_out_u8(x204, 0x3);
 uint64_t x255, uint8_t/*bool*/ x256 = addcarryx_u64(0x0, x232, x234);
 uint64_t x258, uint8_t/*bool*/ x259 = addcarryx_u64(x256, x235, x237);
 uint64_t x261, uint8_t/*bool*/ x262 = addcarryx_u64(x259, x238, x240);
 uint64_t x264, uint8_t/*bool*/ x265 = addcarryx_u64(x262, x241, x243);
 uint64_t x267, uint8_t/*bool*/ x268 = addcarryx_u64(x265, x244, x246);
 uint64_t x270, uint8_t/*bool*/ x271 = addcarryx_u64(x268, x247, x249);
 uint64_t x273, uint8_t/*bool*/ x274 = addcarryx_u64(x271, x250, x252);
 uint8_t x275 = ((uint8_t)0x0 + x274);
 uint8_t x276 = (x275 + x253);
 uint64_t _, uint8_t/*bool*/ x279 = addcarryx_u64(0x0, x204, x231);
 uint64_t x281, uint8_t/*bool*/ x282 = addcarryx_u64(x279, x207, x255);
 uint64_t x284, uint8_t/*bool*/ x285 = addcarryx_u64(x282, x210, x258);
 uint64_t x287, uint8_t/*bool*/ x288 = addcarryx_u64(x285, x213, x261);
 uint64_t x290, uint8_t/*bool*/ x291 = addcarryx_u64(x288, x216, x264);
 uint64_t x293, uint8_t/*bool*/ x294 = addcarryx_u64(x291, x219, x267);
 uint64_t x296, uint8_t/*bool*/ x297 = addcarryx_u64(x294, x222, x270);
 uint64_t x299, uint8_t/*bool*/ x300 = addcarryx_u64(x297, x225, x273);
 uint64_t x302, uint8_t/*bool*/ x303 = addcarryx_u64(x300, x228, x276);
 uint8_t x304 = ((uint8_t)x303 + x229);
 uint64_t x306, uint64_t x307 = mulx_u64(x9, x19);
 uint64_t x309, uint64_t x310 = mulx_u64(x9, x21);
 uint64_t x312, uint64_t x313 = mulx_u64(x9, x23);
 uint64_t x315, uint64_t x316 = mulx_u64(x9, x25);
 uint64_t x318, uint64_t x319 = mulx_u64(x9, x27);
 uint64_t x321, uint64_t x322 = mulx_u64(x9, x29);
 uint64_t x324, uint64_t x325 = mulx_u64(x9, x31);
 uint64_t x327, uint64_t x328 = mulx_u64(x9, x30);
 uint64_t x330, uint8_t/*bool*/ x331 = addcarryx_u64(0x0, x307, x309);
 uint64_t x333, uint8_t/*bool*/ x334 = addcarryx_u64(x331, x310, x312);
 uint64_t x336, uint8_t/*bool*/ x337 = addcarryx_u64(x334, x313, x315);
 uint64_t x339, uint8_t/*bool*/ x340 = addcarryx_u64(x337, x316, x318);
 uint64_t x342, uint8_t/*bool*/ x343 = addcarryx_u64(x340, x319, x321);
 uint64_t x345, uint8_t/*bool*/ x346 = addcarryx_u64(x343, x322, x324);
 uint64_t x348, uint8_t/*bool*/ x349 = addcarryx_u64(x346, x325, x327);
 uint64_t x351, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x349, x328);
 uint64_t x354, uint8_t/*bool*/ x355 = addcarryx_u64(0x0, x281, x306);
 uint64_t x357, uint8_t/*bool*/ x358 = addcarryx_u64(x355, x284, x330);
 uint64_t x360, uint8_t/*bool*/ x361 = addcarryx_u64(x358, x287, x333);
 uint64_t x363, uint8_t/*bool*/ x364 = addcarryx_u64(x361, x290, x336);
 uint64_t x366, uint8_t/*bool*/ x367 = addcarryx_u64(x364, x293, x339);
 uint64_t x369, uint8_t/*bool*/ x370 = addcarryx_u64(x367, x296, x342);
 uint64_t x372, uint8_t/*bool*/ x373 = addcarryx_u64(x370, x299, x345);
 uint64_t x375, uint8_t/*bool*/ x376 = addcarryx_u64(x373, x302, x348);
 uint64_t x378, uint8_t/*bool*/ x379 = addcarryx_u64(x376, x304, x351);
 uint64_t x381, uint64_t x382 = mulx_u64(x354, 0xffffffffffffffffL);
 uint64_t x384, uint64_t x385 = mulx_u64(x354, 0xffffffffffffffffL);
 uint64_t x387, uint64_t x388 = mulx_u64(x354, 0xffffffffffffffffL);
 uint64_t x390, uint64_t x391 = mulx_u64(x354, 0xfffffffdffffffffL);
 uint64_t x393, uint64_t x394 = mulx_u64(x354, 0xffffffffffffffffL);
 uint64_t x396, uint64_t x397 = mulx_u64(x354, 0xffffffffffffffffL);
 uint64_t x399, uint64_t x400 = mulx_u64(x354, 0xffffffffffffffffL);
 uint64_t x402, uint8_t x403 = mulx_u64_out_u8(x354, 0x3);
 uint64_t x405, uint8_t/*bool*/ x406 = addcarryx_u64(0x0, x382, x384);
 uint64_t x408, uint8_t/*bool*/ x409 = addcarryx_u64(x406, x385, x387);
 uint64_t x411, uint8_t/*bool*/ x412 = addcarryx_u64(x409, x388, x390);
 uint64_t x414, uint8_t/*bool*/ x415 = addcarryx_u64(x412, x391, x393);
 uint64_t x417, uint8_t/*bool*/ x418 = addcarryx_u64(x415, x394, x396);
 uint64_t x420, uint8_t/*bool*/ x421 = addcarryx_u64(x418, x397, x399);
 uint64_t x423, uint8_t/*bool*/ x424 = addcarryx_u64(x421, x400, x402);
 uint8_t x425 = ((uint8_t)0x0 + x424);
 uint8_t x426 = (x425 + x403);
 uint64_t _, uint8_t/*bool*/ x429 = addcarryx_u64(0x0, x354, x381);
 uint64_t x431, uint8_t/*bool*/ x432 = addcarryx_u64(x429, x357, x405);
 uint64_t x434, uint8_t/*bool*/ x435 = addcarryx_u64(x432, x360, x408);
 uint64_t x437, uint8_t/*bool*/ x438 = addcarryx_u64(x435, x363, x411);
 uint64_t x440, uint8_t/*bool*/ x441 = addcarryx_u64(x438, x366, x414);
 uint64_t x443, uint8_t/*bool*/ x444 = addcarryx_u64(x441, x369, x417);
 uint64_t x446, uint8_t/*bool*/ x447 = addcarryx_u64(x444, x372, x420);
 uint64_t x449, uint8_t/*bool*/ x450 = addcarryx_u64(x447, x375, x423);
 uint64_t x452, uint8_t/*bool*/ x453 = addcarryx_u64(x450, x378, x426);
 uint8_t x454 = ((uint8_t)x453 + x379);
 uint64_t x456, uint64_t x457 = mulx_u64(x11, x19);
 uint64_t x459, uint64_t x460 = mulx_u64(x11, x21);
 uint64_t x462, uint64_t x463 = mulx_u64(x11, x23);
 uint64_t x465, uint64_t x466 = mulx_u64(x11, x25);
 uint64_t x468, uint64_t x469 = mulx_u64(x11, x27);
 uint64_t x471, uint64_t x472 = mulx_u64(x11, x29);
 uint64_t x474, uint64_t x475 = mulx_u64(x11, x31);
 uint64_t x477, uint64_t x478 = mulx_u64(x11, x30);
 uint64_t x480, uint8_t/*bool*/ x481 = addcarryx_u64(0x0, x457, x459);
 uint64_t x483, uint8_t/*bool*/ x484 = addcarryx_u64(x481, x460, x462);
 uint64_t x486, uint8_t/*bool*/ x487 = addcarryx_u64(x484, x463, x465);
 uint64_t x489, uint8_t/*bool*/ x490 = addcarryx_u64(x487, x466, x468);
 uint64_t x492, uint8_t/*bool*/ x493 = addcarryx_u64(x490, x469, x471);
 uint64_t x495, uint8_t/*bool*/ x496 = addcarryx_u64(x493, x472, x474);
 uint64_t x498, uint8_t/*bool*/ x499 = addcarryx_u64(x496, x475, x477);
 uint64_t x501, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x499, x478);
 uint64_t x504, uint8_t/*bool*/ x505 = addcarryx_u64(0x0, x431, x456);
 uint64_t x507, uint8_t/*bool*/ x508 = addcarryx_u64(x505, x434, x480);
 uint64_t x510, uint8_t/*bool*/ x511 = addcarryx_u64(x508, x437, x483);
 uint64_t x513, uint8_t/*bool*/ x514 = addcarryx_u64(x511, x440, x486);
 uint64_t x516, uint8_t/*bool*/ x517 = addcarryx_u64(x514, x443, x489);
 uint64_t x519, uint8_t/*bool*/ x520 = addcarryx_u64(x517, x446, x492);
 uint64_t x522, uint8_t/*bool*/ x523 = addcarryx_u64(x520, x449, x495);
 uint64_t x525, uint8_t/*bool*/ x526 = addcarryx_u64(x523, x452, x498);
 uint64_t x528, uint8_t/*bool*/ x529 = addcarryx_u64(x526, x454, x501);
 uint64_t x531, uint64_t x532 = mulx_u64(x504, 0xffffffffffffffffL);
 uint64_t x534, uint64_t x535 = mulx_u64(x504, 0xffffffffffffffffL);
 uint64_t x537, uint64_t x538 = mulx_u64(x504, 0xffffffffffffffffL);
 uint64_t x540, uint64_t x541 = mulx_u64(x504, 0xfffffffdffffffffL);
 uint64_t x543, uint64_t x544 = mulx_u64(x504, 0xffffffffffffffffL);
 uint64_t x546, uint64_t x547 = mulx_u64(x504, 0xffffffffffffffffL);
 uint64_t x549, uint64_t x550 = mulx_u64(x504, 0xffffffffffffffffL);
 uint64_t x552, uint8_t x553 = mulx_u64_out_u8(x504, 0x3);
 uint64_t x555, uint8_t/*bool*/ x556 = addcarryx_u64(0x0, x532, x534);
 uint64_t x558, uint8_t/*bool*/ x559 = addcarryx_u64(x556, x535, x537);
 uint64_t x561, uint8_t/*bool*/ x562 = addcarryx_u64(x559, x538, x540);
 uint64_t x564, uint8_t/*bool*/ x565 = addcarryx_u64(x562, x541, x543);
 uint64_t x567, uint8_t/*bool*/ x568 = addcarryx_u64(x565, x544, x546);
 uint64_t x570, uint8_t/*bool*/ x571 = addcarryx_u64(x568, x547, x549);
 uint64_t x573, uint8_t/*bool*/ x574 = addcarryx_u64(x571, x550, x552);
 uint8_t x575 = ((uint8_t)0x0 + x574);
 uint8_t x576 = (x575 + x553);
 uint64_t _, uint8_t/*bool*/ x579 = addcarryx_u64(0x0, x504, x531);
 uint64_t x581, uint8_t/*bool*/ x582 = addcarryx_u64(x579, x507, x555);
 uint64_t x584, uint8_t/*bool*/ x585 = addcarryx_u64(x582, x510, x558);
 uint64_t x587, uint8_t/*bool*/ x588 = addcarryx_u64(x585, x513, x561);
 uint64_t x590, uint8_t/*bool*/ x591 = addcarryx_u64(x588, x516, x564);
 uint64_t x593, uint8_t/*bool*/ x594 = addcarryx_u64(x591, x519, x567);
 uint64_t x596, uint8_t/*bool*/ x597 = addcarryx_u64(x594, x522, x570);
 uint64_t x599, uint8_t/*bool*/ x600 = addcarryx_u64(x597, x525, x573);
 uint64_t x602, uint8_t/*bool*/ x603 = addcarryx_u64(x600, x528, x576);
 uint8_t x604 = ((uint8_t)x603 + x529);
 uint64_t x606, uint64_t x607 = mulx_u64(x13, x19);
 uint64_t x609, uint64_t x610 = mulx_u64(x13, x21);
 uint64_t x612, uint64_t x613 = mulx_u64(x13, x23);
 uint64_t x615, uint64_t x616 = mulx_u64(x13, x25);
 uint64_t x618, uint64_t x619 = mulx_u64(x13, x27);
 uint64_t x621, uint64_t x622 = mulx_u64(x13, x29);
 uint64_t x624, uint64_t x625 = mulx_u64(x13, x31);
 uint64_t x627, uint64_t x628 = mulx_u64(x13, x30);
 uint64_t x630, uint8_t/*bool*/ x631 = addcarryx_u64(0x0, x607, x609);
 uint64_t x633, uint8_t/*bool*/ x634 = addcarryx_u64(x631, x610, x612);
 uint64_t x636, uint8_t/*bool*/ x637 = addcarryx_u64(x634, x613, x615);
 uint64_t x639, uint8_t/*bool*/ x640 = addcarryx_u64(x637, x616, x618);
 uint64_t x642, uint8_t/*bool*/ x643 = addcarryx_u64(x640, x619, x621);
 uint64_t x645, uint8_t/*bool*/ x646 = addcarryx_u64(x643, x622, x624);
 uint64_t x648, uint8_t/*bool*/ x649 = addcarryx_u64(x646, x625, x627);
 uint64_t x651, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x649, x628);
 uint64_t x654, uint8_t/*bool*/ x655 = addcarryx_u64(0x0, x581, x606);
 uint64_t x657, uint8_t/*bool*/ x658 = addcarryx_u64(x655, x584, x630);
 uint64_t x660, uint8_t/*bool*/ x661 = addcarryx_u64(x658, x587, x633);
 uint64_t x663, uint8_t/*bool*/ x664 = addcarryx_u64(x661, x590, x636);
 uint64_t x666, uint8_t/*bool*/ x667 = addcarryx_u64(x664, x593, x639);
 uint64_t x669, uint8_t/*bool*/ x670 = addcarryx_u64(x667, x596, x642);
 uint64_t x672, uint8_t/*bool*/ x673 = addcarryx_u64(x670, x599, x645);
 uint64_t x675, uint8_t/*bool*/ x676 = addcarryx_u64(x673, x602, x648);
 uint64_t x678, uint8_t/*bool*/ x679 = addcarryx_u64(x676, x604, x651);
 uint64_t x681, uint64_t x682 = mulx_u64(x654, 0xffffffffffffffffL);
 uint64_t x684, uint64_t x685 = mulx_u64(x654, 0xffffffffffffffffL);
 uint64_t x687, uint64_t x688 = mulx_u64(x654, 0xffffffffffffffffL);
 uint64_t x690, uint64_t x691 = mulx_u64(x654, 0xfffffffdffffffffL);
 uint64_t x693, uint64_t x694 = mulx_u64(x654, 0xffffffffffffffffL);
 uint64_t x696, uint64_t x697 = mulx_u64(x654, 0xffffffffffffffffL);
 uint64_t x699, uint64_t x700 = mulx_u64(x654, 0xffffffffffffffffL);
 uint64_t x702, uint8_t x703 = mulx_u64_out_u8(x654, 0x3);
 uint64_t x705, uint8_t/*bool*/ x706 = addcarryx_u64(0x0, x682, x684);
 uint64_t x708, uint8_t/*bool*/ x709 = addcarryx_u64(x706, x685, x687);
 uint64_t x711, uint8_t/*bool*/ x712 = addcarryx_u64(x709, x688, x690);
 uint64_t x714, uint8_t/*bool*/ x715 = addcarryx_u64(x712, x691, x693);
 uint64_t x717, uint8_t/*bool*/ x718 = addcarryx_u64(x715, x694, x696);
 uint64_t x720, uint8_t/*bool*/ x721 = addcarryx_u64(x718, x697, x699);
 uint64_t x723, uint8_t/*bool*/ x724 = addcarryx_u64(x721, x700, x702);
 uint8_t x725 = ((uint8_t)0x0 + x724);
 uint8_t x726 = (x725 + x703);
 uint64_t _, uint8_t/*bool*/ x729 = addcarryx_u64(0x0, x654, x681);
 uint64_t x731, uint8_t/*bool*/ x732 = addcarryx_u64(x729, x657, x705);
 uint64_t x734, uint8_t/*bool*/ x735 = addcarryx_u64(x732, x660, x708);
 uint64_t x737, uint8_t/*bool*/ x738 = addcarryx_u64(x735, x663, x711);
 uint64_t x740, uint8_t/*bool*/ x741 = addcarryx_u64(x738, x666, x714);
 uint64_t x743, uint8_t/*bool*/ x744 = addcarryx_u64(x741, x669, x717);
 uint64_t x746, uint8_t/*bool*/ x747 = addcarryx_u64(x744, x672, x720);
 uint64_t x749, uint8_t/*bool*/ x750 = addcarryx_u64(x747, x675, x723);
 uint64_t x752, uint8_t/*bool*/ x753 = addcarryx_u64(x750, x678, x726);
 uint8_t x754 = ((uint8_t)x753 + x679);
 uint64_t x756, uint64_t x757 = mulx_u64(x15, x19);
 uint64_t x759, uint64_t x760 = mulx_u64(x15, x21);
 uint64_t x762, uint64_t x763 = mulx_u64(x15, x23);
 uint64_t x765, uint64_t x766 = mulx_u64(x15, x25);
 uint64_t x768, uint64_t x769 = mulx_u64(x15, x27);
 uint64_t x771, uint64_t x772 = mulx_u64(x15, x29);
 uint64_t x774, uint64_t x775 = mulx_u64(x15, x31);
 uint64_t x777, uint64_t x778 = mulx_u64(x15, x30);
 uint64_t x780, uint8_t/*bool*/ x781 = addcarryx_u64(0x0, x757, x759);
 uint64_t x783, uint8_t/*bool*/ x784 = addcarryx_u64(x781, x760, x762);
 uint64_t x786, uint8_t/*bool*/ x787 = addcarryx_u64(x784, x763, x765);
 uint64_t x789, uint8_t/*bool*/ x790 = addcarryx_u64(x787, x766, x768);
 uint64_t x792, uint8_t/*bool*/ x793 = addcarryx_u64(x790, x769, x771);
 uint64_t x795, uint8_t/*bool*/ x796 = addcarryx_u64(x793, x772, x774);
 uint64_t x798, uint8_t/*bool*/ x799 = addcarryx_u64(x796, x775, x777);
 uint64_t x801, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x799, x778);
 uint64_t x804, uint8_t/*bool*/ x805 = addcarryx_u64(0x0, x731, x756);
 uint64_t x807, uint8_t/*bool*/ x808 = addcarryx_u64(x805, x734, x780);
 uint64_t x810, uint8_t/*bool*/ x811 = addcarryx_u64(x808, x737, x783);
 uint64_t x813, uint8_t/*bool*/ x814 = addcarryx_u64(x811, x740, x786);
 uint64_t x816, uint8_t/*bool*/ x817 = addcarryx_u64(x814, x743, x789);
 uint64_t x819, uint8_t/*bool*/ x820 = addcarryx_u64(x817, x746, x792);
 uint64_t x822, uint8_t/*bool*/ x823 = addcarryx_u64(x820, x749, x795);
 uint64_t x825, uint8_t/*bool*/ x826 = addcarryx_u64(x823, x752, x798);
 uint64_t x828, uint8_t/*bool*/ x829 = addcarryx_u64(x826, x754, x801);
 uint64_t x831, uint64_t x832 = mulx_u64(x804, 0xffffffffffffffffL);
 uint64_t x834, uint64_t x835 = mulx_u64(x804, 0xffffffffffffffffL);
 uint64_t x837, uint64_t x838 = mulx_u64(x804, 0xffffffffffffffffL);
 uint64_t x840, uint64_t x841 = mulx_u64(x804, 0xfffffffdffffffffL);
 uint64_t x843, uint64_t x844 = mulx_u64(x804, 0xffffffffffffffffL);
 uint64_t x846, uint64_t x847 = mulx_u64(x804, 0xffffffffffffffffL);
 uint64_t x849, uint64_t x850 = mulx_u64(x804, 0xffffffffffffffffL);
 uint64_t x852, uint8_t x853 = mulx_u64_out_u8(x804, 0x3);
 uint64_t x855, uint8_t/*bool*/ x856 = addcarryx_u64(0x0, x832, x834);
 uint64_t x858, uint8_t/*bool*/ x859 = addcarryx_u64(x856, x835, x837);
 uint64_t x861, uint8_t/*bool*/ x862 = addcarryx_u64(x859, x838, x840);
 uint64_t x864, uint8_t/*bool*/ x865 = addcarryx_u64(x862, x841, x843);
 uint64_t x867, uint8_t/*bool*/ x868 = addcarryx_u64(x865, x844, x846);
 uint64_t x870, uint8_t/*bool*/ x871 = addcarryx_u64(x868, x847, x849);
 uint64_t x873, uint8_t/*bool*/ x874 = addcarryx_u64(x871, x850, x852);
 uint8_t x875 = ((uint8_t)0x0 + x874);
 uint8_t x876 = (x875 + x853);
 uint64_t _, uint8_t/*bool*/ x879 = addcarryx_u64(0x0, x804, x831);
 uint64_t x881, uint8_t/*bool*/ x882 = addcarryx_u64(x879, x807, x855);
 uint64_t x884, uint8_t/*bool*/ x885 = addcarryx_u64(x882, x810, x858);
 uint64_t x887, uint8_t/*bool*/ x888 = addcarryx_u64(x885, x813, x861);
 uint64_t x890, uint8_t/*bool*/ x891 = addcarryx_u64(x888, x816, x864);
 uint64_t x893, uint8_t/*bool*/ x894 = addcarryx_u64(x891, x819, x867);
 uint64_t x896, uint8_t/*bool*/ x897 = addcarryx_u64(x894, x822, x870);
 uint64_t x899, uint8_t/*bool*/ x900 = addcarryx_u64(x897, x825, x873);
 uint64_t x902, uint8_t/*bool*/ x903 = addcarryx_u64(x900, x828, x876);
 uint8_t x904 = ((uint8_t)x903 + x829);
 uint64_t x906, uint64_t x907 = mulx_u64(x17, x19);
 uint64_t x909, uint64_t x910 = mulx_u64(x17, x21);
 uint64_t x912, uint64_t x913 = mulx_u64(x17, x23);
 uint64_t x915, uint64_t x916 = mulx_u64(x17, x25);
 uint64_t x918, uint64_t x919 = mulx_u64(x17, x27);
 uint64_t x921, uint64_t x922 = mulx_u64(x17, x29);
 uint64_t x924, uint64_t x925 = mulx_u64(x17, x31);
 uint64_t x927, uint64_t x928 = mulx_u64(x17, x30);
 uint64_t x930, uint8_t/*bool*/ x931 = addcarryx_u64(0x0, x907, x909);
 uint64_t x933, uint8_t/*bool*/ x934 = addcarryx_u64(x931, x910, x912);
 uint64_t x936, uint8_t/*bool*/ x937 = addcarryx_u64(x934, x913, x915);
 uint64_t x939, uint8_t/*bool*/ x940 = addcarryx_u64(x937, x916, x918);
 uint64_t x942, uint8_t/*bool*/ x943 = addcarryx_u64(x940, x919, x921);
 uint64_t x945, uint8_t/*bool*/ x946 = addcarryx_u64(x943, x922, x924);
 uint64_t x948, uint8_t/*bool*/ x949 = addcarryx_u64(x946, x925, x927);
 uint64_t x951, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x949, x928);
 uint64_t x954, uint8_t/*bool*/ x955 = addcarryx_u64(0x0, x881, x906);
 uint64_t x957, uint8_t/*bool*/ x958 = addcarryx_u64(x955, x884, x930);
 uint64_t x960, uint8_t/*bool*/ x961 = addcarryx_u64(x958, x887, x933);
 uint64_t x963, uint8_t/*bool*/ x964 = addcarryx_u64(x961, x890, x936);
 uint64_t x966, uint8_t/*bool*/ x967 = addcarryx_u64(x964, x893, x939);
 uint64_t x969, uint8_t/*bool*/ x970 = addcarryx_u64(x967, x896, x942);
 uint64_t x972, uint8_t/*bool*/ x973 = addcarryx_u64(x970, x899, x945);
 uint64_t x975, uint8_t/*bool*/ x976 = addcarryx_u64(x973, x902, x948);
 uint64_t x978, uint8_t/*bool*/ x979 = addcarryx_u64(x976, x904, x951);
 uint64_t x981, uint64_t x982 = mulx_u64(x954, 0xffffffffffffffffL);
 uint64_t x984, uint64_t x985 = mulx_u64(x954, 0xffffffffffffffffL);
 uint64_t x987, uint64_t x988 = mulx_u64(x954, 0xffffffffffffffffL);
 uint64_t x990, uint64_t x991 = mulx_u64(x954, 0xfffffffdffffffffL);
 uint64_t x993, uint64_t x994 = mulx_u64(x954, 0xffffffffffffffffL);
 uint64_t x996, uint64_t x997 = mulx_u64(x954, 0xffffffffffffffffL);
 uint64_t x999, uint64_t x1000 = mulx_u64(x954, 0xffffffffffffffffL);
 uint64_t x1002, uint8_t x1003 = mulx_u64_out_u8(x954, 0x3);
 uint64_t x1005, uint8_t/*bool*/ x1006 = addcarryx_u64(0x0, x982, x984);
 uint64_t x1008, uint8_t/*bool*/ x1009 = addcarryx_u64(x1006, x985, x987);
 uint64_t x1011, uint8_t/*bool*/ x1012 = addcarryx_u64(x1009, x988, x990);
 uint64_t x1014, uint8_t/*bool*/ x1015 = addcarryx_u64(x1012, x991, x993);
 uint64_t x1017, uint8_t/*bool*/ x1018 = addcarryx_u64(x1015, x994, x996);
 uint64_t x1020, uint8_t/*bool*/ x1021 = addcarryx_u64(x1018, x997, x999);
 uint64_t x1023, uint8_t/*bool*/ x1024 = addcarryx_u64(x1021, x1000, x1002);
 uint8_t x1025 = ((uint8_t)0x0 + x1024);
 uint8_t x1026 = (x1025 + x1003);
 uint64_t _, uint8_t/*bool*/ x1029 = addcarryx_u64(0x0, x954, x981);
 uint64_t x1031, uint8_t/*bool*/ x1032 = addcarryx_u64(x1029, x957, x1005);
 uint64_t x1034, uint8_t/*bool*/ x1035 = addcarryx_u64(x1032, x960, x1008);
 uint64_t x1037, uint8_t/*bool*/ x1038 = addcarryx_u64(x1035, x963, x1011);
 uint64_t x1040, uint8_t/*bool*/ x1041 = addcarryx_u64(x1038, x966, x1014);
 uint64_t x1043, uint8_t/*bool*/ x1044 = addcarryx_u64(x1041, x969, x1017);
 uint64_t x1046, uint8_t/*bool*/ x1047 = addcarryx_u64(x1044, x972, x1020);
 uint64_t x1049, uint8_t/*bool*/ x1050 = addcarryx_u64(x1047, x975, x1023);
 uint64_t x1052, uint8_t/*bool*/ x1053 = addcarryx_u64(x1050, x978, x1026);
 uint8_t x1054 = ((uint8_t)x1053 + x979);
 uint64_t x1056, uint64_t x1057 = mulx_u64(x16, x19);
 uint64_t x1059, uint64_t x1060 = mulx_u64(x16, x21);
 uint64_t x1062, uint64_t x1063 = mulx_u64(x16, x23);
 uint64_t x1065, uint64_t x1066 = mulx_u64(x16, x25);
 uint64_t x1068, uint64_t x1069 = mulx_u64(x16, x27);
 uint64_t x1071, uint64_t x1072 = mulx_u64(x16, x29);
 uint64_t x1074, uint64_t x1075 = mulx_u64(x16, x31);
 uint64_t x1077, uint64_t x1078 = mulx_u64(x16, x30);
 uint64_t x1080, uint8_t/*bool*/ x1081 = addcarryx_u64(0x0, x1057, x1059);
 uint64_t x1083, uint8_t/*bool*/ x1084 = addcarryx_u64(x1081, x1060, x1062);
 uint64_t x1086, uint8_t/*bool*/ x1087 = addcarryx_u64(x1084, x1063, x1065);
 uint64_t x1089, uint8_t/*bool*/ x1090 = addcarryx_u64(x1087, x1066, x1068);
 uint64_t x1092, uint8_t/*bool*/ x1093 = addcarryx_u64(x1090, x1069, x1071);
 uint64_t x1095, uint8_t/*bool*/ x1096 = addcarryx_u64(x1093, x1072, x1074);
 uint64_t x1098, uint8_t/*bool*/ x1099 = addcarryx_u64(x1096, x1075, x1077);
 uint64_t x1101, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x1099, x1078);
 uint64_t x1104, uint8_t/*bool*/ x1105 = addcarryx_u64(0x0, x1031, x1056);
 uint64_t x1107, uint8_t/*bool*/ x1108 = addcarryx_u64(x1105, x1034, x1080);
 uint64_t x1110, uint8_t/*bool*/ x1111 = addcarryx_u64(x1108, x1037, x1083);
 uint64_t x1113, uint8_t/*bool*/ x1114 = addcarryx_u64(x1111, x1040, x1086);
 uint64_t x1116, uint8_t/*bool*/ x1117 = addcarryx_u64(x1114, x1043, x1089);
 uint64_t x1119, uint8_t/*bool*/ x1120 = addcarryx_u64(x1117, x1046, x1092);
 uint64_t x1122, uint8_t/*bool*/ x1123 = addcarryx_u64(x1120, x1049, x1095);
 uint64_t x1125, uint8_t/*bool*/ x1126 = addcarryx_u64(x1123, x1052, x1098);
 uint64_t x1128, uint8_t/*bool*/ x1129 = addcarryx_u64(x1126, x1054, x1101);
 uint64_t x1131, uint64_t x1132 = mulx_u64(x1104, 0xffffffffffffffffL);
 uint64_t x1134, uint64_t x1135 = mulx_u64(x1104, 0xffffffffffffffffL);
 uint64_t x1137, uint64_t x1138 = mulx_u64(x1104, 0xffffffffffffffffL);
 uint64_t x1140, uint64_t x1141 = mulx_u64(x1104, 0xfffffffdffffffffL);
 uint64_t x1143, uint64_t x1144 = mulx_u64(x1104, 0xffffffffffffffffL);
 uint64_t x1146, uint64_t x1147 = mulx_u64(x1104, 0xffffffffffffffffL);
 uint64_t x1149, uint64_t x1150 = mulx_u64(x1104, 0xffffffffffffffffL);
 uint64_t x1152, uint8_t x1153 = mulx_u64_out_u8(x1104, 0x3);
 uint64_t x1155, uint8_t/*bool*/ x1156 = addcarryx_u64(0x0, x1132, x1134);
 uint64_t x1158, uint8_t/*bool*/ x1159 = addcarryx_u64(x1156, x1135, x1137);
 uint64_t x1161, uint8_t/*bool*/ x1162 = addcarryx_u64(x1159, x1138, x1140);
 uint64_t x1164, uint8_t/*bool*/ x1165 = addcarryx_u64(x1162, x1141, x1143);
 uint64_t x1167, uint8_t/*bool*/ x1168 = addcarryx_u64(x1165, x1144, x1146);
 uint64_t x1170, uint8_t/*bool*/ x1171 = addcarryx_u64(x1168, x1147, x1149);
 uint64_t x1173, uint8_t/*bool*/ x1174 = addcarryx_u64(x1171, x1150, x1152);
 uint8_t x1175 = ((uint8_t)0x0 + x1174);
 uint8_t x1176 = (x1175 + x1153);
 uint64_t _, uint8_t/*bool*/ x1179 = addcarryx_u64(0x0, x1104, x1131);
 uint64_t x1181, uint8_t/*bool*/ x1182 = addcarryx_u64(x1179, x1107, x1155);
 uint64_t x1184, uint8_t/*bool*/ x1185 = addcarryx_u64(x1182, x1110, x1158);
 uint64_t x1187, uint8_t/*bool*/ x1188 = addcarryx_u64(x1185, x1113, x1161);
 uint64_t x1190, uint8_t/*bool*/ x1191 = addcarryx_u64(x1188, x1116, x1164);
 uint64_t x1193, uint8_t/*bool*/ x1194 = addcarryx_u64(x1191, x1119, x1167);
 uint64_t x1196, uint8_t/*bool*/ x1197 = addcarryx_u64(x1194, x1122, x1170);
 uint64_t x1199, uint8_t/*bool*/ x1200 = addcarryx_u64(x1197, x1125, x1173);
 uint64_t x1202, uint8_t/*bool*/ x1203 = addcarryx_u64(x1200, x1128, x1176);
 uint8_t x1204 = ((uint8_t)x1203 + x1129);
 uint64_t x1206, uint8_t/*bool*/ x1207 = subborrow_u64(0x0, x1181, 0xffffffffffffffffL);
 uint64_t x1209, uint8_t/*bool*/ x1210 = subborrow_u64(x1207, x1184, 0xffffffffffffffffL);
 uint64_t x1212, uint8_t/*bool*/ x1213 = subborrow_u64(x1210, x1187, 0xffffffffffffffffL);
 uint64_t x1215, uint8_t/*bool*/ x1216 = subborrow_u64(x1213, x1190, 0xfffffffdffffffffL);
 uint64_t x1218, uint8_t/*bool*/ x1219 = subborrow_u64(x1216, x1193, 0xffffffffffffffffL);
 uint64_t x1221, uint8_t/*bool*/ x1222 = subborrow_u64(x1219, x1196, 0xffffffffffffffffL);
 uint64_t x1224, uint8_t/*bool*/ x1225 = subborrow_u64(x1222, x1199, 0xffffffffffffffffL);
 uint64_t x1227, uint8_t/*bool*/ x1228 = subborrow_u64(x1225, x1202, 0x3);
 uint64_t _, uint8_t/*bool*/ x1231 = subborrow_u64(x1228, x1204, 0x0);
 uint64_t x1232 = cmovznz64(x1231, x1227, x1202);
 uint64_t x1233 = cmovznz64(x1231, x1224, x1199);
 uint64_t x1234 = cmovznz64(x1231, x1221, x1196);
 uint64_t x1235 = cmovznz64(x1231, x1218, x1193);
 uint64_t x1236 = cmovznz64(x1231, x1215, x1190);
 uint64_t x1237 = cmovznz64(x1231, x1212, x1187);
 uint64_t x1238 = cmovznz64(x1231, x1209, x1184);
 uint64_t x1239 = cmovznz64(x1231, x1206, x1181);
 return (x1232, x1233, x1234, x1235, x1236, x1237, x1238, x1239))
(x, x0)%core
     : word64 * word64 * word64 * word64 * word64 * word64 * word64 * word64 → word64 * word64 * word64 * word64 * word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)
