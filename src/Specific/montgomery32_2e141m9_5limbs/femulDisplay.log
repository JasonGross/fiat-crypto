mul = λ var : Z.Syntax.base_type → Type,
λ '(x8, x9, x7, x5, x3, (x16, x17, x15, x13, x11))%core,
uint32_t x19, uint32_t x20 = mulx_u32(x3, x11);
uint32_t x22, uint32_t x23 = mulx_u32(x3, x13);
uint32_t x25, uint32_t x26 = mulx_u32(x3, x15);
uint32_t x28, uint32_t x29 = mulx_u32(x3, x17);
uint32_t x31, uint32_t x32 = mulx_u32(x3, x16);
uint32_t x34, uint8_t x35 = addcarryx_u32(0x0, x20, x22);
uint32_t x37, uint8_t x38 = addcarryx_u32(x35, x23, x25);
uint32_t x40, uint8_t x41 = addcarryx_u32(x38, x26, x28);
uint32_t x43, uint8_t x44 = addcarryx_u32(x41, x29, x31);
uint32_t x46, uint8_t _ = addcarryx_u32(0x0, x44, x32);
uint32_t x49, uint32_t _ = mulx_u32(x19, 0x38e38e39);
uint32_t x52, uint32_t x53 = mulx_u32(x49, 0xfffffff7);
uint32_t x55, uint32_t x56 = mulx_u32(x49, 0xffffffff);
uint32_t x58, uint32_t x59 = mulx_u32(x49, 0xffffffff);
uint32_t x61, uint32_t x62 = mulx_u32(x49, 0xffffffff);
uint32_t x64, uint32_t x65 = mulx_u32(x49, 0x1fff);
uint32_t x67, uint8_t x68 = addcarryx_u32(0x0, x53, x55);
uint32_t x70, uint8_t x71 = addcarryx_u32(x68, x56, x58);
uint32_t x73, uint8_t x74 = addcarryx_u32(x71, x59, x61);
uint32_t x76, uint8_t x77 = addcarryx_u32(x74, x62, x64);
uint32_t x79, uint8_t _ = addcarryx_u32(0x0, x77, x65);
uint32_t _, uint8_t x83 = addcarryx_u32(0x0, x19, x52);
uint32_t x85, uint8_t x86 = addcarryx_u32(x83, x34, x67);
uint32_t x88, uint8_t x89 = addcarryx_u32(x86, x37, x70);
uint32_t x91, uint8_t x92 = addcarryx_u32(x89, x40, x73);
uint32_t x94, uint8_t x95 = addcarryx_u32(x92, x43, x76);
uint32_t x97, uint8_t x98 = addcarryx_u32(x95, x46, x79);
uint32_t x100, uint32_t x101 = mulx_u32(x5, x11);
uint32_t x103, uint32_t x104 = mulx_u32(x5, x13);
uint32_t x106, uint32_t x107 = mulx_u32(x5, x15);
uint32_t x109, uint32_t x110 = mulx_u32(x5, x17);
uint32_t x112, uint32_t x113 = mulx_u32(x5, x16);
uint32_t x115, uint8_t x116 = addcarryx_u32(0x0, x101, x103);
uint32_t x118, uint8_t x119 = addcarryx_u32(x116, x104, x106);
uint32_t x121, uint8_t x122 = addcarryx_u32(x119, x107, x109);
uint32_t x124, uint8_t x125 = addcarryx_u32(x122, x110, x112);
uint32_t x127, uint8_t _ = addcarryx_u32(0x0, x125, x113);
uint32_t x130, uint8_t x131 = addcarryx_u32(0x0, x85, x100);
uint32_t x133, uint8_t x134 = addcarryx_u32(x131, x88, x115);
uint32_t x136, uint8_t x137 = addcarryx_u32(x134, x91, x118);
uint32_t x139, uint8_t x140 = addcarryx_u32(x137, x94, x121);
uint32_t x142, uint8_t x143 = addcarryx_u32(x140, x97, x124);
uint32_t x145, uint8_t x146 = addcarryx_u32(x143, x98, x127);
uint32_t x148, uint32_t _ = mulx_u32(x130, 0x38e38e39);
uint32_t x151, uint32_t x152 = mulx_u32(x148, 0xfffffff7);
uint32_t x154, uint32_t x155 = mulx_u32(x148, 0xffffffff);
uint32_t x157, uint32_t x158 = mulx_u32(x148, 0xffffffff);
uint32_t x160, uint32_t x161 = mulx_u32(x148, 0xffffffff);
uint32_t x163, uint32_t x164 = mulx_u32(x148, 0x1fff);
uint32_t x166, uint8_t x167 = addcarryx_u32(0x0, x152, x154);
uint32_t x169, uint8_t x170 = addcarryx_u32(x167, x155, x157);
uint32_t x172, uint8_t x173 = addcarryx_u32(x170, x158, x160);
uint32_t x175, uint8_t x176 = addcarryx_u32(x173, x161, x163);
uint32_t x178, uint8_t _ = addcarryx_u32(0x0, x176, x164);
uint32_t _, uint8_t x182 = addcarryx_u32(0x0, x130, x151);
uint32_t x184, uint8_t x185 = addcarryx_u32(x182, x133, x166);
uint32_t x187, uint8_t x188 = addcarryx_u32(x185, x136, x169);
uint32_t x190, uint8_t x191 = addcarryx_u32(x188, x139, x172);
uint32_t x193, uint8_t x194 = addcarryx_u32(x191, x142, x175);
uint32_t x196, uint8_t x197 = addcarryx_u32(x194, x145, x178);
uint8_t x198 = (x197 + x146);
uint32_t x200, uint32_t x201 = mulx_u32(x7, x11);
uint32_t x203, uint32_t x204 = mulx_u32(x7, x13);
uint32_t x206, uint32_t x207 = mulx_u32(x7, x15);
uint32_t x209, uint32_t x210 = mulx_u32(x7, x17);
uint32_t x212, uint32_t x213 = mulx_u32(x7, x16);
uint32_t x215, uint8_t x216 = addcarryx_u32(0x0, x201, x203);
uint32_t x218, uint8_t x219 = addcarryx_u32(x216, x204, x206);
uint32_t x221, uint8_t x222 = addcarryx_u32(x219, x207, x209);
uint32_t x224, uint8_t x225 = addcarryx_u32(x222, x210, x212);
uint32_t x227, uint8_t _ = addcarryx_u32(0x0, x225, x213);
uint32_t x230, uint8_t x231 = addcarryx_u32(0x0, x184, x200);
uint32_t x233, uint8_t x234 = addcarryx_u32(x231, x187, x215);
uint32_t x236, uint8_t x237 = addcarryx_u32(x234, x190, x218);
uint32_t x239, uint8_t x240 = addcarryx_u32(x237, x193, x221);
uint32_t x242, uint8_t x243 = addcarryx_u32(x240, x196, x224);
uint32_t x245, uint8_t x246 = addcarryx_u32(x243, x198, x227);
uint32_t x248, uint32_t _ = mulx_u32(x230, 0x38e38e39);
uint32_t x251, uint32_t x252 = mulx_u32(x248, 0xfffffff7);
uint32_t x254, uint32_t x255 = mulx_u32(x248, 0xffffffff);
uint32_t x257, uint32_t x258 = mulx_u32(x248, 0xffffffff);
uint32_t x260, uint32_t x261 = mulx_u32(x248, 0xffffffff);
uint32_t x263, uint32_t x264 = mulx_u32(x248, 0x1fff);
uint32_t x266, uint8_t x267 = addcarryx_u32(0x0, x252, x254);
uint32_t x269, uint8_t x270 = addcarryx_u32(x267, x255, x257);
uint32_t x272, uint8_t x273 = addcarryx_u32(x270, x258, x260);
uint32_t x275, uint8_t x276 = addcarryx_u32(x273, x261, x263);
uint32_t x278, uint8_t _ = addcarryx_u32(0x0, x276, x264);
uint32_t _, uint8_t x282 = addcarryx_u32(0x0, x230, x251);
uint32_t x284, uint8_t x285 = addcarryx_u32(x282, x233, x266);
uint32_t x287, uint8_t x288 = addcarryx_u32(x285, x236, x269);
uint32_t x290, uint8_t x291 = addcarryx_u32(x288, x239, x272);
uint32_t x293, uint8_t x294 = addcarryx_u32(x291, x242, x275);
uint32_t x296, uint8_t x297 = addcarryx_u32(x294, x245, x278);
uint8_t x298 = (x297 + x246);
uint32_t x300, uint32_t x301 = mulx_u32(x9, x11);
uint32_t x303, uint32_t x304 = mulx_u32(x9, x13);
uint32_t x306, uint32_t x307 = mulx_u32(x9, x15);
uint32_t x309, uint32_t x310 = mulx_u32(x9, x17);
uint32_t x312, uint32_t x313 = mulx_u32(x9, x16);
uint32_t x315, uint8_t x316 = addcarryx_u32(0x0, x301, x303);
uint32_t x318, uint8_t x319 = addcarryx_u32(x316, x304, x306);
uint32_t x321, uint8_t x322 = addcarryx_u32(x319, x307, x309);
uint32_t x324, uint8_t x325 = addcarryx_u32(x322, x310, x312);
uint32_t x327, uint8_t _ = addcarryx_u32(0x0, x325, x313);
uint32_t x330, uint8_t x331 = addcarryx_u32(0x0, x284, x300);
uint32_t x333, uint8_t x334 = addcarryx_u32(x331, x287, x315);
uint32_t x336, uint8_t x337 = addcarryx_u32(x334, x290, x318);
uint32_t x339, uint8_t x340 = addcarryx_u32(x337, x293, x321);
uint32_t x342, uint8_t x343 = addcarryx_u32(x340, x296, x324);
uint32_t x345, uint8_t x346 = addcarryx_u32(x343, x298, x327);
uint32_t x348, uint32_t _ = mulx_u32(x330, 0x38e38e39);
uint32_t x351, uint32_t x352 = mulx_u32(x348, 0xfffffff7);
uint32_t x354, uint32_t x355 = mulx_u32(x348, 0xffffffff);
uint32_t x357, uint32_t x358 = mulx_u32(x348, 0xffffffff);
uint32_t x360, uint32_t x361 = mulx_u32(x348, 0xffffffff);
uint32_t x363, uint32_t x364 = mulx_u32(x348, 0x1fff);
uint32_t x366, uint8_t x367 = addcarryx_u32(0x0, x352, x354);
uint32_t x369, uint8_t x370 = addcarryx_u32(x367, x355, x357);
uint32_t x372, uint8_t x373 = addcarryx_u32(x370, x358, x360);
uint32_t x375, uint8_t x376 = addcarryx_u32(x373, x361, x363);
uint32_t x378, uint8_t _ = addcarryx_u32(0x0, x376, x364);
uint32_t _, uint8_t x382 = addcarryx_u32(0x0, x330, x351);
uint32_t x384, uint8_t x385 = addcarryx_u32(x382, x333, x366);
uint32_t x387, uint8_t x388 = addcarryx_u32(x385, x336, x369);
uint32_t x390, uint8_t x391 = addcarryx_u32(x388, x339, x372);
uint32_t x393, uint8_t x394 = addcarryx_u32(x391, x342, x375);
uint32_t x396, uint8_t x397 = addcarryx_u32(x394, x345, x378);
uint8_t x398 = (x397 + x346);
uint32_t x400, uint32_t x401 = mulx_u32(x8, x11);
uint32_t x403, uint32_t x404 = mulx_u32(x8, x13);
uint32_t x406, uint32_t x407 = mulx_u32(x8, x15);
uint32_t x409, uint32_t x410 = mulx_u32(x8, x17);
uint32_t x412, uint32_t x413 = mulx_u32(x8, x16);
uint32_t x415, uint8_t x416 = addcarryx_u32(0x0, x401, x403);
uint32_t x418, uint8_t x419 = addcarryx_u32(x416, x404, x406);
uint32_t x421, uint8_t x422 = addcarryx_u32(x419, x407, x409);
uint32_t x424, uint8_t x425 = addcarryx_u32(x422, x410, x412);
uint32_t x427, uint8_t _ = addcarryx_u32(0x0, x425, x413);
uint32_t x430, uint8_t x431 = addcarryx_u32(0x0, x384, x400);
uint32_t x433, uint8_t x434 = addcarryx_u32(x431, x387, x415);
uint32_t x436, uint8_t x437 = addcarryx_u32(x434, x390, x418);
uint32_t x439, uint8_t x440 = addcarryx_u32(x437, x393, x421);
uint32_t x442, uint8_t x443 = addcarryx_u32(x440, x396, x424);
uint32_t x445, uint8_t x446 = addcarryx_u32(x443, x398, x427);
uint32_t x448, uint32_t _ = mulx_u32(x430, 0x38e38e39);
uint32_t x451, uint32_t x452 = mulx_u32(x448, 0xfffffff7);
uint32_t x454, uint32_t x455 = mulx_u32(x448, 0xffffffff);
uint32_t x457, uint32_t x458 = mulx_u32(x448, 0xffffffff);
uint32_t x460, uint32_t x461 = mulx_u32(x448, 0xffffffff);
uint32_t x463, uint32_t x464 = mulx_u32(x448, 0x1fff);
uint32_t x466, uint8_t x467 = addcarryx_u32(0x0, x452, x454);
uint32_t x469, uint8_t x470 = addcarryx_u32(x467, x455, x457);
uint32_t x472, uint8_t x473 = addcarryx_u32(x470, x458, x460);
uint32_t x475, uint8_t x476 = addcarryx_u32(x473, x461, x463);
uint32_t x478, uint8_t _ = addcarryx_u32(0x0, x476, x464);
uint32_t _, uint8_t x482 = addcarryx_u32(0x0, x430, x451);
uint32_t x484, uint8_t x485 = addcarryx_u32(x482, x433, x466);
uint32_t x487, uint8_t x488 = addcarryx_u32(x485, x436, x469);
uint32_t x490, uint8_t x491 = addcarryx_u32(x488, x439, x472);
uint32_t x493, uint8_t x494 = addcarryx_u32(x491, x442, x475);
uint32_t x496, uint8_t x497 = addcarryx_u32(x494, x445, x478);
uint8_t x498 = (x497 + x446);
uint32_t x500, uint8_t x501 = subborrow_u32(0x0, x484, 0xfffffff7);
uint32_t x503, uint8_t x504 = subborrow_u32(x501, x487, 0xffffffff);
uint32_t x506, uint8_t x507 = subborrow_u32(x504, x490, 0xffffffff);
uint32_t x509, uint8_t x510 = subborrow_u32(x507, x493, 0xffffffff);
uint32_t x512, uint8_t x513 = subborrow_u32(x510, x496, 0x1fff);
uint32_t _, uint8_t x516 = subborrow_u32(x513, x498, 0x0);
(cmovznz32(x516, x512, x496), cmovznz32(x516, x509, x493), cmovznz32(x516, x506, x490), cmovznz32(x516, x503, x487), cmovznz32(x516, x500, x484))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t) -> uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

Argument scope is [function_scope]
