mul = λ var : Z.Syntax.base_type → Type,
λ '(x6, x7, x5, x3, (x12, x13, x11, x9))%core,
uint32_t x15, uint32_t x16 = mulx_u32(x3, x9);
uint32_t x18, uint32_t x19 = mulx_u32(x3, x11);
uint32_t x21, uint32_t x22 = mulx_u32(x3, x13);
uint32_t x24, uint32_t x25 = mulx_u32(x3, x12);
uint32_t x27, uint8_t x28 = addcarryx_u32(0x0, x16, x18);
uint32_t x30, uint8_t x31 = addcarryx_u32(x28, x19, x21);
uint32_t x33, uint8_t x34 = addcarryx_u32(x31, x22, x24);
uint32_t x36, uint8_t _ = addcarryx_u32(0x0, x34, x25);
uint32_t x39, uint32_t x40 = mulx_u32(x15, 0xffffffff);
uint32_t x42, uint32_t x43 = mulx_u32(x15, 0xffffffff);
uint32_t x45, uint32_t x46 = mulx_u32(x15, 0xffffffff);
uint32_t x48, uint32_t x49 = mulx_u32(x15, 0x7fffffff);
uint32_t x51, uint8_t x52 = addcarryx_u32(0x0, x40, x42);
uint32_t x54, uint8_t x55 = addcarryx_u32(x52, x43, x45);
uint32_t x57, uint8_t x58 = addcarryx_u32(x55, x46, x48);
uint32_t x60, uint8_t _ = addcarryx_u32(0x0, x58, x49);
uint32_t _, uint8_t x64 = addcarryx_u32(0x0, x15, x39);
uint32_t x66, uint8_t x67 = addcarryx_u32(x64, x27, x51);
uint32_t x69, uint8_t x70 = addcarryx_u32(x67, x30, x54);
uint32_t x72, uint8_t x73 = addcarryx_u32(x70, x33, x57);
uint32_t x75, uint8_t x76 = addcarryx_u32(x73, x36, x60);
uint32_t x78, uint32_t x79 = mulx_u32(x5, x9);
uint32_t x81, uint32_t x82 = mulx_u32(x5, x11);
uint32_t x84, uint32_t x85 = mulx_u32(x5, x13);
uint32_t x87, uint32_t x88 = mulx_u32(x5, x12);
uint32_t x90, uint8_t x91 = addcarryx_u32(0x0, x79, x81);
uint32_t x93, uint8_t x94 = addcarryx_u32(x91, x82, x84);
uint32_t x96, uint8_t x97 = addcarryx_u32(x94, x85, x87);
uint32_t x99, uint8_t _ = addcarryx_u32(0x0, x97, x88);
uint32_t x102, uint8_t x103 = addcarryx_u32(0x0, x66, x78);
uint32_t x105, uint8_t x106 = addcarryx_u32(x103, x69, x90);
uint32_t x108, uint8_t x109 = addcarryx_u32(x106, x72, x93);
uint32_t x111, uint8_t x112 = addcarryx_u32(x109, x75, x96);
uint32_t x114, uint8_t x115 = addcarryx_u32(x112, x76, x99);
uint32_t x117, uint32_t x118 = mulx_u32(x102, 0xffffffff);
uint32_t x120, uint32_t x121 = mulx_u32(x102, 0xffffffff);
uint32_t x123, uint32_t x124 = mulx_u32(x102, 0xffffffff);
uint32_t x126, uint32_t x127 = mulx_u32(x102, 0x7fffffff);
uint32_t x129, uint8_t x130 = addcarryx_u32(0x0, x118, x120);
uint32_t x132, uint8_t x133 = addcarryx_u32(x130, x121, x123);
uint32_t x135, uint8_t x136 = addcarryx_u32(x133, x124, x126);
uint32_t x138, uint8_t _ = addcarryx_u32(0x0, x136, x127);
uint32_t _, uint8_t x142 = addcarryx_u32(0x0, x102, x117);
uint32_t x144, uint8_t x145 = addcarryx_u32(x142, x105, x129);
uint32_t x147, uint8_t x148 = addcarryx_u32(x145, x108, x132);
uint32_t x150, uint8_t x151 = addcarryx_u32(x148, x111, x135);
uint32_t x153, uint8_t x154 = addcarryx_u32(x151, x114, x138);
uint8_t x155 = (x154 + x115);
uint32_t x157, uint32_t x158 = mulx_u32(x7, x9);
uint32_t x160, uint32_t x161 = mulx_u32(x7, x11);
uint32_t x163, uint32_t x164 = mulx_u32(x7, x13);
uint32_t x166, uint32_t x167 = mulx_u32(x7, x12);
uint32_t x169, uint8_t x170 = addcarryx_u32(0x0, x158, x160);
uint32_t x172, uint8_t x173 = addcarryx_u32(x170, x161, x163);
uint32_t x175, uint8_t x176 = addcarryx_u32(x173, x164, x166);
uint32_t x178, uint8_t _ = addcarryx_u32(0x0, x176, x167);
uint32_t x181, uint8_t x182 = addcarryx_u32(0x0, x144, x157);
uint32_t x184, uint8_t x185 = addcarryx_u32(x182, x147, x169);
uint32_t x187, uint8_t x188 = addcarryx_u32(x185, x150, x172);
uint32_t x190, uint8_t x191 = addcarryx_u32(x188, x153, x175);
uint32_t x193, uint8_t x194 = addcarryx_u32(x191, x155, x178);
uint32_t x196, uint32_t x197 = mulx_u32(x181, 0xffffffff);
uint32_t x199, uint32_t x200 = mulx_u32(x181, 0xffffffff);
uint32_t x202, uint32_t x203 = mulx_u32(x181, 0xffffffff);
uint32_t x205, uint32_t x206 = mulx_u32(x181, 0x7fffffff);
uint32_t x208, uint8_t x209 = addcarryx_u32(0x0, x197, x199);
uint32_t x211, uint8_t x212 = addcarryx_u32(x209, x200, x202);
uint32_t x214, uint8_t x215 = addcarryx_u32(x212, x203, x205);
uint32_t x217, uint8_t _ = addcarryx_u32(0x0, x215, x206);
uint32_t _, uint8_t x221 = addcarryx_u32(0x0, x181, x196);
uint32_t x223, uint8_t x224 = addcarryx_u32(x221, x184, x208);
uint32_t x226, uint8_t x227 = addcarryx_u32(x224, x187, x211);
uint32_t x229, uint8_t x230 = addcarryx_u32(x227, x190, x214);
uint32_t x232, uint8_t x233 = addcarryx_u32(x230, x193, x217);
uint8_t x234 = (x233 + x194);
uint32_t x236, uint32_t x237 = mulx_u32(x6, x9);
uint32_t x239, uint32_t x240 = mulx_u32(x6, x11);
uint32_t x242, uint32_t x243 = mulx_u32(x6, x13);
uint32_t x245, uint32_t x246 = mulx_u32(x6, x12);
uint32_t x248, uint8_t x249 = addcarryx_u32(0x0, x237, x239);
uint32_t x251, uint8_t x252 = addcarryx_u32(x249, x240, x242);
uint32_t x254, uint8_t x255 = addcarryx_u32(x252, x243, x245);
uint32_t x257, uint8_t _ = addcarryx_u32(0x0, x255, x246);
uint32_t x260, uint8_t x261 = addcarryx_u32(0x0, x223, x236);
uint32_t x263, uint8_t x264 = addcarryx_u32(x261, x226, x248);
uint32_t x266, uint8_t x267 = addcarryx_u32(x264, x229, x251);
uint32_t x269, uint8_t x270 = addcarryx_u32(x267, x232, x254);
uint32_t x272, uint8_t x273 = addcarryx_u32(x270, x234, x257);
uint32_t x275, uint32_t x276 = mulx_u32(x260, 0xffffffff);
uint32_t x278, uint32_t x279 = mulx_u32(x260, 0xffffffff);
uint32_t x281, uint32_t x282 = mulx_u32(x260, 0xffffffff);
uint32_t x284, uint32_t x285 = mulx_u32(x260, 0x7fffffff);
uint32_t x287, uint8_t x288 = addcarryx_u32(0x0, x276, x278);
uint32_t x290, uint8_t x291 = addcarryx_u32(x288, x279, x281);
uint32_t x293, uint8_t x294 = addcarryx_u32(x291, x282, x284);
uint32_t x296, uint8_t _ = addcarryx_u32(0x0, x294, x285);
uint32_t _, uint8_t x300 = addcarryx_u32(0x0, x260, x275);
uint32_t x302, uint8_t x303 = addcarryx_u32(x300, x263, x287);
uint32_t x305, uint8_t x306 = addcarryx_u32(x303, x266, x290);
uint32_t x308, uint8_t x309 = addcarryx_u32(x306, x269, x293);
uint32_t x311, uint8_t x312 = addcarryx_u32(x309, x272, x296);
uint8_t x313 = (x312 + x273);
uint32_t x315, uint8_t x316 = subborrow_u32(0x0, x302, 0xffffffff);
uint32_t x318, uint8_t x319 = subborrow_u32(x316, x305, 0xffffffff);
uint32_t x321, uint8_t x322 = subborrow_u32(x319, x308, 0xffffffff);
uint32_t x324, uint8_t x325 = subborrow_u32(x322, x311, 0x7fffffff);
uint32_t _, uint8_t x328 = subborrow_u32(x325, x313, 0x0);
(cmovznz32(x328, x324, x311), cmovznz32(x328, x321, x308), cmovznz32(x328, x318, x305), cmovznz32(x328, x315, x302))
     : ∀ var : Z.Syntax.base_type → Type, expr Z.Syntax.base_type Z.Syntax.op (uint32_t * uint32_t * uint32_t * uint32_t * (uint32_t * uint32_t * uint32_t * uint32_t) -> uint32_t * uint32_t * uint32_t * uint32_t)

Argument scope is [function_scope]
